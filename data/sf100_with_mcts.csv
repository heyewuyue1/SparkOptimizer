id,path,sql,rewrite,knobs,schema,mcts,mcts_knobs
0,sql_001.sql,"select  count(*) 
from store_sales
    ,household_demographics 
    ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk   
    and ss_hdemo_sk = household_demographics.hd_demo_sk 
    and ss_store_sk = s_store_sk
    and time_dim.t_hour = 8
    and time_dim.t_minute >= 30
    and household_demographics.hd_dep_count = 5
    and store.s_store_name = 'ese'
order by count(*)
limit 100;","select  count(*) 
from store_sales
    ,household_demographics 
    ,time_dim, store
where ss_sold_time_sk = time_dim.t_time_sk   
    and ss_hdemo_sk = household_demographics.hd_demo_sk 
    and ss_store_sk = s_store_sk
    and time_dim.t_hour = 8
    and time_dim.t_minute >= 30
    and household_demographics.hd_dep_count = 5
    and store.s_store_name = 'ese'
order by count(*)
limit 100;",None,tpcds,"SELECT COALESCE(SUM(t98.EXPR_0 * t100.EXPR_0), 0)

FROM (SELECT t94.ss_store_sk, COALESCE(SUM(t94.EXPR_0 * t96.EXPR_0), 0) AS EXPR_0

FROM (SELECT t90.ss_sold_time_sk, t90.ss_store_sk, COALESCE(SUM(t90.EXPR_0 * t92.EXPR_0), 0) AS EXPR_0

FROM (SELECT ss_sold_time_sk, ss_hdemo_sk, ss_store_sk, COUNT(*) AS EXPR_0

FROM store_sales

GROUP BY ss_sold_time_sk, ss_hdemo_sk, ss_store_sk) AS t90

INNER JOIN (SELECT hd_demo_sk, COUNT(*) AS EXPR_0

FROM household_demographics

WHERE hd_dep_count = 5

GROUP BY hd_demo_sk) AS t92 ON t90.ss_hdemo_sk = t92.hd_demo_sk

GROUP BY t90.ss_sold_time_sk, t90.ss_store_sk) AS t94

INNER JOIN (SELECT t_time_sk, COUNT(*) AS EXPR_0

FROM time_dim

WHERE t_hour = 8 AND t_minute >= 30

GROUP BY t_time_sk) AS t96 ON t94.ss_sold_time_sk = t96.t_time_sk

GROUP BY t94.ss_store_sk) AS t98

INNER JOIN (SELECT s_store_sk, COUNT(*) AS EXPR_0

FROM store

WHERE s_store_name = 'ese'

GROUP BY s_store_sk) AS t100 ON t98.ss_store_sk = t100.s_store_sk

ORDER BY COALESCE(SUM(t98.EXPR_0 * t100.EXPR_0), 0)

LIMIT 100",None
1,sql_002.sql,"select  i_item_id, 
        avg(ss_quantity) agg1,
        avg(ss_list_price) agg2,
        avg(ss_coupon_amt) agg3,
        avg(ss_sales_price) agg4 
 from store_sales, customer_demographics, date_dim, item, promotion
 where ss_sold_date_sk = d_date_sk and
       ss_item_sk = i_item_sk and
       ss_cdemo_sk = cd_demo_sk and
       ss_promo_sk = p_promo_sk and
       cd_gender = 'M' and 
       cd_marital_status = 'M' and
       cd_education_status = '4 yr Degree' and
       (p_channel_email = 'N' or p_channel_event = 'N') and
       d_year = 2001 
 group by i_item_id
 order by i_item_id
 limit 100;","select  i_item_id, 
        avg(ss_quantity) agg1,
        avg(ss_list_price) agg2,
        avg(ss_coupon_amt) agg3,
        avg(ss_sales_price) agg4 
 from store_sales, customer_demographics, date_dim, item, promotion
 where ss_sold_date_sk = d_date_sk and
       ss_item_sk = i_item_sk and
       ss_cdemo_sk = cd_demo_sk and
       ss_promo_sk = p_promo_sk and
       cd_gender = 'M' and 
       cd_marital_status = 'M' and
       cd_education_status = '4 yr Degree' and
       (p_channel_email = 'N' or p_channel_event = 'N') and
       d_year = 2001 
 group by i_item_id
 order by i_item_id
 limit 100;",None,tpcds,"SELECT item103.i_item_id, AVG(store_sales103.ss_quantity) AS agg1, AVG(store_sales103.ss_list_price) AS agg2, AVG(store_sales103.ss_coupon_amt) AS agg3, AVG(store_sales103.ss_sales_price) AS agg4

FROM store_sales AS store_sales103

INNER JOIN (SELECT *

FROM customer_demographics

WHERE cd_gender = 'M' AND cd_marital_status = 'M' AND cd_education_status = '4 yr Degree') AS t794 ON store_sales103.ss_cdemo_sk = t794.cd_demo_sk

INNER JOIN (SELECT *

FROM date_dim

WHERE d_year = 2001) AS t795 ON store_sales103.ss_sold_date_sk = t795.d_date_sk

INNER JOIN item AS item103 ON store_sales103.ss_item_sk = item103.i_item_sk

INNER JOIN (SELECT *

FROM promotion

WHERE p_channel_email = 'N' OR p_channel_event = 'N') AS t796 ON store_sales103.ss_promo_sk = t796.p_promo_sk

GROUP BY item103.i_item_id

ORDER BY item103.i_item_id

LIMIT 100",None
2,sql_003.sql,"WITH all_sales AS (
 SELECT d_year
       ,i_brand_id
       ,i_class_id
       ,i_category_id
       ,i_manufact_id
       ,SUM(sales_cnt) AS sales_cnt
       ,SUM(sales_amt) AS sales_amt
 FROM (SELECT d_year
             ,i_brand_id
             ,i_class_id
             ,i_category_id
             ,i_manufact_id
             ,cs_quantity - COALESCE(cr_return_quantity,0) AS sales_cnt
             ,cs_ext_sales_price - COALESCE(cr_return_amount,0.0) AS sales_amt
       FROM catalog_sales JOIN item ON i_item_sk=cs_item_sk
                          JOIN date_dim ON d_date_sk=cs_sold_date_sk
                          LEFT JOIN catalog_returns ON (cs_order_number=cr_order_number 
                                                    AND cs_item_sk=cr_item_sk)
       WHERE i_category='Shoes'
       UNION
       SELECT d_year
             ,i_brand_id
             ,i_class_id
             ,i_category_id
             ,i_manufact_id
             ,ss_quantity - COALESCE(sr_return_quantity,0) AS sales_cnt
             ,ss_ext_sales_price - COALESCE(sr_return_amt,0.0) AS sales_amt
       FROM store_sales JOIN item ON i_item_sk=ss_item_sk
                        JOIN date_dim ON d_date_sk=ss_sold_date_sk
                        LEFT JOIN store_returns ON (ss_ticket_number=sr_ticket_number 
                                                AND ss_item_sk=sr_item_sk)
       WHERE i_category='Shoes'
       UNION
       SELECT d_year
             ,i_brand_id
             ,i_class_id
             ,i_category_id
             ,i_manufact_id
             ,ws_quantity - COALESCE(wr_return_quantity,0) AS sales_cnt
             ,ws_ext_sales_price - COALESCE(wr_return_amt,0.0) AS sales_amt
       FROM web_sales JOIN item ON i_item_sk=ws_item_sk
                      JOIN date_dim ON d_date_sk=ws_sold_date_sk
                      LEFT JOIN web_returns ON (ws_order_number=wr_order_number 
                                            AND ws_item_sk=wr_item_sk)
       WHERE i_category='Shoes') sales_detail
 GROUP BY d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id)
 SELECT  prev_yr.d_year AS prev_year
                          ,curr_yr.d_year AS year
                          ,curr_yr.i_brand_id
                          ,curr_yr.i_class_id
                          ,curr_yr.i_category_id
                          ,curr_yr.i_manufact_id
                          ,prev_yr.sales_cnt AS prev_yr_cnt
                          ,curr_yr.sales_cnt AS curr_yr_cnt
                          ,curr_yr.sales_cnt-prev_yr.sales_cnt AS sales_cnt_diff
                          ,curr_yr.sales_amt-prev_yr.sales_amt AS sales_amt_diff
 FROM all_sales curr_yr, all_sales prev_yr
 WHERE curr_yr.i_brand_id=prev_yr.i_brand_id
   AND curr_yr.i_class_id=prev_yr.i_class_id
   AND curr_yr.i_category_id=prev_yr.i_category_id
   AND curr_yr.i_manufact_id=prev_yr.i_manufact_id
   AND curr_yr.d_year=2000
   AND prev_yr.d_year=2000-1
   AND CAST(curr_yr.sales_cnt AS DECIMAL(17,2))/CAST(prev_yr.sales_cnt AS DECIMAL(17,2))<0.9
 ORDER BY sales_cnt_diff,sales_amt_diff
 limit 100;","SELECT t18.d_year AS prev_year, t8.d_year AS calcite_year, t8.i_brand_id, t8.i_class_id, t8.i_category_id, t8.i_manufact_id, t18.sales_cnt AS prev_yr_cnt, t8.sales_cnt AS curr_yr_cnt, t8.sales_cnt - t18.sales_cnt AS sales_cnt_diff, t8.sales_amt - t18.sales_amt AS sales_amt_diff FROM (SELECT d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id, SUM(sales_cnt) AS sales_cnt, SUM(sales_amt) AS sales_amt FROM (SELECT * FROM (SELECT date_dim.d_year, t.i_brand_id, t.i_class_id, t.i_category_id, t.i_manufact_id, catalog_sales.cs_quantity - CASE WHEN catalog_returns.cr_return_quantity IS NOT NULL THEN CAST(catalog_returns.cr_return_quantity AS INTEGER) ELSE 0 END AS sales_cnt, catalog_sales.cs_ext_sales_price - CASE WHEN catalog_returns.cr_return_amount IS NOT NULL THEN CAST(catalog_returns.cr_return_amount AS DECIMAL(17, 2)) ELSE 0.0 END AS sales_amt FROM catalog_sales INNER JOIN (SELECT * FROM item WHERE i_category = 'Shoes') AS t ON catalog_sales.cs_item_sk = t.i_item_sk INNER JOIN date_dim ON catalog_sales.cs_sold_date_sk = date_dim.d_date_sk LEFT JOIN catalog_returns ON catalog_sales.cs_order_number = catalog_returns.cr_order_number AND catalog_sales.cs_item_sk = catalog_returns.cr_item_sk UNION SELECT date_dim0.d_year, t1.i_brand_id, t1.i_class_id, t1.i_category_id, t1.i_manufact_id, store_sales.ss_quantity - CASE WHEN store_returns.sr_return_quantity IS NOT NULL THEN CAST(store_returns.sr_return_quantity AS INTEGER) ELSE 0 END AS sales_cnt, store_sales.ss_ext_sales_price - CASE WHEN store_returns.sr_return_amt IS NOT NULL THEN CAST(store_returns.sr_return_amt AS DECIMAL(17, 2)) ELSE 0.0 END AS sales_amt FROM store_sales INNER JOIN (SELECT * FROM item WHERE i_category = 'Shoes') AS t1 ON store_sales.ss_item_sk = t1.i_item_sk INNER JOIN date_dim AS date_dim0 ON store_sales.ss_sold_date_sk = date_dim0.d_date_sk LEFT JOIN store_returns ON store_sales.ss_ticket_number = store_returns.sr_ticket_number AND store_sales.ss_item_sk = store_returns.sr_item_sk) AS t UNION SELECT date_dim1.d_year, t4.i_brand_id, t4.i_class_id, t4.i_category_id, t4.i_manufact_id, web_sales.ws_quantity - CASE WHEN web_returns.wr_return_quantity IS NOT NULL THEN CAST(web_returns.wr_return_quantity AS INTEGER) ELSE 0 END AS sales_cnt, web_sales.ws_ext_sales_price - CASE WHEN web_returns.wr_return_amt IS NOT NULL THEN CAST(web_returns.wr_return_amt AS DECIMAL(17, 2)) ELSE 0.0 END AS sales_amt FROM web_sales INNER JOIN (SELECT * FROM item WHERE i_category = 'Shoes') AS t4 ON web_sales.ws_item_sk = t4.i_item_sk INNER JOIN date_dim AS date_dim1 ON web_sales.ws_sold_date_sk = date_dim1.d_date_sk LEFT JOIN web_returns ON web_sales.ws_order_number = web_returns.wr_order_number AND web_sales.ws_item_sk = web_returns.wr_item_sk) AS t6 GROUP BY d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id HAVING d_year = 2000) AS t8 INNER JOIN (SELECT d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id, SUM(sales_cnt) AS sales_cnt, SUM(sales_amt) AS sales_amt FROM (SELECT * FROM (SELECT date_dim2.d_year, t9.i_brand_id, t9.i_class_id, t9.i_category_id, t9.i_manufact_id, catalog_sales0.cs_quantity - CASE WHEN catalog_returns0.cr_return_quantity IS NOT NULL THEN CAST(catalog_returns0.cr_return_quantity AS INTEGER) ELSE 0 END AS sales_cnt, catalog_sales0.cs_ext_sales_price - CASE WHEN catalog_returns0.cr_return_amount IS NOT NULL THEN CAST(catalog_returns0.cr_return_amount AS DECIMAL(17, 2)) ELSE 0.0 END AS sales_amt FROM catalog_sales AS catalog_sales0 INNER JOIN (SELECT * FROM item WHERE i_category = 'Shoes') AS t9 ON catalog_sales0.cs_item_sk = t9.i_item_sk INNER JOIN date_dim AS date_dim2 ON catalog_sales0.cs_sold_date_sk = date_dim2.d_date_sk LEFT JOIN catalog_returns AS catalog_returns0 ON catalog_sales0.cs_order_number = catalog_returns0.cr_order_number AND catalog_sales0.cs_item_sk = catalog_returns0.cr_item_sk UNION SELECT date_dim3.d_year, t11.i_brand_id, t11.i_class_id, t11.i_category_id, t11.i_manufact_id, store_sales0.ss_quantity - CASE WHEN store_returns0.sr_return_quantity IS NOT NULL THEN CAST(store_returns0.sr_return_quantity AS INTEGER) ELSE 0 END AS sales_cnt, store_sales0.ss_ext_sales_price - CASE WHEN store_returns0.sr_return_amt IS NOT NULL THEN CAST(store_returns0.sr_return_amt AS DECIMAL(17, 2)) ELSE 0.0 END AS sales_amt FROM store_sales AS store_sales0 INNER JOIN (SELECT * FROM item WHERE i_category = 'Shoes') AS t11 ON store_sales0.ss_item_sk = t11.i_item_sk INNER JOIN date_dim AS date_dim3 ON store_sales0.ss_sold_date_sk = date_dim3.d_date_sk LEFT JOIN store_returns AS store_returns0 ON store_sales0.ss_ticket_number = store_returns0.sr_ticket_number AND store_sales0.ss_item_sk = store_returns0.sr_item_sk) AS t UNION SELECT date_dim4.d_year, t14.i_brand_id, t14.i_class_id, t14.i_category_id, t14.i_manufact_id, web_sales0.ws_quantity - CASE WHEN web_returns0.wr_return_quantity IS NOT NULL THEN CAST(web_returns0.wr_return_quantity AS INTEGER) ELSE 0 END AS sales_cnt, web_sales0.ws_ext_sales_price - CASE WHEN web_returns0.wr_return_amt IS NOT NULL THEN CAST(web_returns0.wr_return_amt AS DECIMAL(17, 2)) ELSE 0.0 END AS sales_amt FROM web_sales AS web_sales0 INNER JOIN (SELECT * FROM item WHERE i_category = 'Shoes') AS t14 ON web_sales0.ws_item_sk = t14.i_item_sk INNER JOIN date_dim AS date_dim4 ON web_sales0.ws_sold_date_sk = date_dim4.d_date_sk LEFT JOIN web_returns AS web_returns0 ON web_sales0.ws_order_number = web_returns0.wr_order_number AND web_sales0.ws_item_sk = web_returns0.wr_item_sk) AS t16 GROUP BY d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id HAVING d_year = 2000 - 1) AS t18 ON t8.i_brand_id = t18.i_brand_id AND t8.i_class_id = t18.i_class_id AND t8.i_category_id = t18.i_category_id AND t8.i_manufact_id = t18.i_manufact_id AND CAST(t8.sales_cnt AS DECIMAL(17, 2)) / CAST(t18.sales_cnt AS DECIMAL(17, 2)) < 0.9 ORDER BY t8.sales_cnt - t18.sales_cnt, t8.sales_amt - t18.sales_amt LIMIT 100",None,tpcds,"WITH all_sales AS (
 SELECT d_year
       ,i_brand_id
       ,i_class_id
       ,i_category_id
       ,i_manufact_id
       ,SUM(sales_cnt) AS sales_cnt
       ,SUM(sales_amt) AS sales_amt
 FROM (SELECT d_year
             ,i_brand_id
             ,i_class_id
             ,i_category_id
             ,i_manufact_id
             ,cs_quantity - COALESCE(cr_return_quantity,0) AS sales_cnt
             ,cs_ext_sales_price - COALESCE(cr_return_amount,0.0) AS sales_amt
       FROM catalog_sales JOIN item ON i_item_sk=cs_item_sk
                          JOIN date_dim ON d_date_sk=cs_sold_date_sk
                          LEFT JOIN catalog_returns ON (cs_order_number=cr_order_number 
                                                    AND cs_item_sk=cr_item_sk)
       WHERE i_category='Shoes'
       UNION
       SELECT d_year
             ,i_brand_id
             ,i_class_id
             ,i_category_id
             ,i_manufact_id
             ,ss_quantity - COALESCE(sr_return_quantity,0) AS sales_cnt
             ,ss_ext_sales_price - COALESCE(sr_return_amt,0.0) AS sales_amt
       FROM store_sales JOIN item ON i_item_sk=ss_item_sk
                        JOIN date_dim ON d_date_sk=ss_sold_date_sk
                        LEFT JOIN store_returns ON (ss_ticket_number=sr_ticket_number 
                                                AND ss_item_sk=sr_item_sk)
       WHERE i_category='Shoes'
       UNION
       SELECT d_year
             ,i_brand_id
             ,i_class_id
             ,i_category_id
             ,i_manufact_id
             ,ws_quantity - COALESCE(wr_return_quantity,0) AS sales_cnt
             ,ws_ext_sales_price - COALESCE(wr_return_amt,0.0) AS sales_amt
       FROM web_sales JOIN item ON i_item_sk=ws_item_sk
                      JOIN date_dim ON d_date_sk=ws_sold_date_sk
                      LEFT JOIN web_returns ON (ws_order_number=wr_order_number 
                                            AND ws_item_sk=wr_item_sk)
       WHERE i_category='Shoes') sales_detail
 GROUP BY d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id)
 SELECT  prev_yr.d_year AS prev_year
                          ,curr_yr.d_year AS year
                          ,curr_yr.i_brand_id
                          ,curr_yr.i_class_id
                          ,curr_yr.i_category_id
                          ,curr_yr.i_manufact_id
                          ,prev_yr.sales_cnt AS prev_yr_cnt
                          ,curr_yr.sales_cnt AS curr_yr_cnt
                          ,curr_yr.sales_cnt-prev_yr.sales_cnt AS sales_cnt_diff
                          ,curr_yr.sales_amt-prev_yr.sales_amt AS sales_amt_diff
 FROM all_sales curr_yr, all_sales prev_yr
 WHERE curr_yr.i_brand_id=prev_yr.i_brand_id
   AND curr_yr.i_class_id=prev_yr.i_class_id
   AND curr_yr.i_category_id=prev_yr.i_category_id
   AND curr_yr.i_manufact_id=prev_yr.i_manufact_id
   AND curr_yr.d_year=2000
   AND prev_yr.d_year=2000-1
   AND CAST(curr_yr.sales_cnt AS DECIMAL(17,2))/CAST(prev_yr.sales_cnt AS DECIMAL(17,2))<0.9
 ORDER BY sales_cnt_diff,sales_amt_diff
 limit 100;","CombineUnions,ConstantFolding,RemoveRedundantAliases"
3,sql_004.sql,"select  asceding.rnk, i1.i_product_name best_performing, i2.i_product_name worst_performing
from(select *
     from (select item_sk,rank() over (order by rank_col asc) rnk
           from (select ss_item_sk item_sk,avg(ss_net_profit) rank_col 
                 from store_sales ss1
                 where ss_store_sk = 21
                 group by ss_item_sk
                 having avg(ss_net_profit) > 0.9*(select avg(ss_net_profit) rank_col
                                                  from store_sales
                                                  where ss_store_sk = 21
                                                    and ss_hdemo_sk is null
                                                  group by ss_store_sk))V1)V11
     where rnk  < 11) asceding,
    (select *
     from (select item_sk,rank() over (order by rank_col desc) rnk
           from (select ss_item_sk item_sk,avg(ss_net_profit) rank_col
                 from store_sales ss1
                 where ss_store_sk = 21
                 group by ss_item_sk
                 having avg(ss_net_profit) > 0.9*(select avg(ss_net_profit) rank_col
                                                  from store_sales
                                                  where ss_store_sk = 21
                                                    and ss_hdemo_sk is null
                                                  group by ss_store_sk))V2)V21
     where rnk  < 11) descending,
item i1,
item i2
where asceding.rnk = descending.rnk 
  and i1.i_item_sk=asceding.item_sk
  and i2.i_item_sk=descending.item_sk
order by asceding.rnk
limit 100;","SELECT t9.rnk, item.i_product_name AS best_performing, item0.i_product_name AS worst_performing FROM (SELECT * FROM (SELECT t1.item_sk, RANK() OVER (ORDER BY t1.rank_col) AS rnk FROM (SELECT ss_item_sk AS item_sk, AVG(ss_net_profit) AS rank_col FROM store_sales WHERE ss_store_sk = 21 GROUP BY ss_item_sk) AS t1 LEFT JOIN (SELECT AVG(ss_net_profit) AS rank_col FROM (VALUES (NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)) AS t (ss_sold_date_sk, ss_sold_time_sk, ss_item_sk, ss_customer_sk, ss_cdemo_sk, ss_hdemo_sk, ss_addr_sk, ss_store_sk, ss_promo_sk, ss_ticket_number, ss_quantity, ss_wholesale_cost, ss_list_price, ss_sales_price, ss_ext_discount_amt, ss_ext_sales_price, ss_ext_wholesale_cost, ss_ext_list_price, ss_ext_tax, ss_coupon_amt, ss_net_paid, ss_net_paid_inc_tax, ss_net_profit) WHERE 1 = 0 GROUP BY ss_store_sk) AS t5 ON TRUE WHERE t1.rank_col > 0.9 * t5.rank_col) AS t7 WHERE t7.rnk < 11) AS t9, (SELECT * FROM (SELECT t12.item_sk, RANK() OVER (ORDER BY t12.rank_col DESC) AS rnk FROM (SELECT ss_item_sk AS item_sk, AVG(ss_net_profit) AS rank_col FROM store_sales WHERE ss_store_sk = 21 GROUP BY ss_item_sk) AS t12 LEFT JOIN (SELECT AVG(ss_net_profit) AS rank_col FROM (VALUES (NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)) AS t (ss_sold_date_sk, ss_sold_time_sk, ss_item_sk, ss_customer_sk, ss_cdemo_sk, ss_hdemo_sk, ss_addr_sk, ss_store_sk, ss_promo_sk, ss_ticket_number, ss_quantity, ss_wholesale_cost, ss_list_price, ss_sales_price, ss_ext_discount_amt, ss_ext_sales_price, ss_ext_wholesale_cost, ss_ext_list_price, ss_ext_tax, ss_coupon_amt, ss_net_paid, ss_net_paid_inc_tax, ss_net_profit) WHERE 1 = 0 GROUP BY ss_store_sk) AS t16 ON TRUE WHERE t12.rank_col > 0.9 * t16.rank_col) AS t18 WHERE t18.rnk < 11) AS t20, item, item AS item0 WHERE t9.rnk = t20.rnk AND item.i_item_sk = t9.item_sk AND item0.i_item_sk = t20.item_sk ORDER BY t9.rnk LIMIT 100",None,tpcds,"SELECT t2975.rnk, item243.i_product_name AS best_performing, item244.i_product_name AS worst_performing

FROM (SELECT *

FROM (SELECT t2968.item_sk, RANK() OVER (ORDER BY t2968.rank_col) AS rnk

FROM (SELECT ss_item_sk AS item_sk, AVG(ss_net_profit) AS rank_col

FROM store_sales

WHERE ss_store_sk = 639

GROUP BY ss_item_sk) AS t2968

INNER JOIN (SELECT AVG(ss_net_profit) AS rank_col

FROM (SELECT ss_store_sk, ss_net_profit

FROM (VALUES (NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)) AS t (ss_sold_date_sk, ss_sold_time_sk, ss_item_sk, ss_customer_sk, ss_cdemo_sk, ss_hdemo_sk, ss_addr_sk, ss_store_sk, ss_promo_sk, ss_ticket_number, ss_quantity, ss_wholesale_cost, ss_list_price, ss_sales_price, ss_ext_discount_amt, ss_ext_sales_price, ss_ext_wholesale_cost, ss_ext_list_price, ss_ext_tax, ss_coupon_amt, ss_net_paid, ss_net_paid_inc_tax, ss_net_profit)

WHERE 1 = 0) AS t2970

GROUP BY ss_store_sk) AS t2972 ON t2968.rank_col > 0.9 * t2972.rank_col) AS t2974

WHERE t2974.rnk < 11) AS t2975

INNER JOIN (SELECT *

FROM (SELECT t2978.item_sk, RANK() OVER (ORDER BY t2978.rank_col DESC) AS rnk

FROM (SELECT ss_item_sk AS item_sk, AVG(ss_net_profit) AS rank_col

FROM store_sales

WHERE ss_store_sk = 639

GROUP BY ss_item_sk) AS t2978

INNER JOIN (SELECT AVG(ss_net_profit) AS rank_col

FROM (SELECT ss_store_sk, ss_net_profit

FROM (VALUES (NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)) AS t (ss_sold_date_sk, ss_sold_time_sk, ss_item_sk, ss_customer_sk, ss_cdemo_sk, ss_hdemo_sk, ss_addr_sk, ss_store_sk, ss_promo_sk, ss_ticket_number, ss_quantity, ss_wholesale_cost, ss_list_price, ss_sales_price, ss_ext_discount_amt, ss_ext_sales_price, ss_ext_wholesale_cost, ss_ext_list_price, ss_ext_tax, ss_coupon_amt, ss_net_paid, ss_net_paid_inc_tax, ss_net_profit)

WHERE 1 = 0) AS t2980

GROUP BY ss_store_sk) AS t2982 ON t2978.rank_col > 0.9 * t2982.rank_col) AS t2984

WHERE t2984.rnk < 11) AS t2985 ON t2975.rnk = t2985.rnk

INNER JOIN item AS item243 ON t2975.item_sk = item243.i_item_sk

INNER JOIN item AS item244 ON t2985.item_sk = item244.i_item_sk

ORDER BY t2975.rnk

LIMIT 100",None
4,sql_005_1.sql,"with inv as
(select w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy
       ,stdev,mean, case mean when 0 then null else stdev/mean end cov
 from(select w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy
            ,stddev_samp(inv_quantity_on_hand) stdev,avg(inv_quantity_on_hand) mean
      from inventory
          ,item
          ,warehouse
          ,date_dim
      where inv_item_sk = i_item_sk
        and inv_warehouse_sk = w_warehouse_sk
        and inv_date_sk = d_date_sk
        and d_year =2001
      group by w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy) foo
 where case mean when 0 then 0 else stdev/mean end > 1)
select inv1.w_warehouse_sk,inv1.i_item_sk,inv1.d_moy,inv1.mean, inv1.cov
        ,inv2.w_warehouse_sk,inv2.i_item_sk,inv2.d_moy,inv2.mean, inv2.cov
from inv inv1,inv inv2
where inv1.i_item_sk = inv2.i_item_sk
  and inv1.w_warehouse_sk =  inv2.w_warehouse_sk
  and inv1.d_moy=1
  and inv2.d_moy=1+1
order by inv1.w_warehouse_sk,inv1.i_item_sk,inv1.d_moy,inv1.mean,inv1.cov
        ,inv2.d_moy,inv2.mean, inv2.cov
;","SELECT t4.w_warehouse_sk, t4.i_item_sk, t4.d_moy, t4.mean, t4.cov, t10.w_warehouse_sk AS w_warehouse_sk0, t10.i_item_sk AS i_item_sk0, t10.d_moy AS d_moy0, t10.mean AS mean0, t10.cov AS cov0 FROM (SELECT * FROM (SELECT warehouse.w_warehouse_name, warehouse.w_warehouse_sk, item.i_item_sk, t.d_moy, STDDEV_SAMP(inventory.inv_quantity_on_hand) AS stdev, AVG(inventory.inv_quantity_on_hand) AS mean, CASE WHEN AVG(inventory.inv_quantity_on_hand) = 0 THEN NULL ELSE STDDEV_SAMP(inventory.inv_quantity_on_hand) / AVG(inventory.inv_quantity_on_hand) END AS cov FROM inventory INNER JOIN item ON inventory.inv_item_sk = item.i_item_sk INNER JOIN warehouse ON inventory.inv_warehouse_sk = warehouse.w_warehouse_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year = 2001) AS t ON inventory.inv_date_sk = t.d_date_sk GROUP BY warehouse.w_warehouse_name, warehouse.w_warehouse_sk, item.i_item_sk, t.d_moy HAVING CASE WHEN AVG(inventory.inv_quantity_on_hand) = 0 THEN 0 ELSE STDDEV_SAMP(inventory.inv_quantity_on_hand) / AVG(inventory.inv_quantity_on_hand) END > 1) AS t3 WHERE t3.d_moy = 1) AS t4 INNER JOIN (SELECT * FROM (SELECT warehouse0.w_warehouse_name, warehouse0.w_warehouse_sk, item0.i_item_sk, t5.d_moy, STDDEV_SAMP(inventory0.inv_quantity_on_hand) AS stdev, AVG(inventory0.inv_quantity_on_hand) AS mean, CASE WHEN AVG(inventory0.inv_quantity_on_hand) = 0 THEN NULL ELSE STDDEV_SAMP(inventory0.inv_quantity_on_hand) / AVG(inventory0.inv_quantity_on_hand) END AS cov FROM inventory AS inventory0 INNER JOIN item AS item0 ON inventory0.inv_item_sk = item0.i_item_sk INNER JOIN warehouse AS warehouse0 ON inventory0.inv_warehouse_sk = warehouse0.w_warehouse_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year = 2001) AS t5 ON inventory0.inv_date_sk = t5.d_date_sk GROUP BY warehouse0.w_warehouse_name, warehouse0.w_warehouse_sk, item0.i_item_sk, t5.d_moy HAVING CASE WHEN AVG(inventory0.inv_quantity_on_hand) = 0 THEN 0 ELSE STDDEV_SAMP(inventory0.inv_quantity_on_hand) / AVG(inventory0.inv_quantity_on_hand) END > 1) AS t9 WHERE t9.d_moy = 1 + 1) AS t10 ON t4.i_item_sk = t10.i_item_sk AND t4.w_warehouse_sk = t10.w_warehouse_sk ORDER BY t4.w_warehouse_sk, t4.i_item_sk, t4.d_moy, t4.mean, t4.cov, t10.d_moy, t10.mean, t10.cov",ConstantFolding,tpcds,"SELECT t41.w_warehouse_sk, t41.i_item_sk, t41.d_moy, t41.mean, t41.cov, t46.w_warehouse_sk AS w_warehouse_sk0, t46.i_item_sk AS i_item_sk0, t46.d_moy AS d_moy0, t46.mean AS mean0, t46.cov AS cov0

FROM (SELECT warehouse5.w_warehouse_name, warehouse5.w_warehouse_sk, item5.i_item_sk, date_dim5.d_moy, STDDEV_SAMP(inventory5.inv_quantity_on_hand) AS stdev, AVG(inventory5.inv_quantity_on_hand) AS mean, CASE WHEN AVG(inventory5.inv_quantity_on_hand) = 0 THEN NULL ELSE STDDEV_SAMP(inventory5.inv_quantity_on_hand) / AVG(inventory5.inv_quantity_on_hand) END AS cov

FROM inventory AS inventory5,

item AS item5,

warehouse AS warehouse5,

date_dim AS date_dim5

WHERE inventory5.inv_item_sk = item5.i_item_sk AND inventory5.inv_warehouse_sk = warehouse5.w_warehouse_sk AND inventory5.inv_date_sk = date_dim5.d_date_sk AND date_dim5.d_year = 2001

GROUP BY warehouse5.w_warehouse_name, warehouse5.w_warehouse_sk, item5.i_item_sk, date_dim5.d_moy

HAVING CASE WHEN AVG(inventory5.inv_quantity_on_hand) = 0 THEN 0 ELSE STDDEV_SAMP(inventory5.inv_quantity_on_hand) / AVG(inventory5.inv_quantity_on_hand) END > 1) AS t41,

(SELECT warehouse6.w_warehouse_name, warehouse6.w_warehouse_sk, item6.i_item_sk, date_dim6.d_moy, STDDEV_SAMP(inventory6.inv_quantity_on_hand) AS stdev, AVG(inventory6.inv_quantity_on_hand) AS mean, CASE WHEN AVG(inventory6.inv_quantity_on_hand) = 0 THEN NULL ELSE STDDEV_SAMP(inventory6.inv_quantity_on_hand) / AVG(inventory6.inv_quantity_on_hand) END AS cov

FROM inventory AS inventory6,

item AS item6,

warehouse AS warehouse6,

date_dim AS date_dim6

WHERE inventory6.inv_item_sk = item6.i_item_sk AND inventory6.inv_warehouse_sk = warehouse6.w_warehouse_sk AND inventory6.inv_date_sk = date_dim6.d_date_sk AND date_dim6.d_year = 2001

GROUP BY warehouse6.w_warehouse_name, warehouse6.w_warehouse_sk, item6.i_item_sk, date_dim6.d_moy

HAVING CASE WHEN AVG(inventory6.inv_quantity_on_hand) = 0 THEN 0 ELSE STDDEV_SAMP(inventory6.inv_quantity_on_hand) / AVG(inventory6.inv_quantity_on_hand) END > 1) AS t46

WHERE t41.i_item_sk = t46.i_item_sk AND t41.w_warehouse_sk = t46.w_warehouse_sk AND t41.d_moy = 1 AND t46.d_moy = 1 + 1

ORDER BY t41.w_warehouse_sk, t41.i_item_sk, t41.d_moy, t41.mean, t41.cov, t46.d_moy, t46.mean, t46.cov",ConstantFolding
5,sql_005_2.sql,"with inv as
(select w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy
       ,stdev,mean, case mean when 0 then null else stdev/mean end cov
 from(select w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy
            ,stddev_samp(inv_quantity_on_hand) stdev,avg(inv_quantity_on_hand) mean
      from inventory
          ,item
          ,warehouse
          ,date_dim
      where inv_item_sk = i_item_sk
        and inv_warehouse_sk = w_warehouse_sk
        and inv_date_sk = d_date_sk
        and d_year =2001
      group by w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy) foo
 where case mean when 0 then 0 else stdev/mean end > 1)
select inv1.w_warehouse_sk,inv1.i_item_sk,inv1.d_moy,inv1.mean, inv1.cov
        ,inv2.w_warehouse_sk,inv2.i_item_sk,inv2.d_moy,inv2.mean, inv2.cov
from inv inv1,inv inv2
where inv1.i_item_sk = inv2.i_item_sk
  and inv1.w_warehouse_sk =  inv2.w_warehouse_sk
  and inv1.d_moy=1
  and inv2.d_moy=1+1
  and inv1.cov > 1.5
order by inv1.w_warehouse_sk,inv1.i_item_sk,inv1.d_moy,inv1.mean,inv1.cov
        ,inv2.d_moy,inv2.mean, inv2.cov
;","with inv as
(select w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy
       ,stdev,mean, case mean when 0 then null else stdev/mean end cov
 from(select w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy
            ,stddev_samp(inv_quantity_on_hand) stdev,avg(inv_quantity_on_hand) mean
      from inventory
          ,item
          ,warehouse
          ,date_dim
      where inv_item_sk = i_item_sk
        and inv_warehouse_sk = w_warehouse_sk
        and inv_date_sk = d_date_sk
        and d_year =2001
      group by w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy) foo
 where case mean when 0 then 0 else stdev/mean end > 1)
select inv1.w_warehouse_sk,inv1.i_item_sk,inv1.d_moy,inv1.mean, inv1.cov
        ,inv2.w_warehouse_sk,inv2.i_item_sk,inv2.d_moy,inv2.mean, inv2.cov
from inv inv1,inv inv2
where inv1.i_item_sk = inv2.i_item_sk
  and inv1.w_warehouse_sk =  inv2.w_warehouse_sk
  and inv1.d_moy=1
  and inv2.d_moy=1+1
  and inv1.cov > 1.5
order by inv1.w_warehouse_sk,inv1.i_item_sk,inv1.d_moy,inv1.mean,inv1.cov
        ,inv2.d_moy,inv2.mean, inv2.cov
;",RemoveRedundantAliases,tpcds,"SELECT t41.w_warehouse_sk, t41.i_item_sk, t41.d_moy, t41.mean, t41.cov, t46.w_warehouse_sk AS w_warehouse_sk0, t46.i_item_sk AS i_item_sk0, t46.d_moy AS d_moy0, t46.mean AS mean0, t46.cov AS cov0

FROM (SELECT warehouse5.w_warehouse_name, warehouse5.w_warehouse_sk, item5.i_item_sk, date_dim5.d_moy, STDDEV_SAMP(inventory5.inv_quantity_on_hand) AS stdev, AVG(inventory5.inv_quantity_on_hand) AS mean, CASE WHEN AVG(inventory5.inv_quantity_on_hand) = 0 THEN NULL ELSE STDDEV_SAMP(inventory5.inv_quantity_on_hand) / AVG(inventory5.inv_quantity_on_hand) END AS cov

FROM inventory AS inventory5,

item AS item5,

warehouse AS warehouse5,

date_dim AS date_dim5

WHERE inventory5.inv_item_sk = item5.i_item_sk AND inventory5.inv_warehouse_sk = warehouse5.w_warehouse_sk AND inventory5.inv_date_sk = date_dim5.d_date_sk AND date_dim5.d_year = 2001

GROUP BY warehouse5.w_warehouse_name, warehouse5.w_warehouse_sk, item5.i_item_sk, date_dim5.d_moy

HAVING CASE WHEN AVG(inventory5.inv_quantity_on_hand) = 0 THEN 0 ELSE STDDEV_SAMP(inventory5.inv_quantity_on_hand) / AVG(inventory5.inv_quantity_on_hand) END > 1) AS t41,

(SELECT warehouse6.w_warehouse_name, warehouse6.w_warehouse_sk, item6.i_item_sk, date_dim6.d_moy, STDDEV_SAMP(inventory6.inv_quantity_on_hand) AS stdev, AVG(inventory6.inv_quantity_on_hand) AS mean, CASE WHEN AVG(inventory6.inv_quantity_on_hand) = 0 THEN NULL ELSE STDDEV_SAMP(inventory6.inv_quantity_on_hand) / AVG(inventory6.inv_quantity_on_hand) END AS cov

FROM inventory AS inventory6,

item AS item6,

warehouse AS warehouse6,

date_dim AS date_dim6

WHERE inventory6.inv_item_sk = item6.i_item_sk AND inventory6.inv_warehouse_sk = warehouse6.w_warehouse_sk AND inventory6.inv_date_sk = date_dim6.d_date_sk AND date_dim6.d_year = 2001

GROUP BY warehouse6.w_warehouse_name, warehouse6.w_warehouse_sk, item6.i_item_sk, date_dim6.d_moy

HAVING CASE WHEN AVG(inventory6.inv_quantity_on_hand) = 0 THEN 0 ELSE STDDEV_SAMP(inventory6.inv_quantity_on_hand) / AVG(inventory6.inv_quantity_on_hand) END > 1) AS t46

WHERE t41.i_item_sk = t46.i_item_sk AND t41.w_warehouse_sk = t46.w_warehouse_sk AND t41.d_moy = 1 AND t46.d_moy = 1 + 1 AND t41.cov > 1.5

ORDER BY t41.w_warehouse_sk, t41.i_item_sk, t41.d_moy, t41.mean, t41.cov, t46.d_moy, t46.mean, t46.cov",None
6,sql_006.sql,"with ssr as
 (select  s_store_id as store_id,
          sum(ss_ext_sales_price) as sales,
          sum(coalesce(sr_return_amt, 0)) as returns,
          sum(ss_net_profit - coalesce(sr_net_loss, 0)) as profit
  from store_sales left outer join store_returns on
         (ss_item_sk = sr_item_sk and ss_ticket_number = sr_ticket_number),
     date_dim,
     store,
     item,
     promotion
 where ss_sold_date_sk = d_date_sk
       and d_date between cast('2002-08-04' as date) 
                  and (date_add(cast('2002-08-04' as date), 30))
       and ss_store_sk = s_store_sk
       and ss_item_sk = i_item_sk
       and i_current_price > 50
       and ss_promo_sk = p_promo_sk
       and p_channel_tv = 'N'
 group by s_store_id)
 ,
 csr as
 (select  cp_catalog_page_id as catalog_page_id,
          sum(cs_ext_sales_price) as sales,
          sum(coalesce(cr_return_amount, 0)) as returns,
          sum(cs_net_profit - coalesce(cr_net_loss, 0)) as profit
  from catalog_sales left outer join catalog_returns on
         (cs_item_sk = cr_item_sk and cs_order_number = cr_order_number),
     date_dim,
     catalog_page,
     item,
     promotion
 where cs_sold_date_sk = d_date_sk
       and d_date between cast('2002-08-04' as date)
                  and (date_add(cast('2002-08-04' as date), 30))
        and cs_catalog_page_sk = cp_catalog_page_sk
       and cs_item_sk = i_item_sk
       and i_current_price > 50
       and cs_promo_sk = p_promo_sk
       and p_channel_tv = 'N'
group by cp_catalog_page_id)
 ,
 wsr as
 (select  web_site_id,
          sum(ws_ext_sales_price) as sales,
          sum(coalesce(wr_return_amt, 0)) as returns,
          sum(ws_net_profit - coalesce(wr_net_loss, 0)) as profit
  from web_sales left outer join web_returns on
         (ws_item_sk = wr_item_sk and ws_order_number = wr_order_number),
     date_dim,
     web_site,
     item,
     promotion
 where ws_sold_date_sk = d_date_sk
       and d_date between cast('2002-08-04' as date)
                  and (date_add(cast('2002-08-04' as date), 30))
        and ws_web_site_sk = web_site_sk
       and ws_item_sk = i_item_sk
       and i_current_price > 50
       and ws_promo_sk = p_promo_sk
       and p_channel_tv = 'N'
group by web_site_id)
  select  channel
        , id
        , sum(sales) as sales
        , sum(returns) as returns
        , sum(profit) as profit
 from 
 (select 'store channel' as channel
        , 'store' || store_id as id
        , sales
        , returns
        , profit
 from   ssr
 union all
 select 'catalog channel' as channel
        , 'catalog_page' || catalog_page_id as id
        , sales
        , returns
        , profit
 from  csr
 union all
 select 'web channel' as channel
        , 'web_site' || web_site_id as id
        , sales
        , returns
        , profit
 from   wsr
 ) x
 group by rollup (channel, id)
 order by channel
         ,id
 limit 100;","SELECT channel, id, SUM(sales) AS sales, SUM(calcite_returns) AS calcite_returns, SUM(profit) AS profit FROM (SELECT * FROM (SELECT 'store channel' AS channel, 'store' || store.s_store_id AS id, SUM(store_sales.ss_ext_sales_price) AS sales, SUM(CASE WHEN store_returns.sr_return_amt IS NOT NULL THEN CAST(store_returns.sr_return_amt AS DECIMAL(17, 2)) ELSE 0 END) AS calcite_returns, SUM(store_sales.ss_net_profit - CASE WHEN store_returns.sr_net_loss IS NOT NULL THEN CAST(store_returns.sr_net_loss AS DECIMAL(17, 2)) ELSE 0 END) AS profit FROM store_sales LEFT JOIN store_returns ON store_sales.ss_item_sk = store_returns.sr_item_sk AND store_sales.ss_ticket_number = store_returns.sr_ticket_number INNER JOIN (SELECT * FROM date_dim WHERE d_date >= DATE '2002-08-04' AND d_date <= (DATE '2002-08-04' + INTERVAL '30' DAY)) AS t ON store_sales.ss_sold_date_sk = t.d_date_sk INNER JOIN store ON store_sales.ss_store_sk = store.s_store_sk INNER JOIN (SELECT * FROM item WHERE i_current_price > 50) AS t0 ON store_sales.ss_item_sk = t0.i_item_sk INNER JOIN (SELECT * FROM promotion WHERE p_channel_tv = 'N') AS t1 ON store_sales.ss_promo_sk = t1.p_promo_sk GROUP BY store.s_store_id UNION ALL SELECT 'catalog channel' AS channel, 'catalog_page' || catalog_page.cp_catalog_page_id AS id, SUM(catalog_sales.cs_ext_sales_price) AS sales, SUM(CASE WHEN catalog_returns.cr_return_amount IS NOT NULL THEN CAST(catalog_returns.cr_return_amount AS DECIMAL(17, 2)) ELSE 0 END) AS calcite_returns, SUM(catalog_sales.cs_net_profit - CASE WHEN catalog_returns.cr_net_loss IS NOT NULL THEN CAST(catalog_returns.cr_net_loss AS DECIMAL(17, 2)) ELSE 0 END) AS profit FROM catalog_sales LEFT JOIN catalog_returns ON catalog_sales.cs_item_sk = catalog_returns.cr_item_sk AND catalog_sales.cs_order_number = catalog_returns.cr_order_number INNER JOIN (SELECT * FROM date_dim WHERE d_date >= DATE '2002-08-04' AND d_date <= (DATE '2002-08-04' + INTERVAL '30' DAY)) AS t5 ON catalog_sales.cs_sold_date_sk = t5.d_date_sk INNER JOIN catalog_page ON catalog_sales.cs_catalog_page_sk = catalog_page.cp_catalog_page_sk INNER JOIN (SELECT * FROM item WHERE i_current_price > 50) AS t6 ON catalog_sales.cs_item_sk = t6.i_item_sk INNER JOIN (SELECT * FROM promotion WHERE p_channel_tv = 'N') AS t7 ON catalog_sales.cs_promo_sk = t7.p_promo_sk GROUP BY catalog_page.cp_catalog_page_id) AS t UNION ALL SELECT 'web channel' AS channel, 'web_site' || web_site.web_site_id AS id, SUM(web_sales.ws_ext_sales_price) AS sales, SUM(CASE WHEN web_returns.wr_return_amt IS NOT NULL THEN CAST(web_returns.wr_return_amt AS DECIMAL(17, 2)) ELSE 0 END) AS calcite_returns, SUM(web_sales.ws_net_profit - CASE WHEN web_returns.wr_net_loss IS NOT NULL THEN CAST(web_returns.wr_net_loss AS DECIMAL(17, 2)) ELSE 0 END) AS profit FROM web_sales LEFT JOIN web_returns ON web_sales.ws_item_sk = web_returns.wr_item_sk AND web_sales.ws_order_number = web_returns.wr_order_number INNER JOIN (SELECT * FROM date_dim WHERE d_date >= DATE '2002-08-04' AND d_date <= (DATE '2002-08-04' + INTERVAL '30' DAY)) AS t12 ON web_sales.ws_sold_date_sk = t12.d_date_sk INNER JOIN web_site ON web_sales.ws_web_site_sk = web_site.web_site_sk INNER JOIN (SELECT * FROM item WHERE i_current_price > 50) AS t13 ON web_sales.ws_item_sk = t13.i_item_sk INNER JOIN (SELECT * FROM promotion WHERE p_channel_tv = 'N') AS t14 ON web_sales.ws_promo_sk = t14.p_promo_sk GROUP BY web_site.web_site_id) AS t18 GROUP BY ROLLUP(channel, id) ORDER BY channel, id LIMIT 100",CollapseProject,tpcds,"with ssr as
 (select  s_store_id as store_id,
          sum(ss_ext_sales_price) as sales,
          sum(coalesce(sr_return_amt, 0)) as returns,
          sum(ss_net_profit - coalesce(sr_net_loss, 0)) as profit
  from store_sales left outer join store_returns on
         (ss_item_sk = sr_item_sk and ss_ticket_number = sr_ticket_number),
     date_dim,
     store,
     item,
     promotion
 where ss_sold_date_sk = d_date_sk
       and d_date between cast('2002-08-04' as date) 
                  and (date_add(cast('2002-08-04' as date), 30))
       and ss_store_sk = s_store_sk
       and ss_item_sk = i_item_sk
       and i_current_price > 50
       and ss_promo_sk = p_promo_sk
       and p_channel_tv = 'N'
 group by s_store_id)
 ,
 csr as
 (select  cp_catalog_page_id as catalog_page_id,
          sum(cs_ext_sales_price) as sales,
          sum(coalesce(cr_return_amount, 0)) as returns,
          sum(cs_net_profit - coalesce(cr_net_loss, 0)) as profit
  from catalog_sales left outer join catalog_returns on
         (cs_item_sk = cr_item_sk and cs_order_number = cr_order_number),
     date_dim,
     catalog_page,
     item,
     promotion
 where cs_sold_date_sk = d_date_sk
       and d_date between cast('2002-08-04' as date)
                  and (date_add(cast('2002-08-04' as date), 30))
        and cs_catalog_page_sk = cp_catalog_page_sk
       and cs_item_sk = i_item_sk
       and i_current_price > 50
       and cs_promo_sk = p_promo_sk
       and p_channel_tv = 'N'
group by cp_catalog_page_id)
 ,
 wsr as
 (select  web_site_id,
          sum(ws_ext_sales_price) as sales,
          sum(coalesce(wr_return_amt, 0)) as returns,
          sum(ws_net_profit - coalesce(wr_net_loss, 0)) as profit
  from web_sales left outer join web_returns on
         (ws_item_sk = wr_item_sk and ws_order_number = wr_order_number),
     date_dim,
     web_site,
     item,
     promotion
 where ws_sold_date_sk = d_date_sk
       and d_date between cast('2002-08-04' as date)
                  and (date_add(cast('2002-08-04' as date), 30))
        and ws_web_site_sk = web_site_sk
       and ws_item_sk = i_item_sk
       and i_current_price > 50
       and ws_promo_sk = p_promo_sk
       and p_channel_tv = 'N'
group by web_site_id)
  select  channel
        , id
        , sum(sales) as sales
        , sum(returns) as returns
        , sum(profit) as profit
 from 
 (select 'store channel' as channel
        , 'store' || store_id as id
        , sales
        , returns
        , profit
 from   ssr
 union all
 select 'catalog channel' as channel
        , 'catalog_page' || catalog_page_id as id
        , sales
        , returns
        , profit
 from  csr
 union all
 select 'web channel' as channel
        , 'web_site' || web_site_id as id
        , sales
        , returns
        , profit
 from   wsr
 ) x
 group by rollup (channel, id)
 order by channel
         ,id
 limit 100;","CombineUnions,ConstantFolding,RemoveNoopOperators"
7,sql_007.sql,"select  sum(cs_ext_discount_amt)  as excess_discount_amount 
from 
   catalog_sales 
   ,item 
   ,date_dim
where
i_manufact_id = 283
and i_item_sk = cs_item_sk 
and d_date between '1999-02-22' and 
        (date_add(cast('1999-02-22' as date), 90))
and d_date_sk = cs_sold_date_sk 
and cs_ext_discount_amt  
     > ( 
         select 
            1.3 * avg(cs_ext_discount_amt) 
         from 
            catalog_sales 
           ,date_dim
         where 
              cs_item_sk = i_item_sk 
          and d_date between '1999-02-22' and
                             (date_add(cast('1999-02-22' as date), 90))
          and d_date_sk = cs_sold_date_sk 
      ) 
limit 100;","SELECT SUM(catalog_sales.cs_ext_discount_amt) AS excess_discount_amount FROM catalog_sales INNER JOIN (SELECT * FROM item WHERE i_manufact_id = 283) AS t ON catalog_sales.cs_item_sk = t.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_date >= DATE '1999-02-22' AND d_date <= (DATE '1999-02-22' + INTERVAL '90' DAY)) AS t0 ON catalog_sales.cs_sold_date_sk = t0.d_date_sk INNER JOIN (SELECT catalog_sales0.cs_item_sk, AVG(catalog_sales0.cs_ext_discount_amt) AS dollarf1 FROM catalog_sales AS catalog_sales0 INNER JOIN (SELECT * FROM date_dim WHERE d_date >= DATE '1999-02-22' AND d_date <= (DATE '1999-02-22' + INTERVAL '90' DAY)) AS t1 ON catalog_sales0.cs_sold_date_sk = t1.d_date_sk GROUP BY catalog_sales0.cs_item_sk) AS t2 ON t.i_item_sk = t2.cs_item_sk AND catalog_sales.cs_ext_discount_amt > 1.3 * t2.dollarf1 LIMIT 100",EliminateLimits,tpcds,"SELECT SUM(catalog_sales5.cs_ext_discount_amt) AS excess_discount_amount

FROM catalog_sales AS catalog_sales5

INNER JOIN (SELECT *

FROM item

WHERE i_manufact_id = 283) AS t25 ON catalog_sales5.cs_item_sk = t25.i_item_sk

INNER JOIN (SELECT *

FROM date_dim

WHERE d_date >= DATE '1999-02-22' AND d_date <= (DATE '1999-02-22' + 90 * INTERVAL '1' DAY)) AS t26 ON catalog_sales5.cs_sold_date_sk = t26.d_date_sk

INNER JOIN (SELECT catalog_sales6.cs_item_sk, AVG(catalog_sales6.cs_ext_discount_amt) AS _f1

FROM catalog_sales AS catalog_sales6

INNER JOIN (SELECT *

FROM date_dim

WHERE d_date >= DATE '1999-02-22' AND d_date <= (DATE '1999-02-22' + 90 * INTERVAL '1' DAY)) AS t27 ON catalog_sales6.cs_sold_date_sk = t27.d_date_sk

GROUP BY catalog_sales6.cs_item_sk) AS t28 ON t25.i_item_sk = t28.cs_item_sk AND catalog_sales5.cs_ext_discount_amt > 1.3 * t28._f1

LIMIT 100",EliminateLimits
8,sql_008.sql,"select  i_brand_id brand_id, i_brand brand, i_manufact_id, i_manufact,
 	sum(ss_ext_sales_price) ext_price
 from date_dim, store_sales, item,customer,customer_address,store
 where d_date_sk = ss_sold_date_sk
   and ss_item_sk = i_item_sk
   and i_manager_id=8
   and d_moy=11
   and d_year=1999
   and ss_customer_sk = c_customer_sk 
   and c_current_addr_sk = ca_address_sk
   and substr(ca_zip,1,5) <> substr(s_zip,1,5) 
   and ss_store_sk = s_store_sk 
 group by i_brand
      ,i_brand_id
      ,i_manufact_id
      ,i_manufact
 order by ext_price desc
         ,i_brand
         ,i_brand_id
         ,i_manufact_id
         ,i_manufact
limit 100 ;","SELECT t0.i_brand_id AS brand_id, t0.i_brand AS brand, t0.i_manufact_id, t0.i_manufact, SUM(store_sales.ss_ext_sales_price) AS ext_price FROM (SELECT * FROM date_dim WHERE d_moy = 11 AND d_year = 1999) AS t INNER JOIN store_sales ON t.d_date_sk = store_sales.ss_sold_date_sk INNER JOIN (SELECT * FROM item WHERE i_manager_id = 8) AS t0 ON store_sales.ss_item_sk = t0.i_item_sk INNER JOIN customer ON store_sales.ss_customer_sk = customer.c_customer_sk INNER JOIN customer_address ON customer.c_current_addr_sk = customer_address.ca_address_sk INNER JOIN store ON SUBSTR(customer_address.ca_zip FROM 1 FOR 5) <> SUBSTR(store.s_zip FROM 1 FOR 5) AND store_sales.ss_store_sk = store.s_store_sk GROUP BY t0.i_brand, t0.i_brand_id, t0.i_manufact_id, t0.i_manufact ORDER BY SUM(store_sales.ss_ext_sales_price) DESC, t0.i_brand, t0.i_brand_id, t0.i_manufact_id, t0.i_manufact LIMIT 100",None,tpcds,"SELECT t854.i_brand_id AS brand_id, t854.i_brand AS brand, t854.i_manufact_id, t854.i_manufact, SUM(t854.ss_ext_sales_price) AS ext_price

FROM (SELECT *

FROM (SELECT *

FROM (SELECT *

FROM (SELECT *

FROM (SELECT *

FROM date_dim

WHERE d_moy = 11 AND d_year = 1999) AS t849,

store_sales AS store_sales103

WHERE t849.d_date_sk = store_sales103.ss_sold_date_sk) AS t850,

(SELECT *

FROM item

WHERE i_manager_id = 8) AS t851

WHERE t850.ss_item_sk = t851.i_item_sk) AS t852,

customer AS customer103

WHERE t852.ss_customer_sk = customer103.c_customer_sk) AS t853,

customer_address AS customer_address103

WHERE t853.c_current_addr_sk = customer_address103.ca_address_sk) AS t854,

store AS store103

WHERE SUBSTRING(t854.ca_zip FROM 1 FOR 5) <> SUBSTRING(store103.s_zip FROM 1 FOR 5) AND t854.ss_store_sk = store103.s_store_sk

GROUP BY t854.i_brand, t854.i_brand_id, t854.i_manufact_id, t854.i_manufact

ORDER BY SUM(t854.ss_ext_sales_price) DESC, t854.i_brand, t854.i_brand_id, t854.i_manufact_id, t854.i_manufact

LIMIT 100",None
9,sql_009.sql,"select  
 i_item_id
 ,i_item_desc
 ,s_store_id
 ,s_store_name
 ,min(ss_net_profit) as store_sales_profit
 ,min(sr_net_loss) as store_returns_loss
 ,min(cs_net_profit) as catalog_sales_profit
 from
 store_sales
 ,store_returns
 ,catalog_sales
 ,date_dim d1
 ,date_dim d2
 ,date_dim d3
 ,store
 ,item
 where
 d1.d_moy = 4
 and d1.d_year = 2002
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk = ss_item_sk
 and s_store_sk = ss_store_sk
 and ss_customer_sk = sr_customer_sk
 and ss_item_sk = sr_item_sk
 and ss_ticket_number = sr_ticket_number
 and sr_returned_date_sk = d2.d_date_sk
 and d2.d_moy               between 4 and  10
 and d2.d_year              = 2002
 and sr_customer_sk = cs_bill_customer_sk
 and sr_item_sk = cs_item_sk
 and cs_sold_date_sk = d3.d_date_sk
 and d3.d_moy               between 4 and  10 
 and d3.d_year              = 2002
 group by
 i_item_id
 ,i_item_desc
 ,s_store_id
 ,s_store_name
 order by
 i_item_id
 ,i_item_desc
 ,s_store_id
 ,s_store_name
 limit 100;","SELECT item.i_item_id, item.i_item_desc, store.s_store_id, store.s_store_name, MIN(store_sales.ss_net_profit) AS store_sales_profit, MIN(store_returns.sr_net_loss) AS store_returns_loss, MIN(catalog_sales.cs_net_profit) AS catalog_sales_profit FROM store_sales, store_returns, catalog_sales, date_dim, date_dim AS date_dim0, date_dim AS date_dim1, store, item WHERE date_dim.d_moy = 4 AND date_dim.d_year = 2002 AND (date_dim.d_date_sk = store_sales.ss_sold_date_sk AND item.i_item_sk = store_sales.ss_item_sk) AND (store.s_store_sk = store_sales.ss_store_sk AND store_sales.ss_customer_sk = store_returns.sr_customer_sk AND (store_sales.ss_item_sk = store_returns.sr_item_sk AND (store_sales.ss_ticket_number = store_returns.sr_ticket_number AND store_returns.sr_returned_date_sk = date_dim0.d_date_sk))) AND (date_dim0.d_moy >= 4 AND date_dim0.d_moy <= 10 AND (date_dim0.d_year = 2002 AND store_returns.sr_customer_sk = catalog_sales.cs_bill_customer_sk) AND (store_returns.sr_item_sk = catalog_sales.cs_item_sk AND catalog_sales.cs_sold_date_sk = date_dim1.d_date_sk AND (date_dim1.d_moy >= 4 AND (date_dim1.d_moy <= 10 AND date_dim1.d_year = 2002)))) GROUP BY store.s_store_id, store.s_store_name, item.i_item_id, item.i_item_desc ORDER BY item.i_item_id, item.i_item_desc, store.s_store_id, store.s_store_name LIMIT 100",None,tpcds,"SELECT t1849.i_item_id, t1849.i_item_desc, t1848.s_store_id, t1848.s_store_name, MIN(t1848.store_sales_profit) AS store_sales_profit, MIN(t1848.store_returns_loss) AS store_returns_loss, MIN(t1848.catalog_sales_profit) AS catalog_sales_profit

FROM (SELECT t1845.ss_item_sk, t1846.s_store_id, t1846.s_store_name, MIN(t1845.store_sales_profit) AS store_sales_profit, MIN(t1845.store_returns_loss) AS store_returns_loss, MIN(t1845.catalog_sales_profit) AS catalog_sales_profit

FROM (SELECT t1841.ss_item_sk, t1841.ss_store_sk, MIN(t1841.store_sales_profit) AS store_sales_profit, MIN(t1841.store_returns_loss) AS store_returns_loss, MIN(t1841.catalog_sales_profit) AS catalog_sales_profit

FROM (SELECT t1837.ss_item_sk, t1837.ss_store_sk, t1837.cs_sold_date_sk, MIN(t1837.store_sales_profit) AS store_sales_profit, MIN(t1837.store_returns_loss) AS store_returns_loss, MIN(t1837.catalog_sales_profit) AS catalog_sales_profit

FROM (SELECT t1833.ss_item_sk, t1833.ss_store_sk, t1833.sr_returned_date_sk, t1833.cs_sold_date_sk, MIN(t1833.store_sales_profit) AS store_sales_profit, MIN(t1833.store_returns_loss) AS store_returns_loss, MIN(t1833.catalog_sales_profit) AS catalog_sales_profit

FROM (SELECT t1830.ss_sold_date_sk, t1830.ss_item_sk, t1830.ss_store_sk, t1830.sr_returned_date_sk, t1831.cs_sold_date_sk, MIN(t1830.store_sales_profit) AS store_sales_profit, MIN(t1830.store_returns_loss) AS store_returns_loss, MIN(t1831.catalog_sales_profit) AS catalog_sales_profit

FROM (SELECT t1827.ss_sold_date_sk, t1827.ss_item_sk, t1827.ss_store_sk, t1828.sr_returned_date_sk, t1828.sr_item_sk, t1828.sr_customer_sk, MIN(t1827.store_sales_profit) AS store_sales_profit, MIN(t1828.store_returns_loss) AS store_returns_loss

FROM (SELECT ss_sold_date_sk, ss_item_sk, ss_customer_sk, ss_store_sk, ss_ticket_number, MIN(ss_net_profit) AS store_sales_profit

FROM store_sales

GROUP BY ss_sold_date_sk, ss_item_sk, ss_customer_sk, ss_store_sk, ss_ticket_number) AS t1827,

(SELECT sr_returned_date_sk, sr_item_sk, sr_customer_sk, sr_ticket_number, MIN(sr_net_loss) AS store_returns_loss

FROM store_returns

GROUP BY sr_returned_date_sk, sr_item_sk, sr_customer_sk, sr_ticket_number) AS t1828

WHERE t1827.ss_customer_sk = t1828.sr_customer_sk AND t1827.ss_item_sk = t1828.sr_item_sk AND t1827.ss_ticket_number = t1828.sr_ticket_number

GROUP BY t1827.ss_sold_date_sk, t1827.ss_item_sk, t1827.ss_store_sk, t1828.sr_returned_date_sk, t1828.sr_item_sk, t1828.sr_customer_sk) AS t1830,

(SELECT cs_sold_date_sk, cs_bill_customer_sk, cs_item_sk, MIN(cs_net_profit) AS catalog_sales_profit

FROM catalog_sales

GROUP BY cs_sold_date_sk, cs_bill_customer_sk, cs_item_sk) AS t1831

WHERE t1830.sr_customer_sk = t1831.cs_bill_customer_sk AND t1830.sr_item_sk = t1831.cs_item_sk

GROUP BY t1830.ss_sold_date_sk, t1830.ss_item_sk, t1830.ss_store_sk, t1830.sr_returned_date_sk, t1831.cs_sold_date_sk) AS t1833,

(SELECT d_date_sk

FROM date_dim

WHERE d_moy = 4 AND d_year = 2002

GROUP BY d_date_sk) AS t1835

WHERE t1835.d_date_sk = t1833.ss_sold_date_sk

GROUP BY t1833.ss_item_sk, t1833.ss_store_sk, t1833.sr_returned_date_sk, t1833.cs_sold_date_sk) AS t1837,

(SELECT d_date_sk

FROM date_dim

WHERE d_moy >= 4 AND d_moy <= 10 AND d_year = 2002

GROUP BY d_date_sk) AS t1839

WHERE t1837.sr_returned_date_sk = t1839.d_date_sk

GROUP BY t1837.ss_item_sk, t1837.ss_store_sk, t1837.cs_sold_date_sk) AS t1841,

(SELECT d_date_sk

FROM date_dim

WHERE d_moy >= 4 AND d_moy <= 10 AND d_year = 2002

GROUP BY d_date_sk) AS t1843

WHERE t1841.cs_sold_date_sk = t1843.d_date_sk

GROUP BY t1841.ss_item_sk, t1841.ss_store_sk) AS t1845,

(SELECT s_store_sk, s_store_id, s_store_name

FROM store

GROUP BY s_store_sk, s_store_id, s_store_name) AS t1846

WHERE t1846.s_store_sk = t1845.ss_store_sk

GROUP BY t1845.ss_item_sk, t1846.s_store_id, t1846.s_store_name) AS t1848,

(SELECT i_item_sk, i_item_id, i_item_desc

FROM item

GROUP BY i_item_sk, i_item_id, i_item_desc) AS t1849

WHERE t1849.i_item_sk = t1848.ss_item_sk

GROUP BY t1848.s_store_id, t1848.s_store_name, t1849.i_item_id, t1849.i_item_desc

ORDER BY t1849.i_item_id, t1849.i_item_desc, t1848.s_store_id, t1848.s_store_name

LIMIT 100",None
10,sql_010.sql,"with ws as
  (select d_year AS ws_sold_year, ws_item_sk,
    ws_bill_customer_sk ws_customer_sk,
    sum(ws_quantity) ws_qty,
    sum(ws_wholesale_cost) ws_wc,
    sum(ws_sales_price) ws_sp
   from web_sales
   left join web_returns on wr_order_number=ws_order_number and ws_item_sk=wr_item_sk
   join date_dim on ws_sold_date_sk = d_date_sk
   where wr_order_number is null
   group by d_year, ws_item_sk, ws_bill_customer_sk
   ),
cs as
  (select d_year AS cs_sold_year, cs_item_sk,
    cs_bill_customer_sk cs_customer_sk,
    sum(cs_quantity) cs_qty,
    sum(cs_wholesale_cost) cs_wc,
    sum(cs_sales_price) cs_sp
   from catalog_sales
   left join catalog_returns on cr_order_number=cs_order_number and cs_item_sk=cr_item_sk
   join date_dim on cs_sold_date_sk = d_date_sk
   where cr_order_number is null
   group by d_year, cs_item_sk, cs_bill_customer_sk
   ),
ss as
  (select d_year AS ss_sold_year, ss_item_sk,
    ss_customer_sk,
    sum(ss_quantity) ss_qty,
    sum(ss_wholesale_cost) ss_wc,
    sum(ss_sales_price) ss_sp
   from store_sales
   left join store_returns on sr_ticket_number=ss_ticket_number and ss_item_sk=sr_item_sk
   join date_dim on ss_sold_date_sk = d_date_sk
   where sr_ticket_number is null
   group by d_year, ss_item_sk, ss_customer_sk
   )
 select 
ss_customer_sk,
round(ss_qty/(coalesce(ws_qty,0)+coalesce(cs_qty,0)),2) ratio,
ss_qty store_qty, ss_wc store_wholesale_cost, ss_sp store_sales_price,
coalesce(ws_qty,0)+coalesce(cs_qty,0) other_chan_qty,
coalesce(ws_wc,0)+coalesce(cs_wc,0) other_chan_wholesale_cost,
coalesce(ws_sp,0)+coalesce(cs_sp,0) other_chan_sales_price
from ss
left join ws on (ws_sold_year=ss_sold_year and ws_item_sk=ss_item_sk and ws_customer_sk=ss_customer_sk)
left join cs on (cs_sold_year=ss_sold_year and cs_item_sk=ss_item_sk and cs_customer_sk=ss_customer_sk)
where (coalesce(ws_qty,0)>0 or coalesce(cs_qty, 0)>0) and ss_sold_year=2001
order by 
  ss_customer_sk,
  ss_qty desc, ss_wc desc, ss_sp desc,
  other_chan_qty,
  other_chan_wholesale_cost,
  other_chan_sales_price,
  ratio
limit 100;","SELECT t1.ss_customer_sk, ROUND(t1.ss_qty / (CASE WHEN t4.ws_qty IS NOT NULL THEN CAST(t4.ws_qty AS INTEGER) ELSE 0 END + CASE WHEN t7.cs_qty IS NOT NULL THEN CAST(t7.cs_qty AS INTEGER) ELSE 0 END), 2) AS ratio, t1.ss_qty AS store_qty, t1.ss_wc AS store_wholesale_cost, t1.ss_sp AS store_sales_price, CASE WHEN t4.ws_qty IS NOT NULL THEN CAST(t4.ws_qty AS INTEGER) ELSE 0 END + CASE WHEN t7.cs_qty IS NOT NULL THEN CAST(t7.cs_qty AS INTEGER) ELSE 0 END AS other_chan_qty, CASE WHEN t4.ws_wc IS NOT NULL THEN CAST(t4.ws_wc AS DECIMAL(17, 2)) ELSE 0 END + CASE WHEN t7.cs_wc IS NOT NULL THEN CAST(t7.cs_wc AS DECIMAL(17, 2)) ELSE 0 END AS other_chan_wholesale_cost, CASE WHEN t4.ws_sp IS NOT NULL THEN CAST(t4.ws_sp AS DECIMAL(17, 2)) ELSE 0 END + CASE WHEN t7.cs_sp IS NOT NULL THEN CAST(t7.cs_sp AS DECIMAL(17, 2)) ELSE 0 END AS other_chan_sales_price FROM (SELECT date_dim.d_year, store_sales.ss_item_sk, store_sales.ss_customer_sk, SUM(store_sales.ss_quantity) AS ss_qty, SUM(store_sales.ss_wholesale_cost) AS ss_wc, SUM(store_sales.ss_sales_price) AS ss_sp FROM store_sales LEFT JOIN store_returns ON store_sales.ss_ticket_number = store_returns.sr_ticket_number AND store_sales.ss_item_sk = store_returns.sr_item_sk INNER JOIN date_dim ON store_sales.ss_sold_date_sk = date_dim.d_date_sk WHERE store_returns.sr_ticket_number IS NULL GROUP BY store_sales.ss_item_sk, store_sales.ss_customer_sk, date_dim.d_year) AS t1 LEFT JOIN (SELECT date_dim0.d_year, web_sales.ws_item_sk, web_sales.ws_bill_customer_sk, SUM(web_sales.ws_quantity) AS ws_qty, SUM(web_sales.ws_wholesale_cost) AS ws_wc, SUM(web_sales.ws_sales_price) AS ws_sp FROM web_sales LEFT JOIN web_returns ON web_sales.ws_order_number = web_returns.wr_order_number AND web_sales.ws_item_sk = web_returns.wr_item_sk INNER JOIN date_dim AS date_dim0 ON web_sales.ws_sold_date_sk = date_dim0.d_date_sk WHERE web_returns.wr_order_number IS NULL GROUP BY web_sales.ws_item_sk, web_sales.ws_bill_customer_sk, date_dim0.d_year) AS t4 ON t1.d_year = t4.d_year AND t1.ss_item_sk = t4.ws_item_sk AND t1.ss_customer_sk = t4.ws_bill_customer_sk LEFT JOIN (SELECT date_dim1.d_year, catalog_sales.cs_item_sk, catalog_sales.cs_bill_customer_sk, SUM(catalog_sales.cs_quantity) AS cs_qty, SUM(catalog_sales.cs_wholesale_cost) AS cs_wc, SUM(catalog_sales.cs_sales_price) AS cs_sp FROM catalog_sales LEFT JOIN catalog_returns ON catalog_sales.cs_order_number = catalog_returns.cr_order_number AND catalog_sales.cs_item_sk = catalog_returns.cr_item_sk INNER JOIN date_dim AS date_dim1 ON catalog_sales.cs_sold_date_sk = date_dim1.d_date_sk WHERE catalog_returns.cr_order_number IS NULL GROUP BY catalog_sales.cs_bill_customer_sk, catalog_sales.cs_item_sk, date_dim1.d_year) AS t7 ON t1.d_year = t7.d_year AND t1.ss_item_sk = t7.cs_item_sk AND t1.ss_customer_sk = t7.cs_bill_customer_sk WHERE (CASE WHEN t4.ws_qty IS NOT NULL THEN CAST(t4.ws_qty AS INTEGER) ELSE 0 END > 0 OR CASE WHEN t7.cs_qty IS NOT NULL THEN CAST(t7.cs_qty AS INTEGER) ELSE 0 END > 0) AND t1.d_year = 2001 ORDER BY t1.ss_customer_sk, t1.ss_qty DESC, t1.ss_wc DESC, t1.ss_sp DESC, CASE WHEN t4.ws_qty IS NOT NULL THEN CAST(t4.ws_qty AS INTEGER) ELSE 0 END + CASE WHEN t7.cs_qty IS NOT NULL THEN CAST(t7.cs_qty AS INTEGER) ELSE 0 END, CASE WHEN t4.ws_wc IS NOT NULL THEN CAST(t4.ws_wc AS DECIMAL(17, 2)) ELSE 0 END + CASE WHEN t7.cs_wc IS NOT NULL THEN CAST(t7.cs_wc AS DECIMAL(17, 2)) ELSE 0 END, CASE WHEN t4.ws_sp IS NOT NULL THEN CAST(t4.ws_sp AS DECIMAL(17, 2)) ELSE 0 END + CASE WHEN t7.cs_sp IS NOT NULL THEN CAST(t7.cs_sp AS DECIMAL(17, 2)) ELSE 0 END, ROUND(t1.ss_qty / (CASE WHEN t4.ws_qty IS NOT NULL THEN CAST(t4.ws_qty AS INTEGER) ELSE 0 END + CASE WHEN t7.cs_qty IS NOT NULL THEN CAST(t7.cs_qty AS INTEGER) ELSE 0 END), 2) LIMIT 100",ConstantFolding,tpcds,"with ws as
  (select d_year AS ws_sold_year, ws_item_sk,
    ws_bill_customer_sk ws_customer_sk,
    sum(ws_quantity) ws_qty,
    sum(ws_wholesale_cost) ws_wc,
    sum(ws_sales_price) ws_sp
   from web_sales
   left join web_returns on wr_order_number=ws_order_number and ws_item_sk=wr_item_sk
   join date_dim on ws_sold_date_sk = d_date_sk
   where wr_order_number is null
   group by d_year, ws_item_sk, ws_bill_customer_sk
   ),
cs as
  (select d_year AS cs_sold_year, cs_item_sk,
    cs_bill_customer_sk cs_customer_sk,
    sum(cs_quantity) cs_qty,
    sum(cs_wholesale_cost) cs_wc,
    sum(cs_sales_price) cs_sp
   from catalog_sales
   left join catalog_returns on cr_order_number=cs_order_number and cs_item_sk=cr_item_sk
   join date_dim on cs_sold_date_sk = d_date_sk
   where cr_order_number is null
   group by d_year, cs_item_sk, cs_bill_customer_sk
   ),
ss as
  (select d_year AS ss_sold_year, ss_item_sk,
    ss_customer_sk,
    sum(ss_quantity) ss_qty,
    sum(ss_wholesale_cost) ss_wc,
    sum(ss_sales_price) ss_sp
   from store_sales
   left join store_returns on sr_ticket_number=ss_ticket_number and ss_item_sk=sr_item_sk
   join date_dim on ss_sold_date_sk = d_date_sk
   where sr_ticket_number is null
   group by d_year, ss_item_sk, ss_customer_sk
   )
 select 
ss_customer_sk,
round(ss_qty/(coalesce(ws_qty,0)+coalesce(cs_qty,0)),2) ratio,
ss_qty store_qty, ss_wc store_wholesale_cost, ss_sp store_sales_price,
coalesce(ws_qty,0)+coalesce(cs_qty,0) other_chan_qty,
coalesce(ws_wc,0)+coalesce(cs_wc,0) other_chan_wholesale_cost,
coalesce(ws_sp,0)+coalesce(cs_sp,0) other_chan_sales_price
from ss
left join ws on (ws_sold_year=ss_sold_year and ws_item_sk=ss_item_sk and ws_customer_sk=ss_customer_sk)
left join cs on (cs_sold_year=ss_sold_year and cs_item_sk=ss_item_sk and cs_customer_sk=ss_customer_sk)
where (coalesce(ws_qty,0)>0 or coalesce(cs_qty, 0)>0) and ss_sold_year=2001
order by 
  ss_customer_sk,
  ss_qty desc, ss_wc desc, ss_sp desc,
  other_chan_qty,
  other_chan_wholesale_cost,
  other_chan_sales_price,
  ratio
limit 100;",ConstantFolding
11,sql_011.sql,"select   
    sum(ws_net_paid) as total_sum
   ,i_category
   ,i_class
   ,grouping(i_category)+grouping(i_class) as lochierarchy
   ,rank() over (
 	partition by grouping(i_category)+grouping(i_class),
 	case when grouping(i_class) = 0 then i_category end 
 	order by sum(ws_net_paid) desc) as rank_within_parent
 from
    web_sales
   ,date_dim       d1
   ,item
 where
    d1.d_month_seq between 1205 and 1205+11
 and d1.d_date_sk = ws_sold_date_sk
 and i_item_sk  = ws_item_sk
 group by rollup(i_category,i_class)
 order by
   lochierarchy desc,
   case when lochierarchy = 0 then i_category end,
   rank_within_parent
 limit 100;","select   
    sum(ws_net_paid) as total_sum
   ,i_category
   ,i_class
   ,grouping(i_category)+grouping(i_class) as lochierarchy
   ,rank() over (
 	partition by grouping(i_category)+grouping(i_class),
 	case when grouping(i_class) = 0 then i_category end 
 	order by sum(ws_net_paid) desc) as rank_within_parent
 from
    web_sales
   ,date_dim       d1
   ,item
 where
    d1.d_month_seq between 1205 and 1205+11
 and d1.d_date_sk = ws_sold_date_sk
 and i_item_sk  = ws_item_sk
 group by rollup(i_category,i_class)
 order by
   lochierarchy desc,
   case when lochierarchy = 0 then i_category end,
   rank_within_parent
 limit 100;","RemoveRedundantAliases,UnwrapCastInBinaryComparison",tpcds,"select   
    sum(ws_net_paid) as total_sum
   ,i_category
   ,i_class
   ,grouping(i_category)+grouping(i_class) as lochierarchy
   ,rank() over (
 	partition by grouping(i_category)+grouping(i_class),
 	case when grouping(i_class) = 0 then i_category end 
 	order by sum(ws_net_paid) desc) as rank_within_parent
 from
    web_sales
   ,date_dim       d1
   ,item
 where
    d1.d_month_seq between 1205 and 1205+11
 and d1.d_date_sk = ws_sold_date_sk
 and i_item_sk  = ws_item_sk
 group by rollup(i_category,i_class)
 order by
   lochierarchy desc,
   case when lochierarchy = 0 then i_category end,
   rank_within_parent
 limit 100;",UnwrapCastInBinaryComparison
12,sql_012.sql,"with customer_total_return as
(select sr_customer_sk as ctr_customer_sk
,sr_store_sk as ctr_store_sk
,sum(SR_RETURN_AMT_INC_TAX) as ctr_total_return
from store_returns
,date_dim
where sr_returned_date_sk = d_date_sk
and d_year =1999
group by sr_customer_sk
,sr_store_sk)
 select  c_customer_id
from customer_total_return ctr1
,store
,customer
where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2
from customer_total_return ctr2
where ctr1.ctr_store_sk = ctr2.ctr_store_sk)
and s_store_sk = ctr1.ctr_store_sk
and s_state = 'OH'
and ctr1.ctr_customer_sk = c_customer_sk
order by c_customer_id
limit 100;","SELECT customer.c_customer_id FROM (SELECT store_returns.sr_customer_sk, store_returns.sr_store_sk, SUM(store_returns.sr_return_amt_inc_tax) AS ctr_total_return FROM store_returns INNER JOIN (SELECT * FROM date_dim WHERE d_year = 1999) AS t ON store_returns.sr_returned_date_sk = t.d_date_sk GROUP BY store_returns.sr_customer_sk, store_returns.sr_store_sk) AS t0 INNER JOIN (SELECT * FROM store WHERE s_state = 'OH') AS t1 ON t0.sr_store_sk = t1.s_store_sk INNER JOIN customer ON t0.sr_customer_sk = customer.c_customer_sk INNER JOIN (SELECT t3.sr_store_sk, AVG(t3.ctr_total_return) AS dollarf1 FROM (SELECT store_returns0.sr_customer_sk, store_returns0.sr_store_sk, SUM(store_returns0.sr_return_amt_inc_tax) AS ctr_total_return FROM store_returns AS store_returns0 INNER JOIN (SELECT * FROM date_dim WHERE d_year = 1999) AS t2 ON store_returns0.sr_returned_date_sk = t2.d_date_sk GROUP BY store_returns0.sr_customer_sk, store_returns0.sr_store_sk) AS t3 GROUP BY t3.sr_store_sk) AS t4 ON t0.sr_store_sk = t4.sr_store_sk AND t0.ctr_total_return > t4.dollarf1 * 1.2 ORDER BY customer.c_customer_id LIMIT 100",None,tpcds,"SELECT customer103.c_customer_id

FROM (SELECT store_returns207.sr_customer_sk AS ctr_customer_sk, store_returns207.sr_store_sk AS ctr_store_sk, SUM(store_returns207.sr_return_amt_inc_tax) AS ctr_total_return

FROM store_returns AS store_returns207

INNER JOIN (SELECT *

FROM date_dim

WHERE d_year = 1999) AS t1405 ON store_returns207.sr_returned_date_sk = t1405.d_date_sk

GROUP BY store_returns207.sr_customer_sk, store_returns207.sr_store_sk) AS t1407

INNER JOIN (SELECT *

FROM store

WHERE s_state = 'VT') AS t1408 ON t1407.ctr_store_sk = t1408.s_store_sk

INNER JOIN customer AS customer103 ON t1407.ctr_customer_sk = customer103.c_customer_sk

INNER JOIN (SELECT t1412.ctr_store_sk, AVG(t1412.ctr_total_return) AS _f1

FROM (SELECT store_returns208.sr_store_sk AS ctr_store_sk, SUM(store_returns208.sr_return_amt_inc_tax) AS ctr_total_return

FROM store_returns AS store_returns208

INNER JOIN (SELECT *

FROM date_dim

WHERE d_year = 1999) AS t1409 ON store_returns208.sr_returned_date_sk = t1409.d_date_sk

GROUP BY store_returns208.sr_customer_sk, store_returns208.sr_store_sk) AS t1412

GROUP BY t1412.ctr_store_sk) AS t1413 ON t1407.ctr_store_sk = t1413.ctr_store_sk AND t1407.ctr_total_return > t1413._f1 * 1.2

ORDER BY customer103.c_customer_id

LIMIT 100",None
13,sql_013.sql,"select  
        cc_call_center_id Call_Center,
        cc_name Call_Center_Name,
        cc_manager Manager,
        sum(cr_net_loss) Returns_Loss
from
        call_center,
        catalog_returns,
        date_dim,
        customer,
        customer_address,
        customer_demographics,
        household_demographics
where
        cr_call_center_sk       = cc_call_center_sk
and     cr_returned_date_sk     = d_date_sk
and     cr_returning_customer_sk= c_customer_sk
and     cd_demo_sk              = c_current_cdemo_sk
and     hd_demo_sk              = c_current_hdemo_sk
and     ca_address_sk           = c_current_addr_sk
and     d_year                  = 2002 
and     d_moy                   = 11
and     ( (cd_marital_status       = 'M' and cd_education_status     = 'Unknown')
        or(cd_marital_status       = 'W' and cd_education_status     = 'Advanced Degree'))
and     hd_buy_potential like 'Unknown%'
and     ca_gmt_offset           = -6
group by cc_call_center_id,cc_name,cc_manager,cd_marital_status,cd_education_status
order by sum(cr_net_loss) desc;","select  
        cc_call_center_id Call_Center,
        cc_name Call_Center_Name,
        cc_manager Manager,
        sum(cr_net_loss) Returns_Loss
from
        call_center,
        catalog_returns,
        date_dim,
        customer,
        customer_address,
        customer_demographics,
        household_demographics
where
        cr_call_center_sk       = cc_call_center_sk
and     cr_returned_date_sk     = d_date_sk
and     cr_returning_customer_sk= c_customer_sk
and     cd_demo_sk              = c_current_cdemo_sk
and     hd_demo_sk              = c_current_hdemo_sk
and     ca_address_sk           = c_current_addr_sk
and     d_year                  = 2002 
and     d_moy                   = 11
and     ( (cd_marital_status       = 'M' and cd_education_status     = 'Unknown')
        or(cd_marital_status       = 'W' and cd_education_status     = 'Advanced Degree'))
and     hd_buy_potential like 'Unknown%'
and     ca_gmt_offset           = -6
group by cc_call_center_id,cc_name,cc_manager,cd_marital_status,cd_education_status
order by sum(cr_net_loss) desc;",None,tpcds,"SELECT t1104.cc_call_center_id AS Call_Center, t1104.cc_name AS Call_Center_Name, t1104.cc_manager AS Manager, SUM(t1104.cr_net_loss) AS Returns_Loss

FROM (SELECT *

FROM (SELECT *

FROM (SELECT *

FROM (SELECT *

FROM (SELECT *

FROM call_center AS call_center96,

catalog_returns AS catalog_returns96

WHERE catalog_returns96.cr_call_center_sk = call_center96.cc_call_center_sk) AS t1097,

(SELECT *

FROM date_dim

WHERE d_year = 2002 AND d_moy = 11) AS t1098

WHERE t1097.cr_returned_date_sk = t1098.d_date_sk) AS t1099,

customer AS customer96

WHERE t1099.cr_returning_customer_sk = customer96.c_customer_sk) AS t1100,

(SELECT *

FROM customer_address

WHERE ca_gmt_offset = -6) AS t1101

WHERE t1101.ca_address_sk = t1100.c_current_addr_sk) AS t1102,

(SELECT *

FROM customer_demographics

WHERE cd_marital_status = 'M' AND cd_education_status = 'Unknown' OR cd_marital_status = 'W' AND cd_education_status = 'Advanced Degree') AS t1103

WHERE t1103.cd_demo_sk = t1102.c_current_cdemo_sk) AS t1104,

(SELECT *

FROM household_demographics

WHERE hd_buy_potential LIKE 'Unknown%') AS t1105

WHERE t1105.hd_demo_sk = t1104.c_current_hdemo_sk

GROUP BY t1104.cc_call_center_id, t1104.cc_name, t1104.cc_manager, t1104.cd_marital_status, t1104.cd_education_status

ORDER BY SUM(t1104.cr_net_loss) DESC",ConstantFolding
14,sql_014.sql,"select  *
 from(select w_warehouse_name
            ,i_item_id
            ,sum(case when (cast(d_date as date) < cast ('2000-05-19' as date))
	                then inv_quantity_on_hand 
                      else 0 end) as inv_before
            ,sum(case when (cast(d_date as date) >= cast ('2000-05-19' as date))
                      then inv_quantity_on_hand 
                      else 0 end) as inv_after
   from inventory
       ,warehouse
       ,item
       ,date_dim
   where i_current_price between 0.99 and 1.49
     and i_item_sk          = inv_item_sk
     and inv_warehouse_sk   = w_warehouse_sk
     and inv_date_sk    = d_date_sk
     and d_date between (date_add(cast('2000-05-19' as date), -30))
                    and (date_add(cast('2000-05-19' as date), 30))
   group by w_warehouse_name, i_item_id) x
 where (case when inv_before > 0 
             then inv_after / inv_before 
             else null
             end) between 2.0/3.0 and 3.0/2.0
 order by w_warehouse_name
         ,i_item_id
 limit 100;","SELECT warehouse.w_warehouse_name, item.i_item_id, SUM(CASE WHEN date_dim.d_date < DATE '2000-05-19' THEN inventory.inv_quantity_on_hand ELSE 0 END) AS inv_before, SUM(CASE WHEN date_dim.d_date >= DATE '2000-05-19' THEN inventory.inv_quantity_on_hand ELSE 0 END) AS inv_after FROM inventory, warehouse, item, date_dim WHERE item.i_current_price >= 0.99 AND item.i_current_price <= 1.49 AND (item.i_item_sk = inventory.inv_item_sk AND inventory.inv_warehouse_sk = warehouse.w_warehouse_sk) AND (inventory.inv_date_sk = date_dim.d_date_sk AND (date_dim.d_date >= (DATE '2000-05-19' - INTERVAL '30' DAY) AND date_dim.d_date <= (DATE '2000-05-19' + INTERVAL '30' DAY))) GROUP BY warehouse.w_warehouse_name, item.i_item_id HAVING CASE WHEN SUM(CASE WHEN date_dim.d_date < DATE '2000-05-19' THEN inventory.inv_quantity_on_hand ELSE 0 END) > 0 THEN SUM(CASE WHEN date_dim.d_date >= DATE '2000-05-19' THEN inventory.inv_quantity_on_hand ELSE 0 END) / SUM(CASE WHEN date_dim.d_date < DATE '2000-05-19' THEN inventory.inv_quantity_on_hand ELSE 0 END) >= 2.0 / 3.0 ELSE FALSE END AND CASE WHEN SUM(CASE WHEN date_dim.d_date < DATE '2000-05-19' THEN inventory.inv_quantity_on_hand ELSE 0 END) > 0 THEN SUM(CASE WHEN date_dim.d_date >= DATE '2000-05-19' THEN inventory.inv_quantity_on_hand ELSE 0 END) / SUM(CASE WHEN date_dim.d_date < DATE '2000-05-19' THEN inventory.inv_quantity_on_hand ELSE 0 END) <= 3.0 / 2.0 ELSE FALSE END ORDER BY warehouse.w_warehouse_name, item.i_item_id LIMIT 100",ConstantFolding,tpcds,"SELECT warehouse100.w_warehouse_name, t823.i_item_id, SUM(CASE WHEN t824.d_date < DATE '2000-05-19' THEN inventory100.inv_quantity_on_hand ELSE 0 END) AS inv_before, SUM(CASE WHEN t824.d_date >= DATE '2000-05-19' THEN inventory100.inv_quantity_on_hand ELSE 0 END) AS inv_after

FROM inventory AS inventory100

INNER JOIN warehouse AS warehouse100 ON inventory100.inv_warehouse_sk = warehouse100.w_warehouse_sk

INNER JOIN (SELECT *

FROM item

WHERE i_current_price >= 0.99 AND i_current_price <= 1.49) AS t823 ON inventory100.inv_item_sk = t823.i_item_sk

INNER JOIN (SELECT *

FROM date_dim

WHERE d_date >= (DATE '2000-05-19' - 30 * INTERVAL '1' DAY) AND d_date <= (DATE '2000-05-19' + 30 * INTERVAL '1' DAY)) AS t824 ON inventory100.inv_date_sk = t824.d_date_sk

GROUP BY warehouse100.w_warehouse_name, t823.i_item_id

HAVING CASE WHEN SUM(CASE WHEN t824.d_date < DATE '2000-05-19' THEN inventory100.inv_quantity_on_hand ELSE 0 END) > 0 THEN SUM(CASE WHEN t824.d_date >= DATE '2000-05-19' THEN inventory100.inv_quantity_on_hand ELSE 0 END) / SUM(CASE WHEN t824.d_date < DATE '2000-05-19' THEN inventory100.inv_quantity_on_hand ELSE 0 END) >= 2.0 / 3.0 ELSE FALSE END AND CASE WHEN SUM(CASE WHEN t824.d_date < DATE '2000-05-19' THEN inventory100.inv_quantity_on_hand ELSE 0 END) > 0 THEN SUM(CASE WHEN t824.d_date >= DATE '2000-05-19' THEN inventory100.inv_quantity_on_hand ELSE 0 END) / SUM(CASE WHEN t824.d_date < DATE '2000-05-19' THEN inventory100.inv_quantity_on_hand ELSE 0 END) <= 3.0 / 2.0 ELSE FALSE END

ORDER BY warehouse100.w_warehouse_name, t823.i_item_id

LIMIT 100",None
15,sql_015.sql,"select  s_store_name, s_store_id,
        sum(case when (d_day_name='Sunday') then ss_sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then ss_sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then ss_sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then ss_sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then ss_sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then ss_sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then ss_sales_price else null end) sat_sales
 from date_dim, store_sales, store
 where d_date_sk = ss_sold_date_sk and
       s_store_sk = ss_store_sk and
       s_gmt_offset = -5 and
       d_year = 2000 
 group by s_store_name, s_store_id
 order by s_store_name, s_store_id,sun_sales,mon_sales,tue_sales,wed_sales,thu_sales,fri_sales,sat_sales
 limit 100;","select  s_store_name, s_store_id,
        sum(case when (d_day_name='Sunday') then ss_sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then ss_sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then ss_sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then ss_sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then ss_sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then ss_sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then ss_sales_price else null end) sat_sales
 from date_dim, store_sales, store
 where d_date_sk = ss_sold_date_sk and
       s_store_sk = ss_store_sk and
       s_gmt_offset = -5 and
       d_year = 2000 
 group by s_store_name, s_store_id
 order by s_store_name, s_store_id,sun_sales,mon_sales,tue_sales,wed_sales,thu_sales,fri_sales,sat_sales
 limit 100;",ConstantFolding,tpcds,"SELECT t616.s_store_name, t616.s_store_id, SUM(CASE WHEN t615.d_day_name = 'Sunday' THEN store_sales103.ss_sales_price ELSE NULL END) AS sun_sales, SUM(CASE WHEN t615.d_day_name = 'Monday' THEN store_sales103.ss_sales_price ELSE NULL END) AS mon_sales, SUM(CASE WHEN t615.d_day_name = 'Tuesday' THEN store_sales103.ss_sales_price ELSE NULL END) AS tue_sales, SUM(CASE WHEN t615.d_day_name = 'Wednesday' THEN store_sales103.ss_sales_price ELSE NULL END) AS wed_sales, SUM(CASE WHEN t615.d_day_name = 'Thursday' THEN store_sales103.ss_sales_price ELSE NULL END) AS thu_sales, SUM(CASE WHEN t615.d_day_name = 'Friday' THEN store_sales103.ss_sales_price ELSE NULL END) AS fri_sales, SUM(CASE WHEN t615.d_day_name = 'Saturday' THEN store_sales103.ss_sales_price ELSE NULL END) AS sat_sales

FROM (SELECT *

FROM date_dim

WHERE d_year = 2000) AS t615

INNER JOIN store_sales AS store_sales103 ON t615.d_date_sk = store_sales103.ss_sold_date_sk

INNER JOIN (SELECT *

FROM store

WHERE s_gmt_offset = -5) AS t616 ON store_sales103.ss_store_sk = t616.s_store_sk

GROUP BY t616.s_store_name, t616.s_store_id

ORDER BY t616.s_store_name, t616.s_store_id, SUM(CASE WHEN t615.d_day_name = 'Sunday' THEN store_sales103.ss_sales_price ELSE NULL END), SUM(CASE WHEN t615.d_day_name = 'Monday' THEN store_sales103.ss_sales_price ELSE NULL END), SUM(CASE WHEN t615.d_day_name = 'Tuesday' THEN store_sales103.ss_sales_price ELSE NULL END), SUM(CASE WHEN t615.d_day_name = 'Wednesday' THEN store_sales103.ss_sales_price ELSE NULL END), SUM(CASE WHEN t615.d_day_name = 'Thursday' THEN store_sales103.ss_sales_price ELSE NULL END), SUM(CASE WHEN t615.d_day_name = 'Friday' THEN store_sales103.ss_sales_price ELSE NULL END), SUM(CASE WHEN t615.d_day_name = 'Saturday' THEN store_sales103.ss_sales_price ELSE NULL END)

LIMIT 100",None
16,sql_016.sql,"select  i_item_id,
        s_state, grouping(s_state) g_state,
        avg(ss_quantity) agg1,
        avg(ss_list_price) agg2,
        avg(ss_coupon_amt) agg3,
        avg(ss_sales_price) agg4
 from store_sales, customer_demographics, date_dim, store, item
 where ss_sold_date_sk = d_date_sk and
       ss_item_sk = i_item_sk and
       ss_store_sk = s_store_sk and
       ss_cdemo_sk = cd_demo_sk and
       cd_gender = 'M' and
       cd_marital_status = 'M' and
       cd_education_status = 'College' and
       d_year = 1999 and
       s_state in ('GA','MI', 'SD', 'OH', 'MO', 'SC')
 group by rollup (i_item_id, s_state)
 order by i_item_id
         ,s_state
 limit 100;","SELECT item.i_item_id, store.s_state, GROUPING(store.s_state) AS g_state, AVG(store_sales.ss_quantity) AS agg1, AVG(store_sales.ss_list_price) AS agg2, AVG(store_sales.ss_coupon_amt) AS agg3, AVG(store_sales.ss_sales_price) AS agg4 FROM store_sales, customer_demographics, date_dim, store, item WHERE store_sales.ss_sold_date_sk = date_dim.d_date_sk AND store_sales.ss_item_sk = item.i_item_sk AND (store_sales.ss_store_sk = store.s_store_sk AND store_sales.ss_cdemo_sk = customer_demographics.cd_demo_sk) AND (customer_demographics.cd_gender = 'M' AND customer_demographics.cd_marital_status = 'M' AND (customer_demographics.cd_education_status = 'College' AND (date_dim.d_year = 1999 AND (store.s_state = 'GA' OR (store.s_state = 'MI' OR store.s_state = 'SD') OR (store.s_state = 'OH' OR (store.s_state = 'MO' OR store.s_state = 'SC')))))) GROUP BY ROLLUP(item.i_item_id, store.s_state) ORDER BY item.i_item_id, store.s_state LIMIT 100",RemoveRedundantAliases,tpcds,"SELECT item103.i_item_id, t817.s_state, GROUPING(t817.s_state) AS g_state, AVG(store_sales103.ss_quantity) AS agg1, AVG(store_sales103.ss_list_price) AS agg2, AVG(store_sales103.ss_coupon_amt) AS agg3, AVG(store_sales103.ss_sales_price) AS agg4

FROM store_sales AS store_sales103

INNER JOIN (SELECT *

FROM customer_demographics

WHERE cd_gender = 'F' AND cd_marital_status = 'S' AND cd_education_status = 'Advanced Degree') AS t815 ON store_sales103.ss_cdemo_sk = t815.cd_demo_sk

INNER JOIN (SELECT *

FROM date_dim

WHERE d_year = 1999) AS t816 ON store_sales103.ss_sold_date_sk = t816.d_date_sk

INNER JOIN (SELECT *

FROM store

WHERE s_state IN ('IL', 'MI', 'MN', 'NM', 'SD', 'TX')) AS t817 ON store_sales103.ss_store_sk = t817.s_store_sk

INNER JOIN item AS item103 ON store_sales103.ss_item_sk = item103.i_item_sk

GROUP BY ROLLUP(item103.i_item_id, t817.s_state)

ORDER BY item103.i_item_id, t817.s_state

LIMIT 100",RemoveRedundantAliases
17,sql_017.sql,"select  
   count(distinct ws_order_number) as order_count
  ,sum(ws_ext_ship_cost) as total_shipping_cost
  ,sum(ws_net_profit) as total_net_profit
from
   web_sales ws1
  ,date_dim
  ,customer_address
  ,web_site
where
    d_date between '2000-4-01' and 
           (date_add(cast('2000-4-01' as date), 60))
and ws1.ws_ship_date_sk = d_date_sk
and ws1.ws_ship_addr_sk = ca_address_sk
and ca_state = 'LA'
and ws1.ws_web_site_sk = web_site_sk
and web_company_name = 'pri'
and exists (select *
            from web_sales ws2
            where ws1.ws_order_number = ws2.ws_order_number
              and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)
and not exists(select *
               from web_returns wr1
               where ws1.ws_order_number = wr1.wr_order_number)
order by count(distinct ws_order_number)
limit 100;","select  
   count(distinct ws_order_number) as order_count
  ,sum(ws_ext_ship_cost) as total_shipping_cost
  ,sum(ws_net_profit) as total_net_profit
from
   web_sales ws1
  ,date_dim
  ,customer_address
  ,web_site
where
    d_date between '2000-4-01' and 
           (date_add(cast('2000-4-01' as date), 60))
and ws1.ws_ship_date_sk = d_date_sk
and ws1.ws_ship_addr_sk = ca_address_sk
and ca_state = 'LA'
and ws1.ws_web_site_sk = web_site_sk
and web_company_name = 'pri'
and exists (select *
            from web_sales ws2
            where ws1.ws_order_number = ws2.ws_order_number
              and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)
and not exists(select *
               from web_returns wr1
               where ws1.ws_order_number = wr1.wr_order_number)
order by count(distinct ws_order_number)
limit 100;",EliminateLimits,tpcds,"select  
   count(distinct ws_order_number) as order_count
  ,sum(ws_ext_ship_cost) as total_shipping_cost
  ,sum(ws_net_profit) as total_net_profit
from
   web_sales ws1
  ,date_dim
  ,customer_address
  ,web_site
where
    d_date between '2000-4-01' and 
           cast('2000-4-01' as date)+ interval 60 day
and ws1.ws_ship_date_sk = d_date_sk
and ws1.ws_ship_addr_sk = ca_address_sk
and ca_state = 'ND'
and ws1.ws_web_site_sk = web_site_sk
and web_company_name = 'pri'
and exists (select *
            from web_sales ws2
            where ws1.ws_order_number = ws2.ws_order_number
              and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)
and not exists(select *
               from web_returns wr1
               where ws1.ws_order_number = wr1.wr_order_number)
order by count(distinct ws_order_number)
limit 100",ConstantFolding
18,sql_018.sql,"select  ca_zip, ca_city, sum(ws_sales_price)
 from web_sales, customer, customer_address, date_dim, item
 where ws_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk 
 	and ws_item_sk = i_item_sk 
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475', '85392', '85460', '80348', '81792')
 	      or 
 	      i_item_id in (select i_item_id
                             from item
                             where i_item_sk in (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)
                             )
 	    )
 	and ws_sold_date_sk = d_date_sk
 	and d_qoy = 2 and d_year = 2000
 group by ca_zip, ca_city
 order by ca_zip, ca_city
 limit 100;","SELECT t3.ca_zip, t3.ca_city, SUM(t3.ws_sales_price) FROM (SELECT * FROM (SELECT web_sales.ws_sold_date_sk, web_sales.ws_sold_time_sk, web_sales.ws_ship_date_sk, web_sales.ws_item_sk, web_sales.ws_bill_customer_sk, web_sales.ws_bill_cdemo_sk, web_sales.ws_bill_hdemo_sk, web_sales.ws_bill_addr_sk, web_sales.ws_ship_customer_sk, web_sales.ws_ship_cdemo_sk, web_sales.ws_ship_hdemo_sk, web_sales.ws_ship_addr_sk, web_sales.ws_web_page_sk, web_sales.ws_web_site_sk, web_sales.ws_ship_mode_sk, web_sales.ws_warehouse_sk, web_sales.ws_promo_sk, web_sales.ws_order_number, web_sales.ws_quantity, web_sales.ws_wholesale_cost, web_sales.ws_list_price, web_sales.ws_sales_price, web_sales.ws_ext_discount_amt, web_sales.ws_ext_sales_price, web_sales.ws_ext_wholesale_cost, web_sales.ws_ext_list_price, web_sales.ws_ext_tax, web_sales.ws_coupon_amt, web_sales.ws_ext_ship_cost, web_sales.ws_net_paid, web_sales.ws_net_paid_inc_tax, web_sales.ws_net_paid_inc_ship, web_sales.ws_net_paid_inc_ship_tax, web_sales.ws_net_profit, customer.c_customer_sk, customer.c_current_hdemo_sk, customer.c_current_addr_sk, customer.c_first_shipto_date_sk, customer.c_first_sales_date_sk, customer.c_birth_day, customer.c_birth_month, customer.c_birth_year, customer.c_last_review_date_sk, customer.c_current_cdemo_sk, customer.c_customer_id, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_country, customer.c_login, customer.c_email_address, customer.c_salutation, customer.c_first_name, customer_address.ca_gmt_offset, customer_address.ca_address_sk, customer_address.ca_street_number, customer_address.ca_street_name, customer_address.ca_street_type, customer_address.ca_suite_number, customer_address.ca_city, customer_address.ca_county, customer_address.ca_state, customer_address.ca_zip, customer_address.ca_country, customer_address.ca_location_type, customer_address.ca_address_id, date_dim.d_quarter_seq, date_dim.d_year, date_dim.d_first_dom, date_dim.d_last_dom, date_dim.d_same_day_ly, date_dim.d_same_day_lq, date_dim.d_dow, date_dim.d_moy, date_dim.d_dom, date_dim.d_qoy, date_dim.d_date_sk, date_dim.d_fy_year, date_dim.d_fy_quarter_seq, date_dim.d_fy_week_seq, date_dim.d_date, date_dim.d_month_seq, date_dim.d_week_seq, date_dim.d_current_year, date_dim.d_date_id, date_dim.d_day_name, date_dim.d_quarter_name, date_dim.d_holiday, date_dim.d_weekend, date_dim.d_following_holiday, date_dim.d_current_day, date_dim.d_current_week, date_dim.d_current_month, date_dim.d_current_quarter, item.i_item_sk, item.i_rec_start_date, item.i_rec_end_date, item.i_current_price, item.i_wholesale_cost, item.i_brand_id, item.i_class_id, item.i_category_id, item.i_manufact_id, item.i_manager_id, item.i_class, item.i_container, item.i_category, item.i_item_id, item.i_product_name, item.i_manufact, item.i_item_desc, item.i_size, item.i_formulation, item.i_color, item.i_brand, item.i_units, t1.dollarf0, t1.dollarf1, item.i_item_id AS i_item_id0 FROM web_sales, customer, customer_address, date_dim, item, (SELECT COUNT(*) AS dollarf0, COUNT(i_item_id) AS dollarf1 FROM item WHERE i_item_sk = 2 OR i_item_sk = 3 OR (i_item_sk = 5 OR (i_item_sk = 7 OR i_item_sk = 11)) OR (i_item_sk = 13 OR i_item_sk = 17 OR (i_item_sk = 19 OR (i_item_sk = 23 OR i_item_sk = 29)))) AS t1) AS t2 WHERE t2.ws_bill_customer_sk = t2.c_customer_sk AND (t2.c_current_addr_sk = t2.ca_address_sk AND t2.ws_item_sk = t2.i_item_sk) AND (t2.ws_sold_date_sk = t2.d_date_sk AND (t2.d_qoy = 2 AND t2.d_year = 2000))) AS t3 LEFT JOIN (SELECT i_item_id, TRUE AS dollarf1 FROM item WHERE i_item_sk = 2 OR i_item_sk = 3 OR (i_item_sk = 5 OR (i_item_sk = 7 OR i_item_sk = 11)) OR (i_item_sk = 13 OR i_item_sk = 17 OR (i_item_sk = 19 OR (i_item_sk = 23 OR i_item_sk = 29)))) AS t5 ON t3.i_item_id0 = t5.i_item_id WHERE SUBSTR(t3.ca_zip FROM 1 FOR 5) = '85669' OR SUBSTR(t3.ca_zip FROM 1 FOR 5) = '86197' OR (SUBSTR(t3.ca_zip FROM 1 FOR 5) = '88274' OR (SUBSTR(t3.ca_zip FROM 1 FOR 5) = '83405' OR SUBSTR(t3.ca_zip FROM 1 FOR 5) = '86475')) OR (SUBSTR(t3.ca_zip FROM 1 FOR 5) = '85392' OR SUBSTR(t3.ca_zip FROM 1 FOR 5) = '85460' OR (SUBSTR(t3.ca_zip FROM 1 FOR 5) = '80348' OR (SUBSTR(t3.ca_zip FROM 1 FOR 5) = '81792' OR CAST(t5.dollarf1 IS NOT NULL AND t3.dollarf0 <> 0 OR t3.dollarf1 < t3.dollarf0 AND NULL AND t3.dollarf0 <> 0 AND t5.dollarf1 IS NULL AS BOOLEAN)))) GROUP BY t3.ca_zip, t3.ca_city ORDER BY t3.ca_zip, t3.ca_city LIMIT 100",BooleanSimplification,tpcds,"SELECT t200.ca_zip, t200.ca_state, SUM(t200.ws_sales_price)

FROM (SELECT web_sales16.ws_sold_date_sk, web_sales16.ws_sold_time_sk, web_sales16.ws_ship_date_sk, web_sales16.ws_item_sk, web_sales16.ws_bill_customer_sk, web_sales16.ws_bill_cdemo_sk, web_sales16.ws_bill_hdemo_sk, web_sales16.ws_bill_addr_sk, web_sales16.ws_ship_customer_sk, web_sales16.ws_ship_cdemo_sk, web_sales16.ws_ship_hdemo_sk, web_sales16.ws_ship_addr_sk, web_sales16.ws_web_page_sk, web_sales16.ws_web_site_sk, web_sales16.ws_ship_mode_sk, web_sales16.ws_warehouse_sk, web_sales16.ws_promo_sk, web_sales16.ws_order_number, web_sales16.ws_quantity, web_sales16.ws_wholesale_cost, web_sales16.ws_list_price, web_sales16.ws_sales_price, web_sales16.ws_ext_discount_amt, web_sales16.ws_ext_sales_price, web_sales16.ws_ext_wholesale_cost, web_sales16.ws_ext_list_price, web_sales16.ws_ext_tax, web_sales16.ws_coupon_amt, web_sales16.ws_ext_ship_cost, web_sales16.ws_net_paid, web_sales16.ws_net_paid_inc_tax, web_sales16.ws_net_paid_inc_ship, web_sales16.ws_net_paid_inc_ship_tax, web_sales16.ws_net_profit, customer16.c_customer_sk, customer16.c_customer_id, customer16.c_current_cdemo_sk, customer16.c_current_hdemo_sk, customer16.c_current_addr_sk, customer16.c_first_shipto_date_sk, customer16.c_first_sales_date_sk, customer16.c_salutation, customer16.c_first_name, customer16.c_last_name, customer16.c_preferred_cust_flag, customer16.c_birth_day, customer16.c_birth_month, customer16.c_birth_year, customer16.c_birth_country, customer16.c_login, customer16.c_email_address, customer16.c_last_review_date_sk, customer_address16.ca_address_sk, customer_address16.ca_address_id, customer_address16.ca_street_number, customer_address16.ca_street_name, customer_address16.ca_street_type, customer_address16.ca_suite_number, customer_address16.ca_city, customer_address16.ca_county, customer_address16.ca_state, customer_address16.ca_zip, customer_address16.ca_country, customer_address16.ca_gmt_offset, customer_address16.ca_location_type, t197.d_date_sk, t197.d_date_id, t197.d_date, t197.d_month_seq, t197.d_week_seq, t197.d_quarter_seq, t197.d_year, t197.d_dow, t197.d_moy, t197.d_dom, t197.d_qoy, t197.d_fy_year, t197.d_fy_quarter_seq, t197.d_fy_week_seq, t197.d_day_name, t197.d_quarter_name, t197.d_holiday, t197.d_weekend, t197.d_following_holiday, t197.d_first_dom, t197.d_last_dom, t197.d_same_day_ly, t197.d_same_day_lq, t197.d_current_day, t197.d_current_week, t197.d_current_month, t197.d_current_quarter, t197.d_current_year, item50.i_item_sk, item50.i_item_id, item50.i_rec_start_date, item50.i_rec_end_date, item50.i_item_desc, item50.i_current_price, item50.i_wholesale_cost, item50.i_brand_id, item50.i_brand, item50.i_class_id, item50.i_class, item50.i_category_id, item50.i_category, item50.i_manufact_id, item50.i_manufact, item50.i_size, item50.i_formulation, item50.i_color, item50.i_units, item50.i_container, item50.i_manager_id, item50.i_product_name, t199._f0, t199._f1, item50.i_item_id AS i_item_id0

FROM web_sales AS web_sales16

INNER JOIN customer AS customer16 ON web_sales16.ws_bill_customer_sk = customer16.c_customer_sk

INNER JOIN customer_address AS customer_address16 ON customer16.c_current_addr_sk = customer_address16.ca_address_sk

INNER JOIN (SELECT *

FROM date_dim

WHERE d_qoy = 1 AND d_year = 2000) AS t197 ON web_sales16.ws_sold_date_sk = t197.d_date_sk

INNER JOIN item AS item50 ON web_sales16.ws_item_sk = item50.i_item_sk

CROSS JOIN (SELECT COUNT(*) AS _f0, COUNT(i_item_id) AS _f1

FROM item

WHERE i_item_sk IN (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)) AS t199) AS t200

LEFT JOIN (SELECT i_item_id, TRUE AS _f1

FROM item

WHERE i_item_sk IN (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)) AS t202 ON t200.i_item_id0 = t202.i_item_id

WHERE SUBSTRING(t200.ca_zip FROM 1 FOR 5) = '85669' OR SUBSTRING(t200.ca_zip FROM 1 FOR 5) = '86197' OR (SUBSTRING(t200.ca_zip FROM 1 FOR 5) = '88274' OR (SUBSTRING(t200.ca_zip FROM 1 FOR 5) = '83405' OR SUBSTRING(t200.ca_zip FROM 1 FOR 5) = '86475')) OR (SUBSTRING(t200.ca_zip FROM 1 FOR 5) = '85392' OR SUBSTRING(t200.ca_zip FROM 1 FOR 5) = '85460' OR (SUBSTRING(t200.ca_zip FROM 1 FOR 5) = '80348' OR (SUBSTRING(t200.ca_zip FROM 1 FOR 5) = '81792' OR CAST(t202._f1 IS NOT NULL AND t200._f0 <> 0 OR t200._f1 < t200._f0 AND NULL AND t200._f0 <> 0 AND t202._f1 IS NULL AS BOOLEAN))))

GROUP BY t200.ca_state, t200.ca_zip

ORDER BY t200.ca_zip, t200.ca_state

LIMIT 100",None
19,sql_019.sql,"with ss_items as
 (select i_item_id item_id
        ,sum(ss_ext_sales_price) ss_item_rev 
 from store_sales
     ,item
     ,date_dim
 where ss_item_sk = i_item_sk
   and d_date in (select d_date
                  from date_dim
                  where d_week_seq = (select d_week_seq 
                                      from date_dim
                                      where d_date = '2000-07-21'))
   and ss_sold_date_sk   = d_date_sk
 group by i_item_id),
 cs_items as
 (select i_item_id item_id
        ,sum(cs_ext_sales_price) cs_item_rev
  from catalog_sales
      ,item
      ,date_dim
 where cs_item_sk = i_item_sk
  and  d_date in (select d_date
                  from date_dim
                  where d_week_seq = (select d_week_seq 
                                      from date_dim
                                      where d_date = '2000-07-21'))
  and  cs_sold_date_sk = d_date_sk
 group by i_item_id),
 ws_items as
 (select i_item_id item_id
        ,sum(ws_ext_sales_price) ws_item_rev
  from web_sales
      ,item
      ,date_dim
 where ws_item_sk = i_item_sk
  and  d_date in (select d_date
                  from date_dim
                  where d_week_seq =(select d_week_seq 
                                     from date_dim
                                     where d_date = '2000-07-21'))
  and ws_sold_date_sk   = d_date_sk
 group by i_item_id)
  select  ss_items.item_id
       ,ss_item_rev
       ,ss_item_rev/((ss_item_rev+cs_item_rev+ws_item_rev)/3) * 100 ss_dev
       ,cs_item_rev
       ,cs_item_rev/((ss_item_rev+cs_item_rev+ws_item_rev)/3) * 100 cs_dev
       ,ws_item_rev
       ,ws_item_rev/((ss_item_rev+cs_item_rev+ws_item_rev)/3) * 100 ws_dev
       ,(ss_item_rev+cs_item_rev+ws_item_rev)/3 average
 from ss_items,cs_items,ws_items
 where ss_items.item_id=cs_items.item_id
   and ss_items.item_id=ws_items.item_id 
   and ss_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
   and ss_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and cs_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and cs_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and ws_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and ws_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
 order by item_id
         ,ss_item_rev
 limit 100;","with ss_items as
 (select i_item_id item_id
        ,sum(ss_ext_sales_price) ss_item_rev 
 from store_sales
     ,item
     ,date_dim
 where ss_item_sk = i_item_sk
   and d_date in (select d_date
                  from date_dim
                  where d_week_seq = (select d_week_seq 
                                      from date_dim
                                      where d_date = '2000-07-21'))
   and ss_sold_date_sk   = d_date_sk
 group by i_item_id),
 cs_items as
 (select i_item_id item_id
        ,sum(cs_ext_sales_price) cs_item_rev
  from catalog_sales
      ,item
      ,date_dim
 where cs_item_sk = i_item_sk
  and  d_date in (select d_date
                  from date_dim
                  where d_week_seq = (select d_week_seq 
                                      from date_dim
                                      where d_date = '2000-07-21'))
  and  cs_sold_date_sk = d_date_sk
 group by i_item_id),
 ws_items as
 (select i_item_id item_id
        ,sum(ws_ext_sales_price) ws_item_rev
  from web_sales
      ,item
      ,date_dim
 where ws_item_sk = i_item_sk
  and  d_date in (select d_date
                  from date_dim
                  where d_week_seq =(select d_week_seq 
                                     from date_dim
                                     where d_date = '2000-07-21'))
  and ws_sold_date_sk   = d_date_sk
 group by i_item_id)
  select  ss_items.item_id
       ,ss_item_rev
       ,ss_item_rev/((ss_item_rev+cs_item_rev+ws_item_rev)/3) * 100 ss_dev
       ,cs_item_rev
       ,cs_item_rev/((ss_item_rev+cs_item_rev+ws_item_rev)/3) * 100 cs_dev
       ,ws_item_rev
       ,ws_item_rev/((ss_item_rev+cs_item_rev+ws_item_rev)/3) * 100 ws_dev
       ,(ss_item_rev+cs_item_rev+ws_item_rev)/3 average
 from ss_items,cs_items,ws_items
 where ss_items.item_id=cs_items.item_id
   and ss_items.item_id=ws_items.item_id 
   and ss_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
   and ss_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and cs_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and cs_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and ws_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and ws_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
 order by item_id
         ,ss_item_rev
 limit 100;",ConstantFolding,tpcds,"with ss_items as
 (select i_item_id item_id
        ,sum(ss_ext_sales_price) ss_item_rev 
 from store_sales
     ,item
     ,date_dim
 where ss_item_sk = i_item_sk
   and d_date in (select d_date
                  from date_dim
                  where d_week_seq = (select d_week_seq 
                                      from date_dim
                                      where d_date = '2000-07-21'))
   and ss_sold_date_sk   = d_date_sk
 group by i_item_id),
 cs_items as
 (select i_item_id item_id
        ,sum(cs_ext_sales_price) cs_item_rev
  from catalog_sales
      ,item
      ,date_dim
 where cs_item_sk = i_item_sk
  and  d_date in (select d_date
                  from date_dim
                  where d_week_seq = (select d_week_seq 
                                      from date_dim
                                      where d_date = '2000-07-21'))
  and  cs_sold_date_sk = d_date_sk
 group by i_item_id),
 ws_items as
 (select i_item_id item_id
        ,sum(ws_ext_sales_price) ws_item_rev
  from web_sales
      ,item
      ,date_dim
 where ws_item_sk = i_item_sk
  and  d_date in (select d_date
                  from date_dim
                  where d_week_seq =(select d_week_seq 
                                     from date_dim
                                     where d_date = '2000-07-21'))
  and ws_sold_date_sk   = d_date_sk
 group by i_item_id)
  select  ss_items.item_id
       ,ss_item_rev
       ,ss_item_rev/((ss_item_rev+cs_item_rev+ws_item_rev)/3) * 100 ss_dev
       ,cs_item_rev
       ,cs_item_rev/((ss_item_rev+cs_item_rev+ws_item_rev)/3) * 100 cs_dev
       ,ws_item_rev
       ,ws_item_rev/((ss_item_rev+cs_item_rev+ws_item_rev)/3) * 100 ws_dev
       ,(ss_item_rev+cs_item_rev+ws_item_rev)/3 average
 from ss_items,cs_items,ws_items
 where ss_items.item_id=cs_items.item_id
   and ss_items.item_id=ws_items.item_id 
   and ss_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
   and ss_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and cs_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and cs_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev
   and ws_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev
   and ws_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev
 order by item_id
         ,ss_item_rev
 limit 100;",ConstantFolding
20,sql_020.sql,"with cs_ui as
 (select cs_item_sk
        ,sum(cs_ext_list_price) as sale,sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit) as refund
  from catalog_sales
      ,catalog_returns
  where cs_item_sk = cr_item_sk
    and cs_order_number = cr_order_number
  group by cs_item_sk
  having sum(cs_ext_list_price)>2*sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit)),
cross_sales as
 (select i_product_name product_name
     ,i_item_sk item_sk
     ,s_store_name store_name
     ,s_zip store_zip
     ,ad1.ca_street_number b_street_number
     ,ad1.ca_street_name b_street_name
     ,ad1.ca_city b_city
     ,ad1.ca_zip b_zip
     ,ad2.ca_street_number c_street_number
     ,ad2.ca_street_name c_street_name
     ,ad2.ca_city c_city
     ,ad2.ca_zip c_zip
     ,d1.d_year as syear
     ,d2.d_year as fsyear
     ,d3.d_year s2year
     ,count(*) cnt
     ,sum(ss_wholesale_cost) s1
     ,sum(ss_list_price) s2
     ,sum(ss_coupon_amt) s3
  FROM   store_sales
        ,store_returns
        ,cs_ui
        ,date_dim d1
        ,date_dim d2
        ,date_dim d3
        ,store
        ,customer
        ,customer_demographics cd1
        ,customer_demographics cd2
        ,promotion
        ,household_demographics hd1
        ,household_demographics hd2
        ,customer_address ad1
        ,customer_address ad2
        ,income_band ib1
        ,income_band ib2
        ,item
  WHERE  ss_store_sk = s_store_sk AND
         ss_sold_date_sk = d1.d_date_sk AND
         ss_customer_sk = c_customer_sk AND
         ss_cdemo_sk= cd1.cd_demo_sk AND
         ss_hdemo_sk = hd1.hd_demo_sk AND
         ss_addr_sk = ad1.ca_address_sk and
         ss_item_sk = i_item_sk and
         ss_item_sk = sr_item_sk and
         ss_ticket_number = sr_ticket_number and
         ss_item_sk = cs_ui.cs_item_sk and
         c_current_cdemo_sk = cd2.cd_demo_sk AND
         c_current_hdemo_sk = hd2.hd_demo_sk AND
         c_current_addr_sk = ad2.ca_address_sk and
         c_first_sales_date_sk = d2.d_date_sk and
         c_first_shipto_date_sk = d3.d_date_sk and
         ss_promo_sk = p_promo_sk and
         hd1.hd_income_band_sk = ib1.ib_income_band_sk and
         hd2.hd_income_band_sk = ib2.ib_income_band_sk and
         cd1.cd_marital_status <> cd2.cd_marital_status and
         i_color in ('chocolate','lime','sienna','drab','goldenrod','navajo') and
         i_current_price between 75 and 75 + 10 and
         i_current_price between 75 + 1 and 75 + 15
group by i_product_name
       ,i_item_sk
       ,s_store_name
       ,s_zip
       ,ad1.ca_street_number
       ,ad1.ca_street_name
       ,ad1.ca_city
       ,ad1.ca_zip
       ,ad2.ca_street_number
       ,ad2.ca_street_name
       ,ad2.ca_city
       ,ad2.ca_zip
       ,d1.d_year
       ,d2.d_year
       ,d3.d_year
)
select cs1.product_name
     ,cs1.store_name
     ,cs1.store_zip
     ,cs1.b_street_number
     ,cs1.b_street_name
     ,cs1.b_city
     ,cs1.b_zip
     ,cs1.c_street_number
     ,cs1.c_street_name
     ,cs1.c_city
     ,cs1.c_zip
     ,cs1.syear
     ,cs1.cnt
     ,cs1.s1 as s11
     ,cs1.s2 as s21
     ,cs1.s3 as s31
     ,cs2.s1 as s12
     ,cs2.s2 as s22
     ,cs2.s3 as s32
     ,cs2.syear
     ,cs2.cnt
from cross_sales cs1,cross_sales cs2
where cs1.item_sk=cs2.item_sk and
     cs1.syear = 2001 and
     cs2.syear = 2001 + 1 and
     cs2.cnt <= cs1.cnt and
     cs1.store_name = cs2.store_name and
     cs1.store_zip = cs2.store_zip
order by cs1.product_name
       ,cs1.store_name
       ,cs2.cnt
       ,cs1.s1
       ,cs2.s1;","SELECT t5.product_name, t5.store_name, t5.store_zip, t5.b_street_number, t5.b_street_name, t5.b_city, t5.b_zip, t5.c_street_number, t5.c_street_name, t5.c_city, t5.c_zip, t5.syear, t5.cnt, t5.s1 AS s11, t5.s2 AS s21, t5.s3 AS s31, t12.s1 AS s12, t12.s2 AS s22, t12.s3 AS s32, t12.syear AS syear0, t12.cnt AS cnt0 FROM (SELECT item.i_product_name AS product_name, item.i_item_sk AS item_sk, store.s_store_name AS store_name, store.s_zip AS store_zip, customer_address.ca_street_number AS b_street_number, customer_address.ca_street_name AS b_street_name, customer_address.ca_city AS b_city, customer_address.ca_zip AS b_zip, customer_address0.ca_street_number AS c_street_number, customer_address0.ca_street_name AS c_street_name, customer_address0.ca_city AS c_city, customer_address0.ca_zip AS c_zip, date_dim.d_year AS syear, date_dim0.d_year AS fsyear, date_dim1.d_year AS s2year, COUNT(*) AS cnt, SUM(store_sales.ss_wholesale_cost) AS s1, SUM(store_sales.ss_list_price) AS s2, SUM(store_sales.ss_coupon_amt) AS s3 FROM store_sales, store_returns, (SELECT catalog_sales.cs_item_sk, SUM(catalog_sales.cs_ext_list_price) AS sale, SUM(catalog_returns.cr_refunded_cash + catalog_returns.cr_reversed_charge + catalog_returns.cr_store_credit) AS refund FROM catalog_sales, catalog_returns WHERE catalog_sales.cs_item_sk = catalog_returns.cr_item_sk AND catalog_sales.cs_order_number = catalog_returns.cr_order_number GROUP BY catalog_sales.cs_item_sk HAVING SUM(catalog_sales.cs_ext_list_price) > 2 * SUM(catalog_returns.cr_refunded_cash + catalog_returns.cr_reversed_charge + catalog_returns.cr_store_credit)) AS t2, date_dim, date_dim AS date_dim0, date_dim AS date_dim1, store, customer, customer_demographics, customer_demographics AS customer_demographics0, promotion, household_demographics, household_demographics AS household_demographics0, customer_address, customer_address AS customer_address0, income_band, income_band AS income_band0, item WHERE store_sales.ss_store_sk = store.s_store_sk AND (store_sales.ss_sold_date_sk = date_dim.d_date_sk AND store_sales.ss_customer_sk = customer.c_customer_sk) AND (store_sales.ss_cdemo_sk = customer_demographics.cd_demo_sk AND (store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk AND store_sales.ss_addr_sk = customer_address.ca_address_sk)) AND (store_sales.ss_item_sk = item.i_item_sk AND (store_sales.ss_item_sk = store_returns.sr_item_sk AND store_sales.ss_ticket_number = store_returns.sr_ticket_number) AND (store_sales.ss_item_sk = t2.cs_item_sk AND (customer.c_current_cdemo_sk = customer_demographics0.cd_demo_sk AND customer.c_current_hdemo_sk = household_demographics0.hd_demo_sk))) AND (customer.c_current_addr_sk = customer_address0.ca_address_sk AND (customer.c_first_sales_date_sk = date_dim0.d_date_sk AND customer.c_first_shipto_date_sk = date_dim1.d_date_sk) AND (store_sales.ss_promo_sk = promotion.p_promo_sk AND (household_demographics.hd_income_band_sk = income_band.ib_income_band_sk AND household_demographics0.hd_income_band_sk = income_band0.ib_income_band_sk)) AND (customer_demographics.cd_marital_status <> customer_demographics0.cd_marital_status AND (item.i_color IN ('chocolate', 'drab', 'goldenrod', 'lime', 'navajo', 'sienna') AND item.i_current_price >= 75) AND (item.i_current_price <= 75 + 10 AND (item.i_current_price >= 75 + 1 AND item.i_current_price <= 75 + 15)))) GROUP BY item.i_product_name, item.i_item_sk, store.s_store_name, store.s_zip, customer_address.ca_street_number, customer_address.ca_street_name, customer_address.ca_city, customer_address.ca_zip, customer_address0.ca_street_number, customer_address0.ca_street_name, customer_address0.ca_city, customer_address0.ca_zip, date_dim.d_year, date_dim0.d_year, date_dim1.d_year) AS t5, (SELECT item0.i_product_name AS product_name, item0.i_item_sk AS item_sk, store0.s_store_name AS store_name, store0.s_zip AS store_zip, customer_address1.ca_street_number AS b_street_number, customer_address1.ca_street_name AS b_street_name, customer_address1.ca_city AS b_city, customer_address1.ca_zip AS b_zip, customer_address2.ca_street_number AS c_street_number, customer_address2.ca_street_name AS c_street_name, customer_address2.ca_city AS c_city, customer_address2.ca_zip AS c_zip, date_dim2.d_year AS syear, date_dim3.d_year AS fsyear, date_dim4.d_year AS s2year, COUNT(*) AS cnt, SUM(store_sales0.ss_wholesale_cost) AS s1, SUM(store_sales0.ss_list_price) AS s2, SUM(store_sales0.ss_coupon_amt) AS s3 FROM store_sales AS store_sales0, store_returns AS store_returns0, (SELECT catalog_sales0.cs_item_sk, SUM(catalog_sales0.cs_ext_list_price) AS sale, SUM(catalog_returns0.cr_refunded_cash + catalog_returns0.cr_reversed_charge + catalog_returns0.cr_store_credit) AS refund FROM catalog_sales AS catalog_sales0, catalog_returns AS catalog_returns0 WHERE catalog_sales0.cs_item_sk = catalog_returns0.cr_item_sk AND catalog_sales0.cs_order_number = catalog_returns0.cr_order_number GROUP BY catalog_sales0.cs_item_sk HAVING SUM(catalog_sales0.cs_ext_list_price) > 2 * SUM(catalog_returns0.cr_refunded_cash + catalog_returns0.cr_reversed_charge + catalog_returns0.cr_store_credit)) AS t9, date_dim AS date_dim2, date_dim AS date_dim3, date_dim AS date_dim4, store AS store0, customer AS customer0, customer_demographics AS customer_demographics1, customer_demographics AS customer_demographics2, promotion AS promotion0, household_demographics AS household_demographics1, household_demographics AS household_demographics2, customer_address AS customer_address1, customer_address AS customer_address2, income_band AS income_band1, income_band AS income_band2, item AS item0 WHERE store_sales0.ss_store_sk = store0.s_store_sk AND (store_sales0.ss_sold_date_sk = date_dim2.d_date_sk AND store_sales0.ss_customer_sk = customer0.c_customer_sk) AND (store_sales0.ss_cdemo_sk = customer_demographics1.cd_demo_sk AND (store_sales0.ss_hdemo_sk = household_demographics1.hd_demo_sk AND store_sales0.ss_addr_sk = customer_address1.ca_address_sk)) AND (store_sales0.ss_item_sk = item0.i_item_sk AND (store_sales0.ss_item_sk = store_returns0.sr_item_sk AND store_sales0.ss_ticket_number = store_returns0.sr_ticket_number) AND (store_sales0.ss_item_sk = t9.cs_item_sk AND (customer0.c_current_cdemo_sk = customer_demographics2.cd_demo_sk AND customer0.c_current_hdemo_sk = household_demographics2.hd_demo_sk))) AND (customer0.c_current_addr_sk = customer_address2.ca_address_sk AND (customer0.c_first_sales_date_sk = date_dim3.d_date_sk AND customer0.c_first_shipto_date_sk = date_dim4.d_date_sk) AND (store_sales0.ss_promo_sk = promotion0.p_promo_sk AND (household_demographics1.hd_income_band_sk = income_band1.ib_income_band_sk AND household_demographics2.hd_income_band_sk = income_band2.ib_income_band_sk)) AND (customer_demographics1.cd_marital_status <> customer_demographics2.cd_marital_status AND (item0.i_color IN ('chocolate', 'drab', 'goldenrod', 'lime', 'navajo', 'sienna') AND item0.i_current_price >= 75) AND (item0.i_current_price <= 75 + 10 AND (item0.i_current_price >= 75 + 1 AND item0.i_current_price <= 75 + 15)))) GROUP BY item0.i_product_name, item0.i_item_sk, store0.s_store_name, store0.s_zip, customer_address1.ca_street_number, customer_address1.ca_street_name, customer_address1.ca_city, customer_address1.ca_zip, customer_address2.ca_street_number, customer_address2.ca_street_name, customer_address2.ca_city, customer_address2.ca_zip, date_dim2.d_year, date_dim3.d_year, date_dim4.d_year) AS t12 WHERE t5.item_sk = t12.item_sk AND (t5.syear = 2001 AND t12.syear = 2001 + 1) AND (t12.cnt <= t5.cnt AND (t5.store_name = t12.store_name AND t5.store_zip = t12.store_zip)) ORDER BY t5.product_name, t5.store_name, t12.cnt, t5.s1, t12.s1",None,tpcds,"with cs_ui as
 (select cs_item_sk
        ,sum(cs_ext_list_price) as sale,sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit) as refund
  from catalog_sales
      ,catalog_returns
  where cs_item_sk = cr_item_sk
    and cs_order_number = cr_order_number
  group by cs_item_sk
  having sum(cs_ext_list_price)>2*sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit)),
cross_sales as
 (select i_product_name product_name
     ,i_item_sk item_sk
     ,s_store_name store_name
     ,s_zip store_zip
     ,ad1.ca_street_number b_street_number
     ,ad1.ca_street_name b_street_name
     ,ad1.ca_city b_city
     ,ad1.ca_zip b_zip
     ,ad2.ca_street_number c_street_number
     ,ad2.ca_street_name c_street_name
     ,ad2.ca_city c_city
     ,ad2.ca_zip c_zip
     ,d1.d_year as syear
     ,d2.d_year as fsyear
     ,d3.d_year s2year
     ,count(*) cnt
     ,sum(ss_wholesale_cost) s1
     ,sum(ss_list_price) s2
     ,sum(ss_coupon_amt) s3
  FROM   store_sales
        ,store_returns
        ,cs_ui
        ,date_dim d1
        ,date_dim d2
        ,date_dim d3
        ,store
        ,customer
        ,customer_demographics cd1
        ,customer_demographics cd2
        ,promotion
        ,household_demographics hd1
        ,household_demographics hd2
        ,customer_address ad1
        ,customer_address ad2
        ,income_band ib1
        ,income_band ib2
        ,item
  WHERE  ss_store_sk = s_store_sk AND
         ss_sold_date_sk = d1.d_date_sk AND
         ss_customer_sk = c_customer_sk AND
         ss_cdemo_sk= cd1.cd_demo_sk AND
         ss_hdemo_sk = hd1.hd_demo_sk AND
         ss_addr_sk = ad1.ca_address_sk and
         ss_item_sk = i_item_sk and
         ss_item_sk = sr_item_sk and
         ss_ticket_number = sr_ticket_number and
         ss_item_sk = cs_ui.cs_item_sk and
         c_current_cdemo_sk = cd2.cd_demo_sk AND
         c_current_hdemo_sk = hd2.hd_demo_sk AND
         c_current_addr_sk = ad2.ca_address_sk and
         c_first_sales_date_sk = d2.d_date_sk and
         c_first_shipto_date_sk = d3.d_date_sk and
         ss_promo_sk = p_promo_sk and
         hd1.hd_income_band_sk = ib1.ib_income_band_sk and
         hd2.hd_income_band_sk = ib2.ib_income_band_sk and
         cd1.cd_marital_status <> cd2.cd_marital_status and
         i_color in ('chocolate','lime','sienna','drab','goldenrod','navajo') and
         i_current_price between 75 and 75 + 10 and
         i_current_price between 75 + 1 and 75 + 15
group by i_product_name
       ,i_item_sk
       ,s_store_name
       ,s_zip
       ,ad1.ca_street_number
       ,ad1.ca_street_name
       ,ad1.ca_city
       ,ad1.ca_zip
       ,ad2.ca_street_number
       ,ad2.ca_street_name
       ,ad2.ca_city
       ,ad2.ca_zip
       ,d1.d_year
       ,d2.d_year
       ,d3.d_year
)
select cs1.product_name
     ,cs1.store_name
     ,cs1.store_zip
     ,cs1.b_street_number
     ,cs1.b_street_name
     ,cs1.b_city
     ,cs1.b_zip
     ,cs1.c_street_number
     ,cs1.c_street_name
     ,cs1.c_city
     ,cs1.c_zip
     ,cs1.syear
     ,cs1.cnt
     ,cs1.s1 as s11
     ,cs1.s2 as s21
     ,cs1.s3 as s31
     ,cs2.s1 as s12
     ,cs2.s2 as s22
     ,cs2.s3 as s32
     ,cs2.syear
     ,cs2.cnt
from cross_sales cs1,cross_sales cs2
where cs1.item_sk=cs2.item_sk and
     cs1.syear = 2001 and
     cs2.syear = 2001 + 1 and
     cs2.cnt <= cs1.cnt and
     cs1.store_name = cs2.store_name and
     cs1.store_zip = cs2.store_zip
order by cs1.product_name
       ,cs1.store_name
       ,cs2.cnt
       ,cs1.s1
       ,cs2.s1;",ConstantFolding
21,sql_021.sql,"select  
    sum(ss_net_profit)/sum(ss_ext_sales_price) as gross_margin
   ,i_category
   ,i_class
   ,grouping(i_category)+grouping(i_class) as lochierarchy
   ,rank() over (
 	partition by grouping(i_category)+grouping(i_class),
 	case when grouping(i_class) = 0 then i_category end 
 	order by sum(ss_net_profit)/sum(ss_ext_sales_price) asc) as rank_within_parent
 from
    store_sales
   ,date_dim       d1
   ,item
   ,store
 where
    d1.d_year = 1998 
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk  = ss_item_sk 
 and s_store_sk  = ss_store_sk
 and s_state in ('MO','OH','LA','SC',
                 'TN','SD','MI','AL')
 group by rollup(i_category,i_class)
 order by
   lochierarchy desc
  ,case when lochierarchy = 0 then i_category end
  ,rank_within_parent
  limit 100;","select  
    sum(ss_net_profit)/sum(ss_ext_sales_price) as gross_margin
   ,i_category
   ,i_class
   ,grouping(i_category)+grouping(i_class) as lochierarchy
   ,rank() over (
 	partition by grouping(i_category)+grouping(i_class),
 	case when grouping(i_class) = 0 then i_category end 
 	order by sum(ss_net_profit)/sum(ss_ext_sales_price) asc) as rank_within_parent
 from
    store_sales
   ,date_dim       d1
   ,item
   ,store
 where
    d1.d_year = 1998 
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk  = ss_item_sk 
 and s_store_sk  = ss_store_sk
 and s_state in ('MO','OH','LA','SC',
                 'TN','SD','MI','AL')
 group by rollup(i_category,i_class)
 order by
   lochierarchy desc
  ,case when lochierarchy = 0 then i_category end
  ,rank_within_parent
  limit 100;",UnwrapCastInBinaryComparison,tpcds,"select  
    sum(ss_net_profit)/sum(ss_ext_sales_price) as gross_margin
   ,i_category
   ,i_class
   ,grouping(i_category)+grouping(i_class) as lochierarchy
   ,rank() over (
 	partition by grouping(i_category)+grouping(i_class),
 	case when grouping(i_class) = 0 then i_category end 
 	order by sum(ss_net_profit)/sum(ss_ext_sales_price) asc) as rank_within_parent
 from
    store_sales
   ,date_dim       d1
   ,item
   ,store
 where
    d1.d_year = 1998 
 and d1.d_date_sk = ss_sold_date_sk
 and i_item_sk  = ss_item_sk 
 and s_store_sk  = ss_store_sk
 and s_state in ('MO','OH','LA','SC',
                 'TN','SD','MI','AL')
 group by rollup(i_category,i_class)
 order by
   lochierarchy desc
  ,case when lochierarchy = 0 then i_category end
  ,rank_within_parent
  limit 100;","RemoveRedundantAliases,UnwrapCastInBinaryComparison"
22,sql_022.sql,"with ss as (
 select
          i_manufact_id,sum(ss_ext_sales_price) total_sales
 from
 	store_sales,
 	date_dim,
         customer_address,
         item
 where
         i_manufact_id in (select
  i_manufact_id
from
 item
where i_category in ('Jewelry'))
 and     ss_item_sk              = i_item_sk
 and     ss_sold_date_sk         = d_date_sk
 and     d_year                  = 1998
 and     d_moy                   = 5
 and     ss_addr_sk              = ca_address_sk
 and     ca_gmt_offset           = -5 
 group by i_manufact_id),
 cs as (
 select
          i_manufact_id,sum(cs_ext_sales_price) total_sales
 from
 	catalog_sales,
 	date_dim,
         customer_address,
         item
 where
         i_manufact_id               in (select
  i_manufact_id
from
 item
where i_category in ('Jewelry'))
 and     cs_item_sk              = i_item_sk
 and     cs_sold_date_sk         = d_date_sk
 and     d_year                  = 1998
 and     d_moy                   = 5
 and     cs_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -5 
 group by i_manufact_id),
 ws as (
 select
          i_manufact_id,sum(ws_ext_sales_price) total_sales
 from
 	web_sales,
 	date_dim,
         customer_address,
         item
 where
         i_manufact_id               in (select
  i_manufact_id
from
 item
where i_category in ('Jewelry'))
 and     ws_item_sk              = i_item_sk
 and     ws_sold_date_sk         = d_date_sk
 and     d_year                  = 1998
 and     d_moy                   = 5
 and     ws_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -5
 group by i_manufact_id)
  select  i_manufact_id ,sum(total_sales) total_sales
 from  (select * from ss 
        union all
        select * from cs 
        union all
        select * from ws) tmp1
 group by i_manufact_id
 order by total_sales
limit 100;","with ss as (
 select
          i_manufact_id,sum(ss_ext_sales_price) total_sales
 from
 	store_sales,
 	date_dim,
         customer_address,
         item
 where
         i_manufact_id in (select
  i_manufact_id
from
 item
where i_category in ('Jewelry'))
 and     ss_item_sk              = i_item_sk
 and     ss_sold_date_sk         = d_date_sk
 and     d_year                  = 1998
 and     d_moy                   = 5
 and     ss_addr_sk              = ca_address_sk
 and     ca_gmt_offset           = -5 
 group by i_manufact_id),
 cs as (
 select
          i_manufact_id,sum(cs_ext_sales_price) total_sales
 from
 	catalog_sales,
 	date_dim,
         customer_address,
         item
 where
         i_manufact_id               in (select
  i_manufact_id
from
 item
where i_category in ('Jewelry'))
 and     cs_item_sk              = i_item_sk
 and     cs_sold_date_sk         = d_date_sk
 and     d_year                  = 1998
 and     d_moy                   = 5
 and     cs_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -5 
 group by i_manufact_id),
 ws as (
 select
          i_manufact_id,sum(ws_ext_sales_price) total_sales
 from
 	web_sales,
 	date_dim,
         customer_address,
         item
 where
         i_manufact_id               in (select
  i_manufact_id
from
 item
where i_category in ('Jewelry'))
 and     ws_item_sk              = i_item_sk
 and     ws_sold_date_sk         = d_date_sk
 and     d_year                  = 1998
 and     d_moy                   = 5
 and     ws_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -5
 group by i_manufact_id)
  select  i_manufact_id ,sum(total_sales) total_sales
 from  (select * from ss 
        union all
        select * from cs 
        union all
        select * from ws) tmp1
 group by i_manufact_id
 order by total_sales
limit 100;","ConstantFolding,RemoveNoopOperators",tpcds,"with ss as (
 select
          i_manufact_id,sum(ss_ext_sales_price) total_sales
 from
 	store_sales,
 	date_dim,
         customer_address,
         item
 where
         i_manufact_id in (select
  i_manufact_id
from
 item
where i_category in ('Jewelry'))
 and     ss_item_sk              = i_item_sk
 and     ss_sold_date_sk         = d_date_sk
 and     d_year                  = 1998
 and     d_moy                   = 5
 and     ss_addr_sk              = ca_address_sk
 and     ca_gmt_offset           = -5 
 group by i_manufact_id),
 cs as (
 select
          i_manufact_id,sum(cs_ext_sales_price) total_sales
 from
 	catalog_sales,
 	date_dim,
         customer_address,
         item
 where
         i_manufact_id               in (select
  i_manufact_id
from
 item
where i_category in ('Jewelry'))
 and     cs_item_sk              = i_item_sk
 and     cs_sold_date_sk         = d_date_sk
 and     d_year                  = 1998
 and     d_moy                   = 5
 and     cs_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -5 
 group by i_manufact_id),
 ws as (
 select
          i_manufact_id,sum(ws_ext_sales_price) total_sales
 from
 	web_sales,
 	date_dim,
         customer_address,
         item
 where
         i_manufact_id               in (select
  i_manufact_id
from
 item
where i_category in ('Jewelry'))
 and     ws_item_sk              = i_item_sk
 and     ws_sold_date_sk         = d_date_sk
 and     d_year                  = 1998
 and     d_moy                   = 5
 and     ws_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -5
 group by i_manufact_id)
  select  i_manufact_id ,sum(total_sales) total_sales
 from  (select * from ss 
        union all
        select * from cs 
        union all
        select * from ws) tmp1
 group by i_manufact_id
 order by total_sales
limit 100;","ConstantFolding,OptimizeIn,RemoveNoopOperators"
23,sql_023.sql,"select  c_last_name
       ,c_first_name
       ,ca_city
       ,bought_city
       ,ss_ticket_number
       ,amt,profit 
 from
   (select ss_ticket_number
          ,ss_customer_sk
          ,ca_city bought_city
          ,sum(ss_coupon_amt) amt
          ,sum(ss_net_profit) profit
    from store_sales,date_dim,store,household_demographics,customer_address 
    where store_sales.ss_sold_date_sk = date_dim.d_date_sk
    and store_sales.ss_store_sk = store.s_store_sk  
    and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
    and store_sales.ss_addr_sk = customer_address.ca_address_sk
    and (household_demographics.hd_dep_count = 8 or
         household_demographics.hd_vehicle_count= 4)
    and date_dim.d_dow in (6,0)
    and date_dim.d_year in (1999,1999+1,1999+2) 
    and store.s_city in ('Pleasant Hill','Fairview','Liberty','Oakland','Bethel') 
    group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr
    where ss_customer_sk = c_customer_sk
      and customer.c_current_addr_sk = current_addr.ca_address_sk
      and current_addr.ca_city <> bought_city
  order by c_last_name
          ,c_first_name
          ,ca_city
          ,bought_city
          ,ss_ticket_number
  limit 100;","SELECT customer.c_last_name, customer.c_first_name, customer_address0.ca_city, t4.bought_city, t4.ss_ticket_number, t4.amt, t4.profit FROM (SELECT store_sales.ss_ticket_number, store_sales.ss_customer_sk, customer_address.ca_city AS bought_city, SUM(store_sales.ss_coupon_amt) AS amt, SUM(store_sales.ss_net_profit) AS profit FROM store_sales INNER JOIN (SELECT * FROM date_dim WHERE d_dow IN (0, 6) AND (d_year = 1999 OR d_year = 1999 + 1 OR d_year = 1999 + 2)) AS t ON store_sales.ss_sold_date_sk = t.d_date_sk INNER JOIN (SELECT * FROM store WHERE s_city IN ('Bethel', 'Fairview', 'Liberty', 'Oakland', 'Pleasant Hill')) AS t0 ON store_sales.ss_store_sk = t0.s_store_sk INNER JOIN (SELECT * FROM household_demographics WHERE hd_dep_count = 8 OR hd_vehicle_count = 4) AS t1 ON store_sales.ss_hdemo_sk = t1.hd_demo_sk INNER JOIN customer_address ON store_sales.ss_addr_sk = customer_address.ca_address_sk GROUP BY store_sales.ss_ticket_number, store_sales.ss_customer_sk, store_sales.ss_addr_sk, customer_address.ca_city) AS t4 INNER JOIN customer ON t4.ss_customer_sk = customer.c_customer_sk INNER JOIN customer_address AS customer_address0 ON customer.c_current_addr_sk = customer_address0.ca_address_sk AND customer_address0.ca_city <> t4.bought_city ORDER BY customer.c_last_name, customer.c_first_name, customer_address0.ca_city, t4.bought_city, t4.ss_ticket_number LIMIT 100",None,tpcds,"SELECT t1087.c_last_name, t1087.c_first_name, customer_address204.ca_city, t1087.bought_city, t1087.ss_ticket_number, t1087.amt, t1087.profit

FROM (SELECT *

FROM (SELECT t1082.ss_ticket_number, t1082.ss_customer_sk, customer_address203.ca_city AS bought_city, SUM(t1082.ss_coupon_amt) AS amt, SUM(t1082.ss_net_profit) AS profit

FROM (SELECT *

FROM (SELECT *

FROM (SELECT *

FROM store_sales AS store_sales101,

(SELECT *

FROM date_dim

WHERE d_dow IN (0, 6) AND (d_year = 1998 OR d_year = 1998 + 1 OR d_year = 1998 + 2)) AS t1077

WHERE store_sales101.ss_sold_date_sk = t1077.d_date_sk) AS t1078,

(SELECT *

FROM store

WHERE s_city IN ('Georgetown', 'Hamilton', 'Hillcrest', 'New Hope', 'Walnut Grove')) AS t1079

WHERE t1078.ss_store_sk = t1079.s_store_sk) AS t1080,

(SELECT *

FROM household_demographics

WHERE hd_dep_count = 9 OR hd_vehicle_count = 1) AS t1081

WHERE t1080.ss_hdemo_sk = t1081.hd_demo_sk) AS t1082,

customer_address AS customer_address203

WHERE t1082.ss_addr_sk = customer_address203.ca_address_sk

GROUP BY t1082.ss_ticket_number, t1082.ss_customer_sk, t1082.ss_addr_sk, customer_address203.ca_city) AS t1086,

customer AS customer101

WHERE t1086.ss_customer_sk = customer101.c_customer_sk) AS t1087,

customer_address AS customer_address204

WHERE t1087.c_current_addr_sk = customer_address204.ca_address_sk AND customer_address204.ca_city <> t1087.bought_city

ORDER BY t1087.c_last_name, t1087.c_first_name, customer_address204.ca_city, t1087.bought_city, t1087.ss_ticket_number

LIMIT 100",None
24,sql_024.sql,"select  
   substr(w_warehouse_name,1,20)
  ,sm_type
  ,web_name
  ,sum(case when (ws_ship_date_sk - ws_sold_date_sk <= 30 ) then 1 else 0 end)  as 30_days 
  ,sum(case when (ws_ship_date_sk - ws_sold_date_sk > 30) and 
                 (ws_ship_date_sk - ws_sold_date_sk <= 60) then 1 else 0 end )  as 31_60_days 
  ,sum(case when (ws_ship_date_sk - ws_sold_date_sk > 60) and 
                 (ws_ship_date_sk - ws_sold_date_sk <= 90) then 1 else 0 end)  as 61_90_days 
  ,sum(case when (ws_ship_date_sk - ws_sold_date_sk > 90) and
                 (ws_ship_date_sk - ws_sold_date_sk <= 120) then 1 else 0 end)  as 91_120_days 
  ,sum(case when (ws_ship_date_sk - ws_sold_date_sk  > 120) then 1 else 0 end)  as more_than_120_days 
from
   web_sales
  ,warehouse
  ,ship_mode
  ,web_site
  ,date_dim
where
    d_month_seq between 1217 and 1217 + 11
and ws_ship_date_sk   = d_date_sk
and ws_warehouse_sk   = w_warehouse_sk
and ws_ship_mode_sk   = sm_ship_mode_sk
and ws_web_site_sk    = web_site_sk
group by
   substr(w_warehouse_name,1,20)
  ,sm_type
  ,web_name
order by substr(w_warehouse_name,1,20)
        ,sm_type
       ,web_name
limit 100;","SELECT SUBSTR(warehouse.w_warehouse_name FROM 1 FOR 20), ship_mode.sm_type, web_site.web_name, SUM(CASE WHEN web_sales.ws_ship_date_sk - web_sales.ws_sold_date_sk <= 30 THEN 1 ELSE 0 END) AS 30_days, SUM(CASE WHEN web_sales.ws_ship_date_sk - web_sales.ws_sold_date_sk > 30 AND web_sales.ws_ship_date_sk - web_sales.ws_sold_date_sk <= 60 THEN 1 ELSE 0 END) AS 31_60_days, SUM(CASE WHEN web_sales.ws_ship_date_sk - web_sales.ws_sold_date_sk > 60 AND web_sales.ws_ship_date_sk - web_sales.ws_sold_date_sk <= 90 THEN 1 ELSE 0 END) AS 61_90_days, SUM(CASE WHEN web_sales.ws_ship_date_sk - web_sales.ws_sold_date_sk > 90 AND web_sales.ws_ship_date_sk - web_sales.ws_sold_date_sk <= 120 THEN 1 ELSE 0 END) AS 91_120_days, SUM(CASE WHEN web_sales.ws_ship_date_sk - web_sales.ws_sold_date_sk > 120 THEN 1 ELSE 0 END) AS more_than_120_days FROM web_sales INNER JOIN warehouse ON web_sales.ws_warehouse_sk = warehouse.w_warehouse_sk INNER JOIN ship_mode ON web_sales.ws_ship_mode_sk = ship_mode.sm_ship_mode_sk INNER JOIN web_site ON web_sales.ws_web_site_sk = web_site.web_site_sk INNER JOIN (SELECT * FROM date_dim WHERE d_month_seq >= 1217 AND d_month_seq <= 1217 + 11) AS t ON web_sales.ws_ship_date_sk = t.d_date_sk GROUP BY SUBSTR(warehouse.w_warehouse_name FROM 1 FOR 20), ship_mode.sm_type, web_site.web_name ORDER BY SUBSTR(warehouse.w_warehouse_name FROM 1 FOR 20), ship_mode.sm_type, web_site.web_name LIMIT 100",None,tpcds,"SELECT
  SUBSTRING(
    warehouse101.w_warehouse_name
    FROM
      1 FOR 20
  ),
  ship_mode101.sm_type,
  web_site101.web_name,
  SUM(
    CASE
      WHEN web_sales101.ws_ship_date_sk - web_sales101.ws_sold_date_sk <= 30 THEN 1
      ELSE 0
    END
  ) AS 30_days,
  SUM(
    CASE
      WHEN web_sales101.ws_ship_date_sk - web_sales101.ws_sold_date_sk > 30
      AND web_sales101.ws_ship_date_sk - web_sales101.ws_sold_date_sk <= 60 THEN 1
      ELSE 0
    END
  ) AS 31_60_days,
  SUM(
    CASE
      WHEN web_sales101.ws_ship_date_sk - web_sales101.ws_sold_date_sk > 60
      AND web_sales101.ws_ship_date_sk - web_sales101.ws_sold_date_sk <= 90 THEN 1
      ELSE 0
    END
  ) AS 61_90_days,
  SUM(
    CASE
      WHEN web_sales101.ws_ship_date_sk - web_sales101.ws_sold_date_sk > 90
      AND web_sales101.ws_ship_date_sk - web_sales101.ws_sold_date_sk <= 120 THEN 1
      ELSE 0
    END
  ) AS 91_120_days,
  SUM(
    CASE
      WHEN web_sales101.ws_ship_date_sk - web_sales101.ws_sold_date_sk > 120 THEN 1
      ELSE 0
    END
  ) AS more_than_120_days
FROM
  web_sales AS web_sales101
  INNER JOIN warehouse AS warehouse101 ON web_sales101.ws_warehouse_sk = warehouse101.w_warehouse_sk
  INNER JOIN ship_mode AS ship_mode101 ON web_sales101.ws_ship_mode_sk = ship_mode101.sm_ship_mode_sk
  INNER JOIN web_site AS web_site101 ON web_sales101.ws_web_site_sk = web_site101.web_site_sk
  INNER JOIN (
    SELECT
      *
    FROM
      date_dim
    WHERE
      d_month_seq >= 1185
      AND d_month_seq <= 1185 + 11
  ) AS t599 ON web_sales101.ws_ship_date_sk = t599.d_date_sk
GROUP BY
  SUBSTRING(
    warehouse101.w_warehouse_name
    FROM
      1 FOR 20
  ),
  ship_mode101.sm_type,
  web_site101.web_name
ORDER BY
  SUBSTRING(
    warehouse101.w_warehouse_name
    FROM
      1 FOR 20
  ),
  ship_mode101.sm_type,
  web_site101.web_name limit 100;",None
25,sql_025.sql,"select  
   count(distinct cs_order_number) as order_count
  ,sum(cs_ext_ship_cost) as total_shipping_cost
  ,sum(cs_net_profit) as total_net_profit
from
   catalog_sales cs1
  ,date_dim
  ,customer_address
  ,call_center
where
    d_date between '2001-4-01' and 
           (date_add(cast('2001-4-01' as date), 60))
and cs1.cs_ship_date_sk = d_date_sk
and cs1.cs_ship_addr_sk = ca_address_sk
and ca_state = 'TX'
and cs1.cs_call_center_sk = cc_call_center_sk
and cc_county in ('Franklin Parish','Walker County','Ziebach County','Fairfield County',
                  'Daviess County'
)
and exists (select *
            from catalog_sales cs2
            where cs1.cs_order_number = cs2.cs_order_number
              and cs1.cs_warehouse_sk <> cs2.cs_warehouse_sk)
and not exists(select *
               from catalog_returns cr1
               where cs1.cs_order_number = cr1.cr_order_number)
order by count(distinct cs_order_number)
limit 100;","select  
   count(distinct cs_order_number) as order_count
  ,sum(cs_ext_ship_cost) as total_shipping_cost
  ,sum(cs_net_profit) as total_net_profit
from
   catalog_sales cs1
  ,date_dim
  ,customer_address
  ,call_center
where
    d_date between '2001-4-01' and 
           (date_add(cast('2001-4-01' as date), 60))
and cs1.cs_ship_date_sk = d_date_sk
and cs1.cs_ship_addr_sk = ca_address_sk
and ca_state = 'TX'
and cs1.cs_call_center_sk = cc_call_center_sk
and cc_county in ('Franklin Parish','Walker County','Ziebach County','Fairfield County',
                  'Daviess County'
)
and exists (select *
            from catalog_sales cs2
            where cs1.cs_order_number = cs2.cs_order_number
              and cs1.cs_warehouse_sk <> cs2.cs_warehouse_sk)
and not exists(select *
               from catalog_returns cr1
               where cs1.cs_order_number = cr1.cr_order_number)
order by count(distinct cs_order_number)
limit 100;",RemoveNoopOperators,tpcds,"select  
   count(distinct cs_order_number) as order_count
  ,sum(cs_ext_ship_cost) as total_shipping_cost
  ,sum(cs_net_profit) as total_net_profit
from
   catalog_sales cs1
  ,date_dim
  ,customer_address
  ,call_center
where
    d_date between '2001-4-01' and 
           (date_add(cast('2001-4-01' as date), 60))
and cs1.cs_ship_date_sk = d_date_sk
and cs1.cs_ship_addr_sk = ca_address_sk
and ca_state = 'TX'
and cs1.cs_call_center_sk = cc_call_center_sk
and cc_county in ('Franklin Parish','Walker County','Ziebach County','Fairfield County',
                  'Daviess County'
)
and exists (select *
            from catalog_sales cs2
            where cs1.cs_order_number = cs2.cs_order_number
              and cs1.cs_warehouse_sk <> cs2.cs_warehouse_sk)
and not exists(select *
               from catalog_returns cr1
               where cs1.cs_order_number = cr1.cr_order_number)
order by count(distinct cs_order_number)
limit 100;","ConstantFolding,EliminateLimits,RemoveNoopOperators"
26,sql_026.sql,"select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3,
  cd_dep_count,
  count(*) cnt4,
  cd_dep_employed_count,
  count(*) cnt5,
  cd_dep_college_count,
  count(*) cnt6
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_county in ('Greer County','Boone County','Cumberland County','Tyler County','Marion County') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 1999 and
                d_moy between 1 and 1+3) and
   (exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 ANd 1+3) or 
    exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+3))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
limit 100;","select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3,
  cd_dep_count,
  count(*) cnt4,
  cd_dep_employed_count,
  count(*) cnt5,
  cd_dep_college_count,
  count(*) cnt6
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_county in ('Greer County','Boone County','Cumberland County','Tyler County','Marion County') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 1999 and
                d_moy between 1 and 1+3) and
   (exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 ANd 1+3) or 
    exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+3))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
limit 100;",None,tpcds,"select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3,
  cd_dep_count,
  count(*) cnt4,
  cd_dep_employed_count,
  count(*) cnt5,
  cd_dep_college_count,
  count(*) cnt6
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_county in ('Greer County','Boone County','Cumberland County','Tyler County','Marion County') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 1999 and
                d_moy between 1 and 1+3) and
   (exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 ANd 1+3) or 
    exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+3))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
limit 100;",RemoveNoopOperators
27,sql_027.sql,"select  * 
from (select i_manager_id
             ,sum(ss_sales_price) sum_sales
             ,avg(sum(ss_sales_price)) over (partition by i_manager_id) avg_monthly_sales
      from item
          ,store_sales
          ,date_dim
          ,store
      where ss_item_sk = i_item_sk
        and ss_sold_date_sk = d_date_sk
        and ss_store_sk = s_store_sk
        and d_month_seq in (1208,1208+1,1208+2,1208+3,1208+4,1208+5,1208+6,1208+7,1208+8,1208+9,1208+10,1208+11)
        and ((    i_category in ('Books','Children','Electronics')
              and i_class in ('personal','portable','reference','self-help')
              and i_brand in ('scholaramalgamalg #14','scholaramalgamalg #7',
		                  'exportiunivamalg #9','scholaramalgamalg #9'))
           or(    i_category in ('Women','Music','Men')
              and i_class in ('accessories','classical','fragrances','pants')
              and i_brand in ('amalgimporto #1','edu packscholar #1','exportiimporto #1',
		                 'importoamalg #1')))
group by i_manager_id, d_moy) tmp1
where case when avg_monthly_sales > 0 then abs (sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1
order by i_manager_id
        ,avg_monthly_sales
        ,sum_sales
limit 100;","select  * 
from (select i_manager_id
             ,sum(ss_sales_price) sum_sales
             ,avg(sum(ss_sales_price)) over (partition by i_manager_id) avg_monthly_sales
      from item
          ,store_sales
          ,date_dim
          ,store
      where ss_item_sk = i_item_sk
        and ss_sold_date_sk = d_date_sk
        and ss_store_sk = s_store_sk
        and d_month_seq in (1208,1208+1,1208+2,1208+3,1208+4,1208+5,1208+6,1208+7,1208+8,1208+9,1208+10,1208+11)
        and ((    i_category in ('Books','Children','Electronics')
              and i_class in ('personal','portable','reference','self-help')
              and i_brand in ('scholaramalgamalg #14','scholaramalgamalg #7',
		                  'exportiunivamalg #9','scholaramalgamalg #9'))
           or(    i_category in ('Women','Music','Men')
              and i_class in ('accessories','classical','fragrances','pants')
              and i_brand in ('amalgimporto #1','edu packscholar #1','exportiimporto #1',
		                 'importoamalg #1')))
group by i_manager_id, d_moy) tmp1
where case when avg_monthly_sales > 0 then abs (sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1
order by i_manager_id
        ,avg_monthly_sales
        ,sum_sales
limit 100;",None,tpcds,"SELECT
  *
FROM
  (
    SELECT
      t1646.i_manager_id,
      SUM(t1646.sum_sales * t1647._f1) AS sum_sales,
      (
        SUM(SUM(t1646.sum_sales * t1647._f1)) OVER (
          PARTITION BY t1646.i_manager_id RANGE BETWEEN UNBOUNDED PRECEDING
          AND UNBOUNDED FOLLOWING
        )
      ) / (
        COUNT(SUM(t1646.sum_sales * t1647._f1)) OVER (
          PARTITION BY t1646.i_manager_id RANGE BETWEEN UNBOUNDED PRECEDING
          AND UNBOUNDED FOLLOWING
        )
      ) AS avg_monthly_sales
    FROM
      (
        SELECT
          t1641.i_manager_id,
          t1641.ss_store_sk,
          t1643.d_moy,
          SUM(t1641.sum_sales * t1643._f2) AS sum_sales
        FROM
          (
            SELECT
              t1637.i_manager_id,
              t1638.ss_sold_date_sk,
              t1638.ss_store_sk,
              SUM(t1637._f2 * t1638.sum_sales) AS sum_sales
            FROM
              (
                SELECT
                  i_item_sk,
                  i_manager_id,
                  COUNT(*) AS _f2
                FROM
                  item
                WHERE
                  i_category IN ('Books', 'Children', 'Electronics')
                  AND i_class IN ('personal', 'portable', 'reference', 'self-help')
                  AND i_brand IN (
                    'exportiunivamalg #9',
                    'scholaramalgamalg #14',
                    'scholaramalgamalg #7',
                    'scholaramalgamalg #9'
                  )
                  OR i_category IN ('Men', 'Music', 'Women')
                  AND i_class IN ('accessories', 'classical', 'fragrances', 'pants')
                  AND i_brand IN (
                    'amalgimporto #1',
                    'edu packscholar #1',
                    'exportiimporto #1',
                    'importoamalg #1'
                  )
                GROUP BY
                  i_item_sk,
                  i_manager_id
              ) AS t1637,
              (
                SELECT
                  ss_sold_date_sk,
                  ss_item_sk,
                  ss_store_sk,
                  SUM(ss_sales_price) AS sum_sales
                FROM
                  store_sales
                GROUP BY
                  ss_sold_date_sk,
                  ss_item_sk,
                  ss_store_sk
              ) AS t1638
            WHERE
              t1638.ss_item_sk = t1637.i_item_sk
            GROUP BY
              t1637.i_manager_id,
              t1638.ss_sold_date_sk,
              t1638.ss_store_sk
          ) AS t1641,
          (
            SELECT
              d_date_sk,
              d_moy,
              COUNT(*) AS _f2
            FROM
              date_dim
            WHERE
              d_month_seq = 1223
              OR (
                d_month_seq = 1223 + 1
                OR d_month_seq = 1223 + 2
              )
              OR (
                d_month_seq = 1223 + 3
                OR (
                  d_month_seq = 1223 + 4
                  OR d_month_seq = 1223 + 5
                )
              )
              OR (
                d_month_seq = 1223 + 6
                OR (
                  d_month_seq = 1223 + 7
                  OR d_month_seq = 1223 + 8
                )
                OR (
                  d_month_seq = 1223 + 9
                  OR (
                    d_month_seq = 1223 + 10
                    OR d_month_seq = 1223 + 11
                  )
                )
              )
            GROUP BY
              d_date_sk,
              d_moy
          ) AS t1643
        WHERE
          t1641.ss_sold_date_sk = t1643.d_date_sk
        GROUP BY
          t1641.i_manager_id,
          t1641.ss_store_sk,
          t1643.d_moy
      ) AS t1646,
      (
        SELECT
          s_store_sk,
          COUNT(*) AS _f1
        FROM
          store
        GROUP BY
          s_store_sk
      ) AS t1647
    WHERE
      t1646.ss_store_sk = t1647.s_store_sk
    GROUP BY
      t1646.i_manager_id,
      t1646.d_moy
  ) AS t1651
WHERE
  CASE
    WHEN t1651.avg_monthly_sales > 0 THEN ABS(t1651.sum_sales - t1651.avg_monthly_sales) / t1651.avg_monthly_sales > 0.1
    ELSE FALSE
  END
ORDER BY
  i_manager_id,
  avg_monthly_sales,
  sum_sales LIMIT 100;",ConstantFolding
28,sql_028.sql,"select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_state in ('KY','TX','AR') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 2001 and
                d_moy between 1 and 1+2) and
   (not exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 2001 and
                  d_moy between 1 and 1+2) and
    not exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 2001 and
                  d_moy between 1 and 1+2))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 limit 100;","select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_state in ('KY','TX','AR') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 2001 and
                d_moy between 1 and 1+2) and
   (not exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 2001 and
                  d_moy between 1 and 1+2) and
    not exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 2001 and
                  d_moy between 1 and 1+2))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 limit 100;",RemoveNoopOperators,tpcds,"select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_state in ('KY','TX','AR') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 2001 and
                d_moy between 1 and 1+2) and
   (not exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 2001 and
                  d_moy between 1 and 1+2) and
    not exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 2001 and
                  d_moy between 1 and 1+2))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 limit 100;",None
29,sql_029.sql,"with ss as (
 select
          i_item_id,sum(ss_ext_sales_price) total_sales
 from
 	store_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id in (select
  i_item_id
from
 item
where i_category in ('Shoes'))
 and     ss_item_sk              = i_item_sk
 and     ss_sold_date_sk         = d_date_sk
 and     d_year                  = 2000
 and     d_moy                   = 9
 and     ss_addr_sk              = ca_address_sk
 and     ca_gmt_offset           = -5 
 group by i_item_id),
 cs as (
 select
          i_item_id,sum(cs_ext_sales_price) total_sales
 from
 	catalog_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id               in (select
  i_item_id
from
 item
where i_category in ('Shoes'))
 and     cs_item_sk              = i_item_sk
 and     cs_sold_date_sk         = d_date_sk
 and     d_year                  = 2000
 and     d_moy                   = 9
 and     cs_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -5 
 group by i_item_id),
 ws as (
 select
          i_item_id,sum(ws_ext_sales_price) total_sales
 from
 	web_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id               in (select
  i_item_id
from
 item
where i_category in ('Shoes'))
 and     ws_item_sk              = i_item_sk
 and     ws_sold_date_sk         = d_date_sk
 and     d_year                  = 2000
 and     d_moy                   = 9
 and     ws_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -5
 group by i_item_id)
  select   
  i_item_id
,sum(total_sales) total_sales
 from  (select * from ss 
        union all
        select * from cs 
        union all
        select * from ws) tmp1
 group by i_item_id
 order by i_item_id
      ,total_sales
 limit 100;","with ss as (
 select
          i_item_id,sum(ss_ext_sales_price) total_sales
 from
 	store_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id in (select
  i_item_id
from
 item
where i_category in ('Shoes'))
 and     ss_item_sk              = i_item_sk
 and     ss_sold_date_sk         = d_date_sk
 and     d_year                  = 2000
 and     d_moy                   = 9
 and     ss_addr_sk              = ca_address_sk
 and     ca_gmt_offset           = -5 
 group by i_item_id),
 cs as (
 select
          i_item_id,sum(cs_ext_sales_price) total_sales
 from
 	catalog_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id               in (select
  i_item_id
from
 item
where i_category in ('Shoes'))
 and     cs_item_sk              = i_item_sk
 and     cs_sold_date_sk         = d_date_sk
 and     d_year                  = 2000
 and     d_moy                   = 9
 and     cs_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -5 
 group by i_item_id),
 ws as (
 select
          i_item_id,sum(ws_ext_sales_price) total_sales
 from
 	web_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id               in (select
  i_item_id
from
 item
where i_category in ('Shoes'))
 and     ws_item_sk              = i_item_sk
 and     ws_sold_date_sk         = d_date_sk
 and     d_year                  = 2000
 and     d_moy                   = 9
 and     ws_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -5
 group by i_item_id)
  select   
  i_item_id
,sum(total_sales) total_sales
 from  (select * from ss 
        union all
        select * from cs 
        union all
        select * from ws) tmp1
 group by i_item_id
 order by i_item_id
      ,total_sales
 limit 100;","CombineUnions,OptimizeIn",tpcds,"with ss as (
 select
          i_item_id,sum(ss_ext_sales_price) total_sales
 from
 	store_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id in (select
  i_item_id
from
 item
where i_category in ('Shoes'))
 and     ss_item_sk              = i_item_sk
 and     ss_sold_date_sk         = d_date_sk
 and     d_year                  = 2000
 and     d_moy                   = 9
 and     ss_addr_sk              = ca_address_sk
 and     ca_gmt_offset           = -5 
 group by i_item_id),
 cs as (
 select
          i_item_id,sum(cs_ext_sales_price) total_sales
 from
 	catalog_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id               in (select
  i_item_id
from
 item
where i_category in ('Shoes'))
 and     cs_item_sk              = i_item_sk
 and     cs_sold_date_sk         = d_date_sk
 and     d_year                  = 2000
 and     d_moy                   = 9
 and     cs_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -5 
 group by i_item_id),
 ws as (
 select
          i_item_id,sum(ws_ext_sales_price) total_sales
 from
 	web_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id               in (select
  i_item_id
from
 item
where i_category in ('Shoes'))
 and     ws_item_sk              = i_item_sk
 and     ws_sold_date_sk         = d_date_sk
 and     d_year                  = 2000
 and     d_moy                   = 9
 and     ws_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -5
 group by i_item_id)
  select   
  i_item_id
,sum(total_sales) total_sales
 from  (select * from ss 
        union all
        select * from cs 
        union all
        select * from ws) tmp1
 group by i_item_id
 order by i_item_id
      ,total_sales
 limit 100;","ConstantFolding,OptimizeIn,RemoveNoopOperators"
30,sql_030.sql,"with wss as 
 (select d_week_seq,
        ss_store_sk,
        sum(case when (d_day_name='Sunday') then ss_sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then ss_sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then ss_sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then ss_sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then ss_sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then ss_sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then ss_sales_price else null end) sat_sales
 from store_sales,date_dim
 where d_date_sk = ss_sold_date_sk
 group by d_week_seq,ss_store_sk
 )
  select  s_store_name1,s_store_id1,d_week_seq1
       ,sun_sales1/sun_sales2,mon_sales1/mon_sales2
       ,tue_sales1/tue_sales2,wed_sales1/wed_sales2,thu_sales1/thu_sales2
       ,fri_sales1/fri_sales2,sat_sales1/sat_sales2
 from
 (select s_store_name s_store_name1,wss.d_week_seq d_week_seq1
        ,s_store_id s_store_id1,sun_sales sun_sales1
        ,mon_sales mon_sales1,tue_sales tue_sales1
        ,wed_sales wed_sales1,thu_sales thu_sales1
        ,fri_sales fri_sales1,sat_sales sat_sales1
  from wss,store,date_dim d
  where d.d_week_seq = wss.d_week_seq and
        ss_store_sk = s_store_sk and 
        d_month_seq between 1183 and 1183 + 11) y,
 (select s_store_name s_store_name2,wss.d_week_seq d_week_seq2
        ,s_store_id s_store_id2,sun_sales sun_sales2
        ,mon_sales mon_sales2,tue_sales tue_sales2
        ,wed_sales wed_sales2,thu_sales thu_sales2
        ,fri_sales fri_sales2,sat_sales sat_sales2
  from wss,store,date_dim d
  where d.d_week_seq = wss.d_week_seq and
        ss_store_sk = s_store_sk and 
        d_month_seq between 1183+ 12 and 1183 + 23) x
 where s_store_id1=s_store_id2
   and d_week_seq1=d_week_seq2-52
 order by s_store_name1,s_store_id1,d_week_seq1
limit 100;","with wss as 
 (select d_week_seq,
        ss_store_sk,
        sum(case when (d_day_name='Sunday') then ss_sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then ss_sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then ss_sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then ss_sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then ss_sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then ss_sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then ss_sales_price else null end) sat_sales
 from store_sales,date_dim
 where d_date_sk = ss_sold_date_sk
 group by d_week_seq,ss_store_sk
 )
  select  s_store_name1,s_store_id1,d_week_seq1
       ,sun_sales1/sun_sales2,mon_sales1/mon_sales2
       ,tue_sales1/tue_sales2,wed_sales1/wed_sales2,thu_sales1/thu_sales2
       ,fri_sales1/fri_sales2,sat_sales1/sat_sales2
 from
 (select s_store_name s_store_name1,wss.d_week_seq d_week_seq1
        ,s_store_id s_store_id1,sun_sales sun_sales1
        ,mon_sales mon_sales1,tue_sales tue_sales1
        ,wed_sales wed_sales1,thu_sales thu_sales1
        ,fri_sales fri_sales1,sat_sales sat_sales1
  from wss,store,date_dim d
  where d.d_week_seq = wss.d_week_seq and
        ss_store_sk = s_store_sk and 
        d_month_seq between 1183 and 1183 + 11) y,
 (select s_store_name s_store_name2,wss.d_week_seq d_week_seq2
        ,s_store_id s_store_id2,sun_sales sun_sales2
        ,mon_sales mon_sales2,tue_sales tue_sales2
        ,wed_sales wed_sales2,thu_sales thu_sales2
        ,fri_sales fri_sales2,sat_sales sat_sales2
  from wss,store,date_dim d
  where d.d_week_seq = wss.d_week_seq and
        ss_store_sk = s_store_sk and 
        d_month_seq between 1183+ 12 and 1183 + 23) x
 where s_store_id1=s_store_id2
   and d_week_seq1=d_week_seq2-52
 order by s_store_name1,s_store_id1,d_week_seq1
limit 100;",None,tpcds,"SELECT t1363.s_store_name1, t1363.s_store_id1, t1363.d_week_seq1, t1363.sun_sales1 / t1370.sun_sales2, t1363.mon_sales1 / t1370.mon_sales2, t1363.tue_sales1 / t1370.tue_sales2, t1363.wed_sales1 / t1370.wed_sales2, t1363.thu_sales1 / t1370.thu_sales2, t1363.fri_sales1 / t1370.fri_sales2, t1363.sat_sales1 / t1370.sat_sales2

FROM (SELECT t1360.s_store_name AS s_store_name1, t1360.d_week_seq AS d_week_seq1, t1360.s_store_id AS s_store_id1, t1360.sun_sales AS sun_sales1, t1360.mon_sales AS mon_sales1, t1360.tue_sales AS tue_sales1, t1360.wed_sales AS wed_sales1, t1360.thu_sales AS thu_sales1, t1360.fri_sales AS fri_sales1, t1360.sat_sales AS sat_sales1

FROM (SELECT *

FROM (SELECT date_dim407.d_week_seq, store_sales203.ss_store_sk, SUM(CASE WHEN CAST(date_dim407.d_day_name AS CHAR(6)) = 'Sunday' THEN store_sales203.ss_sales_price ELSE NULL END) AS sun_sales, SUM(CASE WHEN CAST(date_dim407.d_day_name AS CHAR(6)) = 'Monday' THEN store_sales203.ss_sales_price ELSE NULL END) AS mon_sales, SUM(CASE WHEN CAST(date_dim407.d_day_name AS CHAR(7)) = 'Tuesday' THEN store_sales203.ss_sales_price ELSE NULL END) AS tue_sales, SUM(CASE WHEN CAST(date_dim407.d_day_name AS CHAR(9)) = 'Wednesday' THEN store_sales203.ss_sales_price ELSE NULL END) AS wed_sales, SUM(CASE WHEN CAST(date_dim407.d_day_name AS CHAR(8)) = 'Thursday' THEN store_sales203.ss_sales_price ELSE NULL END) AS thu_sales, SUM(CASE WHEN CAST(date_dim407.d_day_name AS CHAR(6)) = 'Friday' THEN store_sales203.ss_sales_price ELSE NULL END) AS fri_sales, SUM(CASE WHEN CAST(date_dim407.d_day_name AS CHAR(8)) = 'Saturday' THEN store_sales203.ss_sales_price ELSE NULL END) AS sat_sales

FROM store_sales AS store_sales203,

date_dim AS date_dim407

WHERE date_dim407.d_date_sk = store_sales203.ss_sold_date_sk

GROUP BY date_dim407.d_week_seq, store_sales203.ss_store_sk) AS t1359,

store AS store203

WHERE t1359.ss_store_sk = store203.s_store_sk) AS t1360,

(SELECT *

FROM date_dim

WHERE d_month_seq >= 1182 AND d_month_seq <= 1182 + 11) AS t1361

WHERE t1361.d_week_seq = t1360.d_week_seq) AS t1363,

(SELECT t1367.s_store_name AS s_store_name2, t1367.d_week_seq AS d_week_seq2, t1367.s_store_id AS s_store_id2, t1367.sun_sales AS sun_sales2, t1367.mon_sales AS mon_sales2, t1367.tue_sales AS tue_sales2, t1367.wed_sales AS wed_sales2, t1367.thu_sales AS thu_sales2, t1367.fri_sales AS fri_sales2, t1367.sat_sales AS sat_sales2

FROM (SELECT *

FROM (SELECT date_dim409.d_week_seq, store_sales204.ss_store_sk, SUM(CASE WHEN CAST(date_dim409.d_day_name AS CHAR(6)) = 'Sunday' THEN store_sales204.ss_sales_price ELSE NULL END) AS sun_sales, SUM(CASE WHEN CAST(date_dim409.d_day_name AS CHAR(6)) = 'Monday' THEN store_sales204.ss_sales_price ELSE NULL END) AS mon_sales, SUM(CASE WHEN CAST(date_dim409.d_day_name AS CHAR(7)) = 'Tuesday' THEN store_sales204.ss_sales_price ELSE NULL END) AS tue_sales, SUM(CASE WHEN CAST(date_dim409.d_day_name AS CHAR(9)) = 'Wednesday' THEN store_sales204.ss_sales_price ELSE NULL END) AS wed_sales, SUM(CASE WHEN CAST(date_dim409.d_day_name AS CHAR(8)) = 'Thursday' THEN store_sales204.ss_sales_price ELSE NULL END) AS thu_sales, SUM(CASE WHEN CAST(date_dim409.d_day_name AS CHAR(6)) = 'Friday' THEN store_sales204.ss_sales_price ELSE NULL END) AS fri_sales, SUM(CASE WHEN CAST(date_dim409.d_day_name AS CHAR(8)) = 'Saturday' THEN store_sales204.ss_sales_price ELSE NULL END) AS sat_sales

FROM store_sales AS store_sales204,

date_dim AS date_dim409

WHERE date_dim409.d_date_sk = store_sales204.ss_sold_date_sk

GROUP BY date_dim409.d_week_seq, store_sales204.ss_store_sk) AS t1366,

store AS store204

WHERE t1366.ss_store_sk = store204.s_store_sk) AS t1367,

(SELECT *

FROM date_dim

WHERE d_month_seq >= 1182 + 12 AND d_month_seq <= 1182 + 23) AS t1368

WHERE t1368.d_week_seq = t1367.d_week_seq) AS t1370

WHERE t1363.s_store_id1 = t1370.s_store_id2 AND t1363.d_week_seq1 = t1370.d_week_seq2 - 52

ORDER BY t1363.s_store_name1, t1363.s_store_id1, t1363.d_week_seq1

LIMIT 100",None
31,sql_031.sql,"select  i_item_id
       ,i_item_desc
       ,i_current_price
 from item, inventory, date_dim, catalog_sales
 where i_current_price between 19 and 19 + 30
 and inv_item_sk = i_item_sk
 and d_date_sk=inv_date_sk
 and d_date between cast('2000-03-27' as date) and (date_add(cast('2000-03-27' as date), 60))
 and i_manufact_id in (874,844,819,868)
 and inv_quantity_on_hand between 100 and 500
 and cs_item_sk = i_item_sk
 group by i_item_id,i_item_desc,i_current_price
 order by i_item_id
 limit 100;","SELECT item.i_item_id, item.i_item_desc, item.i_current_price FROM item, inventory, date_dim, catalog_sales WHERE item.i_current_price >= 19 AND item.i_current_price <= 19 + 30 AND (inventory.inv_item_sk = item.i_item_sk AND (date_dim.d_date_sk = inventory.inv_date_sk AND date_dim.d_date >= '2000-03-27')) AND (date_dim.d_date <= (CAST('2000-03-27' AS DATE) + INTERVAL '60' DAY) AND (item.i_manufact_id = 874 OR item.i_manufact_id = 844 OR item.i_manufact_id = 819 OR item.i_manufact_id = 868) AND (inventory.inv_quantity_on_hand >= 100 AND (inventory.inv_quantity_on_hand <= 500 AND catalog_sales.cs_item_sk = item.i_item_sk))) ORDER BY item.i_item_id LIMIT 100",ConstantFolding,tpcds,"SELECT t512.i_item_id, t512.i_item_desc, t512.i_current_price

FROM (SELECT *

FROM item

WHERE i_current_price >= 24 AND i_current_price <= 24 + 30 AND i_manufact_id IN (692, 717, 951, 953)) AS t512

INNER JOIN (SELECT *

FROM inventory

WHERE inv_quantity_on_hand >= 100 AND inv_quantity_on_hand <= 500) AS t513 ON t512.i_item_sk = t513.inv_item_sk

INNER JOIN (SELECT *

FROM date_dim

WHERE d_date >= DATE '2002-06-22' AND d_date <= (DATE '2002-06-22' + 60 * INTERVAL '1' DAY)) AS t514 ON t513.inv_date_sk = t514.d_date_sk

INNER JOIN catalog_sales AS catalog_sales80 ON t512.i_item_sk = catalog_sales80.cs_item_sk

ORDER BY t512.i_item_id

LIMIT 100",None
32,sql_032.sql,"select i_item_id
      ,i_item_desc 
      ,i_category 
      ,i_class 
      ,i_current_price
      ,sum(ss_ext_sales_price) as itemrevenue 
      ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
          (partition by i_class) as revenueratio
from	
	store_sales
    	,item 
    	,date_dim
where 
	ss_item_sk = i_item_sk 
  	and i_category in ('Shoes', 'Men', 'Electronics')
  	and ss_sold_date_sk = d_date_sk
	and d_date between cast('2002-02-22' as date) 
				and (date_add(cast('2002-02-22' as date), 30))
group by 
	i_item_id
        ,i_item_desc 
        ,i_category
        ,i_class
        ,i_current_price
order by 
	i_category
        ,i_class
        ,i_item_id
        ,i_item_desc
        ,revenueratio;","select i_item_id
      ,i_item_desc 
      ,i_category 
      ,i_class 
      ,i_current_price
      ,sum(ss_ext_sales_price) as itemrevenue 
      ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
          (partition by i_class) as revenueratio
from	
	store_sales
    	,item 
    	,date_dim
where 
	ss_item_sk = i_item_sk 
  	and i_category in ('Shoes', 'Men', 'Electronics')
  	and ss_sold_date_sk = d_date_sk
	and d_date between cast('2002-02-22' as date) 
				and (date_add(cast('2002-02-22' as date), 30))
group by 
	i_item_id
        ,i_item_desc 
        ,i_category
        ,i_class
        ,i_current_price
order by 
	i_category
        ,i_class
        ,i_item_id
        ,i_item_desc
        ,revenueratio;",ConstantFolding,tpcds,"select i_item_id
      ,i_item_desc 
      ,i_category 
      ,i_class 
      ,i_current_price
      ,sum(ss_ext_sales_price) as itemrevenue 
      ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over
          (partition by i_class) as revenueratio
from	
	store_sales
    	,item 
    	,date_dim
where 
	ss_item_sk = i_item_sk 
  	and i_category in ('Shoes', 'Men', 'Electronics')
  	and ss_sold_date_sk = d_date_sk
	and d_date between cast('2002-02-22' as date) 
				and (date_add(cast('2002-02-22' as date), 30))
group by 
	i_item_id
        ,i_item_desc 
        ,i_category
        ,i_class
        ,i_current_price
order by 
	i_category
        ,i_class
        ,i_item_id
        ,i_item_desc
        ,revenueratio;",None
33,sql_033.sql,"select  substr(r_reason_desc,1,20)
       ,avg(ws_quantity)
       ,avg(wr_refunded_cash)
       ,avg(wr_fee)
 from web_sales, web_returns, web_page, customer_demographics cd1,
      customer_demographics cd2, customer_address, date_dim, reason 
 where ws_web_page_sk = wp_web_page_sk
   and ws_item_sk = wr_item_sk
   and ws_order_number = wr_order_number
   and ws_sold_date_sk = d_date_sk and d_year = 1998
   and cd1.cd_demo_sk = wr_refunded_cdemo_sk 
   and cd2.cd_demo_sk = wr_returning_cdemo_sk
   and ca_address_sk = wr_refunded_addr_sk
   and r_reason_sk = wr_reason_sk
   and
   (
    (
     cd1.cd_marital_status = 'D'
     and
     cd1.cd_marital_status = cd2.cd_marital_status
     and
     cd1.cd_education_status = 'Secondary'
     and 
     cd1.cd_education_status = cd2.cd_education_status
     and
     ws_sales_price between 100.00 and 150.00
    )
   or
    (
     cd1.cd_marital_status = 'S'
     and
     cd1.cd_marital_status = cd2.cd_marital_status
     and
     cd1.cd_education_status = 'College' 
     and
     cd1.cd_education_status = cd2.cd_education_status
     and
     ws_sales_price between 50.00 and 100.00
    )
   or
    (
     cd1.cd_marital_status = 'W'
     and
     cd1.cd_marital_status = cd2.cd_marital_status
     and
     cd1.cd_education_status = 'Primary'
     and
     cd1.cd_education_status = cd2.cd_education_status
     and
     ws_sales_price between 150.00 and 200.00
    )
   )
   and
   (
    (
     ca_country = 'United States'
     and
     ca_state in ('SD', 'CO', 'OK')
     and ws_net_profit between 100 and 200  
    )
    or
    (
     ca_country = 'United States'
     and
     ca_state in ('MA', 'GA', 'MI')
     and ws_net_profit between 150 and 300  
    )
    or
    (
     ca_country = 'United States'
     and
     ca_state in ('CA', 'IA', 'IL')
     and ws_net_profit between 50 and 250  
    )
   )
group by r_reason_desc
order by substr(r_reason_desc,1,20)
        ,avg(ws_quantity)
        ,avg(wr_refunded_cash)
        ,avg(wr_fee)
limit 100;","SELECT SUBSTR(reason.r_reason_desc FROM 1 FOR 20), AVG(web_sales.ws_quantity), AVG(web_returns.wr_refunded_cash), AVG(web_returns.wr_fee) FROM web_sales, web_returns, web_page, customer_demographics, customer_demographics AS customer_demographics0, customer_address, date_dim, reason WHERE web_sales.ws_web_page_sk = web_page.wp_web_page_sk AND web_sales.ws_item_sk = web_returns.wr_item_sk AND (web_sales.ws_order_number = web_returns.wr_order_number AND (web_sales.ws_sold_date_sk = date_dim.d_date_sk AND date_dim.d_year = 1998)) AND (customer_demographics.cd_demo_sk = web_returns.wr_refunded_cdemo_sk AND (customer_demographics0.cd_demo_sk = web_returns.wr_returning_cdemo_sk AND customer_address.ca_address_sk = web_returns.wr_refunded_addr_sk) AND (reason.r_reason_sk = web_returns.wr_reason_sk AND ((customer_demographics.cd_marital_status = 'D' AND (customer_demographics.cd_marital_status = customer_demographics0.cd_marital_status AND customer_demographics.cd_education_status = 'Secondary') AND (customer_demographics.cd_education_status = customer_demographics0.cd_education_status AND (web_sales.ws_sales_price >= 100.00 AND web_sales.ws_sales_price <= 150.00)) OR customer_demographics.cd_marital_status = 'S' AND (customer_demographics.cd_marital_status = customer_demographics0.cd_marital_status AND customer_demographics.cd_education_status = 'College') AND (customer_demographics.cd_education_status = customer_demographics0.cd_education_status AND (web_sales.ws_sales_price >= 50.00 AND web_sales.ws_sales_price <= 100.00)) OR customer_demographics.cd_marital_status = 'W' AND (customer_demographics.cd_marital_status = customer_demographics0.cd_marital_status AND customer_demographics.cd_education_status = 'Primary') AND (customer_demographics.cd_education_status = customer_demographics0.cd_education_status AND (web_sales.ws_sales_price >= 150.00 AND web_sales.ws_sales_price <= 200.00))) AND (customer_address.ca_country = 'United States' AND (customer_address.ca_state = 'SD' OR customer_address.ca_state = 'CO' OR customer_address.ca_state = 'OK') AND web_sales.ws_net_profit >= 100 AND web_sales.ws_net_profit <= 200 OR customer_address.ca_country = 'United States' AND (customer_address.ca_state = 'MA' OR customer_address.ca_state = 'GA' OR customer_address.ca_state = 'MI') AND web_sales.ws_net_profit >= 150 AND web_sales.ws_net_profit <= 300 OR customer_address.ca_country = 'United States' AND (customer_address.ca_state = 'CA' OR customer_address.ca_state = 'IA' OR customer_address.ca_state = 'IL') AND web_sales.ws_net_profit >= 50 AND web_sales.ws_net_profit <= 250)))) GROUP BY reason.r_reason_desc ORDER BY SUBSTR(reason.r_reason_desc FROM 1 FOR 20), AVG(web_sales.ws_quantity), AVG(web_returns.wr_refunded_cash), AVG(web_returns.wr_fee) LIMIT 100",BooleanSimplification,tpcds,"SELECT SUBSTRING(reason101.r_reason_desc FROM 1 FOR 20), AVG(web_sales101.ws_quantity), AVG(web_returns101.wr_refunded_cash), AVG(web_returns101.wr_fee)

FROM web_sales AS web_sales101

INNER JOIN web_returns AS web_returns101 ON web_sales101.ws_item_sk = web_returns101.wr_item_sk AND web_sales101.ws_order_number = web_returns101.wr_order_number

INNER JOIN web_page AS web_page101 ON web_sales101.ws_web_page_sk = web_page101.wp_web_page_sk

INNER JOIN customer_demographics AS customer_demographics203 ON web_returns101.wr_refunded_cdemo_sk = customer_demographics203.cd_demo_sk

INNER JOIN customer_demographics AS customer_demographics204 ON web_returns101.wr_returning_cdemo_sk = customer_demographics204.cd_demo_sk AND (customer_demographics203.cd_marital_status = 'S' AND customer_demographics203.cd_marital_status = customer_demographics204.cd_marital_status AND customer_demographics203.cd_education_status = 'Secondary' AND customer_demographics203.cd_education_status = customer_demographics204.cd_education_status AND (web_sales101.ws_sales_price >= 100.00 AND web_sales101.ws_sales_price <= 150.00) OR customer_demographics203.cd_marital_status = 'U' AND customer_demographics203.cd_marital_status = customer_demographics204.cd_marital_status AND customer_demographics203.cd_education_status = 'Advanced Degree' AND customer_demographics203.cd_education_status = customer_demographics204.cd_education_status AND (web_sales101.ws_sales_price >= 50.00 AND web_sales101.ws_sales_price <= 100.00) OR customer_demographics203.cd_marital_status = 'W' AND customer_demographics203.cd_marital_status = customer_demographics204.cd_marital_status AND customer_demographics203.cd_education_status = '4 yr Degree' AND customer_demographics203.cd_education_status = customer_demographics204.cd_education_status AND (web_sales101.ws_sales_price >= 150.00 AND web_sales101.ws_sales_price <= 200.00))

INNER JOIN customer_address AS customer_address101 ON web_returns101.wr_refunded_addr_sk = customer_address101.ca_address_sk AND (customer_address101.ca_country = 'United States' AND customer_address101.ca_state IN ('ID', 'MI', 'VA') AND (web_sales101.ws_net_profit >= 100 AND web_sales101.ws_net_profit <= 200) OR customer_address101.ca_country = 'United States' AND customer_address101.ca_state IN ('KS', 'LA', 'TX') AND (web_sales101.ws_net_profit >= 150 AND web_sales101.ws_net_profit <= 300) OR customer_address101.ca_country = 'United States' AND customer_address101.ca_state IN ('IA', 'NM', 'NY') AND (web_sales101.ws_net_profit >= 50 AND web_sales101.ws_net_profit <= 250))

INNER JOIN (SELECT *

FROM date_dim

WHERE d_year = 2000) AS t842 ON web_sales101.ws_sold_date_sk = t842.d_date_sk

INNER JOIN reason AS reason101 ON web_returns101.wr_reason_sk = reason101.r_reason_sk

GROUP BY reason101.r_reason_desc

ORDER BY SUBSTRING(reason101.r_reason_desc FROM 1 FOR 20), AVG(web_sales101.ws_quantity), AVG(web_returns101.wr_refunded_cash), AVG(web_returns101.wr_fee)

LIMIT 100",ColumnPruning
34,sql_034.sql,"select  
    sum(ss_net_profit) as total_sum
   ,s_state
   ,s_county
   ,grouping(s_state)+grouping(s_county) as lochierarchy
   ,rank() over (
 	partition by grouping(s_state)+grouping(s_county),
 	case when grouping(s_county) = 0 then s_state end 
 	order by sum(ss_net_profit) desc) as rank_within_parent
 from
    store_sales
   ,date_dim       d1
   ,store
 where
    d1.d_month_seq between 1209 and 1209+11
 and d1.d_date_sk = ss_sold_date_sk
 and s_store_sk  = ss_store_sk
 and s_state in
             ( select s_state
               from  (select s_state as s_state,
 			    rank() over ( partition by s_state order by sum(ss_net_profit) desc) as ranking
                      from   store_sales, store, date_dim
                      where  d_month_seq between 1209 and 1209+11
 			    and d_date_sk = ss_sold_date_sk
 			    and s_store_sk  = ss_store_sk
                      group by s_state
                     ) tmp1 
               where ranking <= 5
             )
 group by rollup(s_state,s_county)
 order by
   lochierarchy desc
  ,case when lochierarchy = 0 then s_state end
  ,rank_within_parent
 limit 100;","select  
    sum(ss_net_profit) as total_sum
   ,s_state
   ,s_county
   ,grouping(s_state)+grouping(s_county) as lochierarchy
   ,rank() over (
 	partition by grouping(s_state)+grouping(s_county),
 	case when grouping(s_county) = 0 then s_state end 
 	order by sum(ss_net_profit) desc) as rank_within_parent
 from
    store_sales
   ,date_dim       d1
   ,store
 where
    d1.d_month_seq between 1209 and 1209+11
 and d1.d_date_sk = ss_sold_date_sk
 and s_store_sk  = ss_store_sk
 and s_state in
             ( select s_state
               from  (select s_state as s_state,
 			    rank() over ( partition by s_state order by sum(ss_net_profit) desc) as ranking
                      from   store_sales, store, date_dim
                      where  d_month_seq between 1209 and 1209+11
 			    and d_date_sk = ss_sold_date_sk
 			    and s_store_sk  = ss_store_sk
                      group by s_state
                     ) tmp1 
               where ranking <= 5
             )
 group by rollup(s_state,s_county)
 order by
   lochierarchy desc
  ,case when lochierarchy = 0 then s_state end
  ,rank_within_parent
 limit 100;",RemoveRedundantAliases,tpcds,"select  
    sum(ss_net_profit) as total_sum
   ,s_state
   ,s_county
   ,grouping(s_state)+grouping(s_county) as lochierarchy
   ,rank() over (
 	partition by grouping(s_state)+grouping(s_county),
 	case when grouping(s_county) = 0 then s_state end 
 	order by sum(ss_net_profit) desc) as rank_within_parent
 from
    store_sales
   ,date_dim       d1
   ,store
 where
    d1.d_month_seq between 1209 and 1209+11
 and d1.d_date_sk = ss_sold_date_sk
 and s_store_sk  = ss_store_sk
 and s_state in
             ( select s_state
               from  (select s_state as s_state,
 			    rank() over ( partition by s_state order by sum(ss_net_profit) desc) as ranking
                      from   store_sales, store, date_dim
                      where  d_month_seq between 1209 and 1209+11
 			    and d_date_sk = ss_sold_date_sk
 			    and s_store_sk  = ss_store_sk
                      group by s_state
                     ) tmp1 
               where ranking <= 5
             )
 group by rollup(s_state,s_county)
 order by
   lochierarchy desc
  ,case when lochierarchy = 0 then s_state end
  ,rank_within_parent
 limit 100;",UnwrapCastInBinaryComparison
35,sql_035.sql,"select  *
from (select i_category
            ,i_class
            ,i_brand
            ,i_product_name
            ,d_year
            ,d_qoy
            ,d_moy
            ,s_store_id
            ,sumsales
            ,rank() over (partition by i_category order by sumsales desc) rk
      from (select i_category
                  ,i_class
                  ,i_brand
                  ,i_product_name
                  ,d_year
                  ,d_qoy
                  ,d_moy
                  ,s_store_id
                  ,sum(coalesce(ss_sales_price*ss_quantity,0)) sumsales
            from store_sales
                ,date_dim
                ,store
                ,item
       where  ss_sold_date_sk=d_date_sk
          and ss_item_sk=i_item_sk
          and ss_store_sk = s_store_sk
          and d_month_seq between 1208 and 1208+11
       group by  rollup(i_category, i_class, i_brand, i_product_name, d_year, d_qoy, d_moy,s_store_id))dw1) dw2
where rk <= 100
order by i_category
        ,i_class
        ,i_brand
        ,i_product_name
        ,d_year
        ,d_qoy
        ,d_moy
        ,s_store_id
        ,sumsales
        ,rk
limit 100;","select  *
from (select i_category
            ,i_class
            ,i_brand
            ,i_product_name
            ,d_year
            ,d_qoy
            ,d_moy
            ,s_store_id
            ,sumsales
            ,rank() over (partition by i_category order by sumsales desc) rk
      from (select i_category
                  ,i_class
                  ,i_brand
                  ,i_product_name
                  ,d_year
                  ,d_qoy
                  ,d_moy
                  ,s_store_id
                  ,sum(coalesce(ss_sales_price*ss_quantity,0)) sumsales
            from store_sales
                ,date_dim
                ,store
                ,item
       where  ss_sold_date_sk=d_date_sk
          and ss_item_sk=i_item_sk
          and ss_store_sk = s_store_sk
          and d_month_seq between 1208 and 1208+11
       group by  rollup(i_category, i_class, i_brand, i_product_name, d_year, d_qoy, d_moy,s_store_id))dw1) dw2
where rk <= 100
order by i_category
        ,i_class
        ,i_brand
        ,i_product_name
        ,d_year
        ,d_qoy
        ,d_moy
        ,s_store_id
        ,sumsales
        ,rk
limit 100;",CollapseProject,tpcds,"SELECT *

FROM (SELECT item22.i_category, item22.i_class, item22.i_brand, item22.i_product_name, t173.d_year, t173.d_qoy, t173.d_moy, store22.s_store_id, SUM(store_sales22.ss_sales_price * store_sales22.ss_quantity) AS sumsales, RANK() OVER (PARTITION BY item22.i_category ORDER BY SUM(store_sales22.ss_sales_price * store_sales22.ss_quantity) DESC) AS rk

FROM store_sales AS store_sales22

INNER JOIN (SELECT *

FROM date_dim

WHERE d_month_seq >= 1219 AND d_month_seq <= 1219 + 11) AS t173 ON store_sales22.ss_sold_date_sk = t173.d_date_sk

INNER JOIN store AS store22 ON store_sales22.ss_store_sk = store22.s_store_sk

INNER JOIN item AS item22 ON store_sales22.ss_item_sk = item22.i_item_sk

GROUP BY ROLLUP(item22.i_category, item22.i_class, item22.i_brand, item22.i_product_name, t173.d_year, t173.d_qoy, t173.d_moy, store22.s_store_id)) AS t176

WHERE t176.rk <= 100

ORDER BY i_category, i_class, i_brand, i_product_name, d_year, d_qoy, d_moy, s_store_id, sumsales, rk

LIMIT 100",CollapseProject
36,sql_036.sql,"select  *
from (select avg(ss_list_price) B1_LP
            ,count(ss_list_price) B1_CNT
            ,count(distinct ss_list_price) B1_CNTD
      from store_sales
      where ss_quantity between 0 and 5
        and (ss_list_price between 19 and 19+10 
             or ss_coupon_amt between 11468 and 11468+1000
             or ss_wholesale_cost between 20 and 20+20)) B1,
     (select avg(ss_list_price) B2_LP
            ,count(ss_list_price) B2_CNT
            ,count(distinct ss_list_price) B2_CNTD
      from store_sales
      where ss_quantity between 6 and 10
        and (ss_list_price between 14 and 14+10
          or ss_coupon_amt between 92 and 92+1000
          or ss_wholesale_cost between 13 and 13+20)) B2,
     (select avg(ss_list_price) B3_LP
            ,count(ss_list_price) B3_CNT
            ,count(distinct ss_list_price) B3_CNTD
      from store_sales
      where ss_quantity between 11 and 15
        and (ss_list_price between 124 and 124+10
          or ss_coupon_amt between 4023 and 4023+1000
          or ss_wholesale_cost between 50 and 50+20)) B3,
     (select avg(ss_list_price) B4_LP
            ,count(ss_list_price) B4_CNT
            ,count(distinct ss_list_price) B4_CNTD
      from store_sales
      where ss_quantity between 16 and 20
        and (ss_list_price between 74 and 74+10
          or ss_coupon_amt between 3534 and 3534+1000
          or ss_wholesale_cost between 11 and 11+20)) B4,
     (select avg(ss_list_price) B5_LP
            ,count(ss_list_price) B5_CNT
            ,count(distinct ss_list_price) B5_CNTD
      from store_sales
      where ss_quantity between 21 and 25
        and (ss_list_price between 173 and 173+10
          or ss_coupon_amt between 6017 and 6017+1000
          or ss_wholesale_cost between 45 and 45+20)) B5,
     (select avg(ss_list_price) B6_LP
            ,count(ss_list_price) B6_CNT
            ,count(distinct ss_list_price) B6_CNTD
      from store_sales
      where ss_quantity between 26 and 30
        and (ss_list_price between 2 and 2+10
          or ss_coupon_amt between 16961 and 16961+1000
          or ss_wholesale_cost between 18 and 18+20)) B6
limit 100;","select  *
from (select avg(ss_list_price) B1_LP
            ,count(ss_list_price) B1_CNT
            ,count(distinct ss_list_price) B1_CNTD
      from store_sales
      where ss_quantity between 0 and 5
        and (ss_list_price between 19 and 19+10 
             or ss_coupon_amt between 11468 and 11468+1000
             or ss_wholesale_cost between 20 and 20+20)) B1,
     (select avg(ss_list_price) B2_LP
            ,count(ss_list_price) B2_CNT
            ,count(distinct ss_list_price) B2_CNTD
      from store_sales
      where ss_quantity between 6 and 10
        and (ss_list_price between 14 and 14+10
          or ss_coupon_amt between 92 and 92+1000
          or ss_wholesale_cost between 13 and 13+20)) B2,
     (select avg(ss_list_price) B3_LP
            ,count(ss_list_price) B3_CNT
            ,count(distinct ss_list_price) B3_CNTD
      from store_sales
      where ss_quantity between 11 and 15
        and (ss_list_price between 124 and 124+10
          or ss_coupon_amt between 4023 and 4023+1000
          or ss_wholesale_cost between 50 and 50+20)) B3,
     (select avg(ss_list_price) B4_LP
            ,count(ss_list_price) B4_CNT
            ,count(distinct ss_list_price) B4_CNTD
      from store_sales
      where ss_quantity between 16 and 20
        and (ss_list_price between 74 and 74+10
          or ss_coupon_amt between 3534 and 3534+1000
          or ss_wholesale_cost between 11 and 11+20)) B4,
     (select avg(ss_list_price) B5_LP
            ,count(ss_list_price) B5_CNT
            ,count(distinct ss_list_price) B5_CNTD
      from store_sales
      where ss_quantity between 21 and 25
        and (ss_list_price between 173 and 173+10
          or ss_coupon_amt between 6017 and 6017+1000
          or ss_wholesale_cost between 45 and 45+20)) B5,
     (select avg(ss_list_price) B6_LP
            ,count(ss_list_price) B6_CNT
            ,count(distinct ss_list_price) B6_CNTD
      from store_sales
      where ss_quantity between 26 and 30
        and (ss_list_price between 2 and 2+10
          or ss_coupon_amt between 16961 and 16961+1000
          or ss_wholesale_cost between 18 and 18+20)) B6
limit 100;",RemoveNoopOperators,tpcds,"select  *
from (select avg(ss_list_price) B1_LP
            ,count(ss_list_price) B1_CNT
            ,count(distinct ss_list_price) B1_CNTD
      from store_sales
      where ss_quantity between 0 and 5
        and (ss_list_price between 85 and 85+10 
             or ss_coupon_amt between 725 and 725+1000
             or ss_wholesale_cost between 18 and 18+20)) B1,
     (select avg(ss_list_price) B2_LP
            ,count(ss_list_price) B2_CNT
            ,count(distinct ss_list_price) B2_CNTD
      from store_sales
      where ss_quantity between 6 and 10
        and (ss_list_price between 6 and 6+10
          or ss_coupon_amt between 11704 and 11704+1000
          or ss_wholesale_cost between 15 and 15+20)) B2,
     (select avg(ss_list_price) B3_LP
            ,count(ss_list_price) B3_CNT
            ,count(distinct ss_list_price) B3_CNTD
      from store_sales
      where ss_quantity between 11 and 15
        and (ss_list_price between 72 and 72+10
          or ss_coupon_amt between 5172 and 5172+1000
          or ss_wholesale_cost between 27 and 27+20)) B3,
     (select avg(ss_list_price) B4_LP
            ,count(ss_list_price) B4_CNT
            ,count(distinct ss_list_price) B4_CNTD
      from store_sales
      where ss_quantity between 16 and 20
        and (ss_list_price between 104 and 104+10
          or ss_coupon_amt between 2440 and 2440+1000
          or ss_wholesale_cost between 65 and 65+20)) B4,
     (select avg(ss_list_price) B5_LP
            ,count(ss_list_price) B5_CNT
            ,count(distinct ss_list_price) B5_CNTD
      from store_sales
      where ss_quantity between 21 and 25
        and (ss_list_price between 153 and 153+10
          or ss_coupon_amt between 1350 and 1350+1000
          or ss_wholesale_cost between 3 and 3+20)) B5,
     (select avg(ss_list_price) B6_LP
            ,count(ss_list_price) B6_CNT
            ,count(distinct ss_list_price) B6_CNTD
      from store_sales
      where ss_quantity between 26 and 30
        and (ss_list_price between 64 and 64+10
          or ss_coupon_amt between 2991 and 2991+1000
          or ss_wholesale_cost between 7 and 7+20)) B6
limit 100","ConstantFolding,EliminateLimits,RemoveNoopOperators"
37,sql_037.sql,"with customer_total_return as
 (select cr_returning_customer_sk as ctr_customer_sk
        ,ca_state as ctr_state, 
 	sum(cr_return_amt_inc_tax) as ctr_total_return
 from catalog_returns
     ,date_dim
     ,customer_address
 where cr_returned_date_sk = d_date_sk 
   and d_year =2001
   and cr_returning_addr_sk = ca_address_sk 
 group by cr_returning_customer_sk
         ,ca_state )
  select  c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name
                   ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset
                  ,ca_location_type,ctr_total_return
 from customer_total_return ctr1
     ,customer_address
     ,customer
 where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2
 			  from customer_total_return ctr2 
                  	  where ctr1.ctr_state = ctr2.ctr_state)
       and ca_address_sk = c_current_addr_sk
       and ca_state = 'IA'
       and ctr1.ctr_customer_sk = c_customer_sk
 order by c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name
                   ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset
                  ,ca_location_type,ctr_total_return
 limit 100;","SELECT customer.c_customer_id, customer.c_salutation, customer.c_first_name, customer.c_last_name, t2.ca_street_number, t2.ca_street_name, t2.ca_street_type, t2.ca_suite_number, t2.ca_city, t2.ca_county, t2.ca_state, t2.ca_zip, t2.ca_country, t2.ca_gmt_offset, t2.ca_location_type, t1.ctr_total_return FROM (SELECT catalog_returns.cr_returning_customer_sk AS ctr_customer_sk, customer_address.ca_state AS ctr_state, SUM(catalog_returns.cr_return_amt_inc_tax) AS ctr_total_return FROM catalog_returns INNER JOIN (SELECT * FROM date_dim WHERE d_year = 2001) AS t ON catalog_returns.cr_returned_date_sk = t.d_date_sk INNER JOIN customer_address ON catalog_returns.cr_returning_addr_sk = customer_address.ca_address_sk GROUP BY catalog_returns.cr_returning_customer_sk, customer_address.ca_state) AS t1 CROSS JOIN (SELECT * FROM customer_address WHERE ca_state = 'IA') AS t2 INNER JOIN customer ON t2.ca_address_sk = customer.c_current_addr_sk AND t1.ctr_customer_sk = customer.c_customer_sk INNER JOIN (SELECT t6.ctr_state, AVG(t6.ctr_total_return) AS dollarf1 FROM (SELECT customer_address1.ca_state AS ctr_state, SUM(catalog_returns0.cr_return_amt_inc_tax) AS ctr_total_return FROM catalog_returns AS catalog_returns0 INNER JOIN (SELECT * FROM date_dim WHERE d_year = 2001) AS t3 ON catalog_returns0.cr_returned_date_sk = t3.d_date_sk INNER JOIN customer_address AS customer_address1 ON catalog_returns0.cr_returning_addr_sk = customer_address1.ca_address_sk GROUP BY catalog_returns0.cr_returning_customer_sk, customer_address1.ca_state) AS t6 GROUP BY t6.ctr_state) AS t7 ON t1.ctr_state = t7.ctr_state AND t1.ctr_total_return > t7.dollarf1 * 1.2 ORDER BY customer.c_customer_id, customer.c_salutation, customer.c_first_name, customer.c_last_name, t2.ca_street_number, t2.ca_street_name, t2.ca_street_type, t2.ca_suite_number, t2.ca_city, t2.ca_county, t2.ca_state, t2.ca_zip, t2.ca_country, t2.ca_gmt_offset, t2.ca_location_type, t1.ctr_total_return LIMIT 100",CollapseProject,tpcds,"SELECT customer78.c_customer_id, customer78.c_salutation, customer78.c_first_name, customer78.c_last_name, t1264.ca_street_number, t1264.ca_street_name, t1264.ca_street_type, t1264.ca_suite_number, t1264.ca_city, t1264.ca_county, t1264.ca_state, t1264.ca_zip, t1264.ca_country, t1264.ca_gmt_offset, t1264.ca_location_type, t1263.ctr_total_return

FROM (SELECT catalog_returns157.cr_returning_customer_sk AS ctr_customer_sk, customer_address236.ca_state AS ctr_state, SUM(catalog_returns157.cr_return_amt_inc_tax) AS ctr_total_return

FROM catalog_returns AS catalog_returns157

INNER JOIN (SELECT *

FROM date_dim

WHERE d_year = 1999) AS t1261 ON catalog_returns157.cr_returned_date_sk = t1261.d_date_sk

INNER JOIN customer_address AS customer_address236 ON catalog_returns157.cr_returning_addr_sk = customer_address236.ca_address_sk

GROUP BY catalog_returns157.cr_returning_customer_sk, customer_address236.ca_state) AS t1263

CROSS JOIN (SELECT *

FROM customer_address

WHERE ca_state = 'TN') AS t1264

INNER JOIN customer AS customer78 ON t1264.ca_address_sk = customer78.c_current_addr_sk AND t1263.ctr_customer_sk = customer78.c_customer_sk

INNER JOIN (SELECT t1268.ctr_state, AVG(t1268.ctr_total_return) AS _f1

FROM (SELECT customer_address238.ca_state AS ctr_state, SUM(catalog_returns158.cr_return_amt_inc_tax) AS ctr_total_return

FROM catalog_returns AS catalog_returns158

INNER JOIN (SELECT *

FROM date_dim

WHERE d_year = 1999) AS t1265 ON catalog_returns158.cr_returned_date_sk = t1265.d_date_sk

INNER JOIN customer_address AS customer_address238 ON catalog_returns158.cr_returning_addr_sk = customer_address238.ca_address_sk

GROUP BY catalog_returns158.cr_returning_customer_sk, customer_address238.ca_state) AS t1268

GROUP BY t1268.ctr_state) AS t1269 ON t1263.ctr_state = t1269.ctr_state AND t1263.ctr_total_return > t1269._f1 * 1.2

ORDER BY customer78.c_customer_id, customer78.c_salutation, customer78.c_first_name, customer78.c_last_name, t1264.ca_street_number, t1264.ca_street_name, t1264.ca_street_type, t1264.ca_suite_number, t1264.ca_city, t1264.ca_county, t1264.ca_state, t1264.ca_zip, t1264.ca_country, t1264.ca_gmt_offset, t1264.ca_location_type, t1263.ctr_total_return

LIMIT 100",CollapseProject
38,sql_038.sql,"with ssci as (
select ss_customer_sk customer_sk
      ,ss_item_sk item_sk
from store_sales,date_dim
where ss_sold_date_sk = d_date_sk
  and d_month_seq between 1219 and 1219 + 11
group by ss_customer_sk
        ,ss_item_sk),
csci as(
 select cs_bill_customer_sk customer_sk
      ,cs_item_sk item_sk
from catalog_sales,date_dim
where cs_sold_date_sk = d_date_sk
  and d_month_seq between 1219 and 1219 + 11
group by cs_bill_customer_sk
        ,cs_item_sk)
 select  sum(case when ssci.customer_sk is not null and csci.customer_sk is null then 1 else 0 end) store_only
      ,sum(case when ssci.customer_sk is null and csci.customer_sk is not null then 1 else 0 end) catalog_only
      ,sum(case when ssci.customer_sk is not null and csci.customer_sk is not null then 1 else 0 end) store_and_catalog
from ssci full outer join csci on (ssci.customer_sk=csci.customer_sk
                               and ssci.item_sk = csci.item_sk)
limit 100;","SELECT SUM(CASE WHEN t0.customer_sk IS NOT NULL AND t2.customer_sk IS NULL THEN 1 ELSE 0 END) AS store_only, SUM(CASE WHEN t0.customer_sk IS NULL AND t2.customer_sk IS NOT NULL THEN 1 ELSE 0 END) AS catalog_only, SUM(CASE WHEN t0.customer_sk IS NOT NULL AND t2.customer_sk IS NOT NULL THEN 1 ELSE 0 END) AS store_and_catalog FROM (SELECT store_sales.ss_customer_sk AS customer_sk, store_sales.ss_item_sk AS item_sk FROM store_sales INNER JOIN (SELECT * FROM date_dim WHERE d_month_seq >= 1219 AND d_month_seq <= 1219 + 11) AS t ON store_sales.ss_sold_date_sk = t.d_date_sk) AS t0 FULL JOIN (SELECT catalog_sales.cs_bill_customer_sk AS customer_sk, catalog_sales.cs_item_sk AS item_sk FROM catalog_sales INNER JOIN (SELECT * FROM date_dim WHERE d_month_seq >= 1219 AND d_month_seq <= 1219 + 11) AS t1 ON catalog_sales.cs_sold_date_sk = t1.d_date_sk) AS t2 ON t0.customer_sk = t2.customer_sk AND t0.item_sk = t2.item_sk LIMIT 100",EliminateLimits,tpcds,"with ssci as (
select ss_customer_sk customer_sk
      ,ss_item_sk item_sk
from store_sales,date_dim
where ss_sold_date_sk = d_date_sk
  and d_month_seq between 1219 and 1219 + 11
group by ss_customer_sk
        ,ss_item_sk),
csci as(
 select cs_bill_customer_sk customer_sk
      ,cs_item_sk item_sk
from catalog_sales,date_dim
where cs_sold_date_sk = d_date_sk
  and d_month_seq between 1219 and 1219 + 11
group by cs_bill_customer_sk
        ,cs_item_sk)
 select  sum(case when ssci.customer_sk is not null and csci.customer_sk is null then 1 else 0 end) store_only
      ,sum(case when ssci.customer_sk is null and csci.customer_sk is not null then 1 else 0 end) catalog_only
      ,sum(case when ssci.customer_sk is not null and csci.customer_sk is not null then 1 else 0 end) store_and_catalog
from ssci full outer join csci on (ssci.customer_sk=csci.customer_sk
                               and ssci.item_sk = csci.item_sk)
limit 100;",None
39,sql_039.sql,"select   
         w_warehouse_name
 	,w_warehouse_sq_ft
 	,w_city
 	,w_county
 	,w_state
 	,w_country
        ,ship_carriers
        ,year
 	,sum(jan_sales) as jan_sales
 	,sum(feb_sales) as feb_sales
 	,sum(mar_sales) as mar_sales
 	,sum(apr_sales) as apr_sales
 	,sum(may_sales) as may_sales
 	,sum(jun_sales) as jun_sales
 	,sum(jul_sales) as jul_sales
 	,sum(aug_sales) as aug_sales
 	,sum(sep_sales) as sep_sales
 	,sum(oct_sales) as oct_sales
 	,sum(nov_sales) as nov_sales
 	,sum(dec_sales) as dec_sales
 	,sum(jan_sales/w_warehouse_sq_ft) as jan_sales_per_sq_foot
 	,sum(feb_sales/w_warehouse_sq_ft) as feb_sales_per_sq_foot
 	,sum(mar_sales/w_warehouse_sq_ft) as mar_sales_per_sq_foot
 	,sum(apr_sales/w_warehouse_sq_ft) as apr_sales_per_sq_foot
 	,sum(may_sales/w_warehouse_sq_ft) as may_sales_per_sq_foot
 	,sum(jun_sales/w_warehouse_sq_ft) as jun_sales_per_sq_foot
 	,sum(jul_sales/w_warehouse_sq_ft) as jul_sales_per_sq_foot
 	,sum(aug_sales/w_warehouse_sq_ft) as aug_sales_per_sq_foot
 	,sum(sep_sales/w_warehouse_sq_ft) as sep_sales_per_sq_foot
 	,sum(oct_sales/w_warehouse_sq_ft) as oct_sales_per_sq_foot
 	,sum(nov_sales/w_warehouse_sq_ft) as nov_sales_per_sq_foot
 	,sum(dec_sales/w_warehouse_sq_ft) as dec_sales_per_sq_foot
 	,sum(jan_net) as jan_net
 	,sum(feb_net) as feb_net
 	,sum(mar_net) as mar_net
 	,sum(apr_net) as apr_net
 	,sum(may_net) as may_net
 	,sum(jun_net) as jun_net
 	,sum(jul_net) as jul_net
 	,sum(aug_net) as aug_net
 	,sum(sep_net) as sep_net
 	,sum(oct_net) as oct_net
 	,sum(nov_net) as nov_net
 	,sum(dec_net) as dec_net
 from (
     select 
 	w_warehouse_name
 	,w_warehouse_sq_ft
 	,w_city
 	,w_county
 	,w_state
 	,w_country
 	,'ZHOU' || ',' || 'MSC' as ship_carriers
       ,d_year as year
 	,sum(case when d_moy = 1 
 		then ws_sales_price* ws_quantity else 0 end) as jan_sales
 	,sum(case when d_moy = 2 
 		then ws_sales_price* ws_quantity else 0 end) as feb_sales
 	,sum(case when d_moy = 3 
 		then ws_sales_price* ws_quantity else 0 end) as mar_sales
 	,sum(case when d_moy = 4 
 		then ws_sales_price* ws_quantity else 0 end) as apr_sales
 	,sum(case when d_moy = 5 
 		then ws_sales_price* ws_quantity else 0 end) as may_sales
 	,sum(case when d_moy = 6 
 		then ws_sales_price* ws_quantity else 0 end) as jun_sales
 	,sum(case when d_moy = 7 
 		then ws_sales_price* ws_quantity else 0 end) as jul_sales
 	,sum(case when d_moy = 8 
 		then ws_sales_price* ws_quantity else 0 end) as aug_sales
 	,sum(case when d_moy = 9 
 		then ws_sales_price* ws_quantity else 0 end) as sep_sales
 	,sum(case when d_moy = 10 
 		then ws_sales_price* ws_quantity else 0 end) as oct_sales
 	,sum(case when d_moy = 11
 		then ws_sales_price* ws_quantity else 0 end) as nov_sales
 	,sum(case when d_moy = 12
 		then ws_sales_price* ws_quantity else 0 end) as dec_sales
 	,sum(case when d_moy = 1 
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as jan_net
 	,sum(case when d_moy = 2
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as feb_net
 	,sum(case when d_moy = 3 
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as mar_net
 	,sum(case when d_moy = 4 
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as apr_net
 	,sum(case when d_moy = 5 
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as may_net
 	,sum(case when d_moy = 6 
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as jun_net
 	,sum(case when d_moy = 7 
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as jul_net
 	,sum(case when d_moy = 8 
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as aug_net
 	,sum(case when d_moy = 9 
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as sep_net
 	,sum(case when d_moy = 10 
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as oct_net
 	,sum(case when d_moy = 11
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as nov_net
 	,sum(case when d_moy = 12
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as dec_net
     from
          web_sales
         ,warehouse
         ,date_dim
         ,time_dim
 	  ,ship_mode
     where
            ws_warehouse_sk =  w_warehouse_sk
        and ws_sold_date_sk = d_date_sk
        and ws_sold_time_sk = t_time_sk
 	and ws_ship_mode_sk = sm_ship_mode_sk
        and d_year = 2000
 	and t_time between 12143 and 12143+28800 
 	and sm_carrier in ('ZHOU','MSC')
     group by 
        w_warehouse_name
 	,w_warehouse_sq_ft
 	,w_city
 	,w_county
 	,w_state
 	,w_country
       ,d_year
 union all
     select 
 	w_warehouse_name
 	,w_warehouse_sq_ft
 	,w_city
 	,w_county
 	,w_state
 	,w_country
 	,'ZHOU' || ',' || 'MSC' as ship_carriers
       ,d_year as year
 	,sum(case when d_moy = 1 
 		then cs_ext_list_price* cs_quantity else 0 end) as jan_sales
 	,sum(case when d_moy = 2 
 		then cs_ext_list_price* cs_quantity else 0 end) as feb_sales
 	,sum(case when d_moy = 3 
 		then cs_ext_list_price* cs_quantity else 0 end) as mar_sales
 	,sum(case when d_moy = 4 
 		then cs_ext_list_price* cs_quantity else 0 end) as apr_sales
 	,sum(case when d_moy = 5 
 		then cs_ext_list_price* cs_quantity else 0 end) as may_sales
 	,sum(case when d_moy = 6 
 		then cs_ext_list_price* cs_quantity else 0 end) as jun_sales
 	,sum(case when d_moy = 7 
 		then cs_ext_list_price* cs_quantity else 0 end) as jul_sales
 	,sum(case when d_moy = 8 
 		then cs_ext_list_price* cs_quantity else 0 end) as aug_sales
 	,sum(case when d_moy = 9 
 		then cs_ext_list_price* cs_quantity else 0 end) as sep_sales
 	,sum(case when d_moy = 10 
 		then cs_ext_list_price* cs_quantity else 0 end) as oct_sales
 	,sum(case when d_moy = 11
 		then cs_ext_list_price* cs_quantity else 0 end) as nov_sales
 	,sum(case when d_moy = 12
 		then cs_ext_list_price* cs_quantity else 0 end) as dec_sales
 	,sum(case when d_moy = 1 
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as jan_net
 	,sum(case when d_moy = 2 
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as feb_net
 	,sum(case when d_moy = 3 
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as mar_net
 	,sum(case when d_moy = 4 
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as apr_net
 	,sum(case when d_moy = 5 
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as may_net
 	,sum(case when d_moy = 6 
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as jun_net
 	,sum(case when d_moy = 7 
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as jul_net
 	,sum(case when d_moy = 8 
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as aug_net
 	,sum(case when d_moy = 9 
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as sep_net
 	,sum(case when d_moy = 10 
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as oct_net
 	,sum(case when d_moy = 11
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as nov_net
 	,sum(case when d_moy = 12
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as dec_net
     from
          catalog_sales
         ,warehouse
         ,date_dim
         ,time_dim
 	 ,ship_mode
     where
            cs_warehouse_sk =  w_warehouse_sk
        and cs_sold_date_sk = d_date_sk
        and cs_sold_time_sk = t_time_sk
 	and cs_ship_mode_sk = sm_ship_mode_sk
        and d_year = 2000
 	and t_time between 12143 AND 12143+28800 
 	and sm_carrier in ('ZHOU','MSC')
     group by 
        w_warehouse_name
 	,w_warehouse_sq_ft
 	,w_city
 	,w_county
 	,w_state
 	,w_country
       ,d_year
 ) x
 group by 
        w_warehouse_name
 	,w_warehouse_sq_ft
 	,w_city
 	,w_county
 	,w_state
 	,w_country
 	,ship_carriers
       ,year
 order by w_warehouse_name
 limit 100;","SELECT w_warehouse_name, w_warehouse_sq_ft, w_city, w_county, w_state, w_country, 'ZHOU' || ',' || 'MSC' AS ship_carriers, 2000 AS calcite_year, SUM(jan_sales) AS jan_sales, SUM(feb_sales) AS feb_sales, SUM(mar_sales) AS mar_sales, SUM(apr_sales) AS apr_sales, SUM(may_sales) AS may_sales, SUM(jun_sales) AS jun_sales, SUM(jul_sales) AS jul_sales, SUM(aug_sales) AS aug_sales, SUM(sep_sales) AS sep_sales, SUM(oct_sales) AS oct_sales, SUM(nov_sales) AS nov_sales, SUM(dec_sales) AS dec_sales, SUM(jan_sales / w_warehouse_sq_ft) AS jan_sales_per_sq_foot, SUM(feb_sales / w_warehouse_sq_ft) AS feb_sales_per_sq_foot, SUM(mar_sales / w_warehouse_sq_ft) AS mar_sales_per_sq_foot, SUM(apr_sales / w_warehouse_sq_ft) AS apr_sales_per_sq_foot, SUM(may_sales / w_warehouse_sq_ft) AS may_sales_per_sq_foot, SUM(jun_sales / w_warehouse_sq_ft) AS jun_sales_per_sq_foot, SUM(jul_sales / w_warehouse_sq_ft) AS jul_sales_per_sq_foot, SUM(aug_sales / w_warehouse_sq_ft) AS aug_sales_per_sq_foot, SUM(sep_sales / w_warehouse_sq_ft) AS sep_sales_per_sq_foot, SUM(oct_sales / w_warehouse_sq_ft) AS oct_sales_per_sq_foot, SUM(nov_sales / w_warehouse_sq_ft) AS nov_sales_per_sq_foot, SUM(dec_sales / w_warehouse_sq_ft) AS dec_sales_per_sq_foot, SUM(jan_net) AS jan_net, SUM(feb_net) AS feb_net, SUM(mar_net) AS mar_net, SUM(apr_net) AS apr_net, SUM(may_net) AS may_net, SUM(jun_net) AS jun_net, SUM(jul_net) AS jul_net, SUM(aug_net) AS aug_net, SUM(sep_net) AS sep_net, SUM(oct_net) AS oct_net, SUM(nov_net) AS nov_net, SUM(dec_net) AS dec_net FROM (SELECT warehouse.w_warehouse_name, warehouse.w_warehouse_sq_ft, warehouse.w_city, warehouse.w_county, warehouse.w_state, warehouse.w_country, 'ZHOU' || ',' || 'MSC' AS ship_carriers, 2000 AS calcite_year, SUM(CASE WHEN t.d_moy = 1 THEN web_sales.ws_sales_price * web_sales.ws_quantity ELSE 0 END) AS jan_sales, SUM(CASE WHEN t.d_moy = 2 THEN web_sales.ws_sales_price * web_sales.ws_quantity ELSE 0 END) AS feb_sales, SUM(CASE WHEN t.d_moy = 3 THEN web_sales.ws_sales_price * web_sales.ws_quantity ELSE 0 END) AS mar_sales, SUM(CASE WHEN t.d_moy = 4 THEN web_sales.ws_sales_price * web_sales.ws_quantity ELSE 0 END) AS apr_sales, SUM(CASE WHEN t.d_moy = 5 THEN web_sales.ws_sales_price * web_sales.ws_quantity ELSE 0 END) AS may_sales, SUM(CASE WHEN t.d_moy = 6 THEN web_sales.ws_sales_price * web_sales.ws_quantity ELSE 0 END) AS jun_sales, SUM(CASE WHEN t.d_moy = 7 THEN web_sales.ws_sales_price * web_sales.ws_quantity ELSE 0 END) AS jul_sales, SUM(CASE WHEN t.d_moy = 8 THEN web_sales.ws_sales_price * web_sales.ws_quantity ELSE 0 END) AS aug_sales, SUM(CASE WHEN t.d_moy = 9 THEN web_sales.ws_sales_price * web_sales.ws_quantity ELSE 0 END) AS sep_sales, SUM(CASE WHEN t.d_moy = 10 THEN web_sales.ws_sales_price * web_sales.ws_quantity ELSE 0 END) AS oct_sales, SUM(CASE WHEN t.d_moy = 11 THEN web_sales.ws_sales_price * web_sales.ws_quantity ELSE 0 END) AS nov_sales, SUM(CASE WHEN t.d_moy = 12 THEN web_sales.ws_sales_price * web_sales.ws_quantity ELSE 0 END) AS dec_sales, SUM(CASE WHEN t.d_moy = 1 THEN web_sales.ws_net_paid_inc_tax * web_sales.ws_quantity ELSE 0 END) AS jan_net, SUM(CASE WHEN t.d_moy = 2 THEN web_sales.ws_net_paid_inc_tax * web_sales.ws_quantity ELSE 0 END) AS feb_net, SUM(CASE WHEN t.d_moy = 3 THEN web_sales.ws_net_paid_inc_tax * web_sales.ws_quantity ELSE 0 END) AS mar_net, SUM(CASE WHEN t.d_moy = 4 THEN web_sales.ws_net_paid_inc_tax * web_sales.ws_quantity ELSE 0 END) AS apr_net, SUM(CASE WHEN t.d_moy = 5 THEN web_sales.ws_net_paid_inc_tax * web_sales.ws_quantity ELSE 0 END) AS may_net, SUM(CASE WHEN t.d_moy = 6 THEN web_sales.ws_net_paid_inc_tax * web_sales.ws_quantity ELSE 0 END) AS jun_net, SUM(CASE WHEN t.d_moy = 7 THEN web_sales.ws_net_paid_inc_tax * web_sales.ws_quantity ELSE 0 END) AS jul_net, SUM(CASE WHEN t.d_moy = 8 THEN web_sales.ws_net_paid_inc_tax * web_sales.ws_quantity ELSE 0 END) AS aug_net, SUM(CASE WHEN t.d_moy = 9 THEN web_sales.ws_net_paid_inc_tax * web_sales.ws_quantity ELSE 0 END) AS sep_net, SUM(CASE WHEN t.d_moy = 10 THEN web_sales.ws_net_paid_inc_tax * web_sales.ws_quantity ELSE 0 END) AS oct_net, SUM(CASE WHEN t.d_moy = 11 THEN web_sales.ws_net_paid_inc_tax * web_sales.ws_quantity ELSE 0 END) AS nov_net, SUM(CASE WHEN t.d_moy = 12 THEN web_sales.ws_net_paid_inc_tax * web_sales.ws_quantity ELSE 0 END) AS dec_net FROM web_sales INNER JOIN warehouse ON web_sales.ws_warehouse_sk = warehouse.w_warehouse_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year = 2000) AS t ON web_sales.ws_sold_date_sk = t.d_date_sk INNER JOIN (SELECT * FROM time_dim WHERE t_time >= 12143 AND t_time <= 12143 + 28800) AS t0 ON web_sales.ws_sold_time_sk = t0.t_time_sk INNER JOIN (SELECT * FROM ship_mode WHERE sm_carrier IN ('MSC', 'ZHOU')) AS t1 ON web_sales.ws_ship_mode_sk = t1.sm_ship_mode_sk GROUP BY warehouse.w_warehouse_name, warehouse.w_warehouse_sq_ft, warehouse.w_city, warehouse.w_county, warehouse.w_state, warehouse.w_country UNION ALL SELECT warehouse0.w_warehouse_name, warehouse0.w_warehouse_sq_ft, warehouse0.w_city, warehouse0.w_county, warehouse0.w_state, warehouse0.w_country, 'ZHOU' || ',' || 'MSC' AS ship_carriers, 2000 AS calcite_year, SUM(CASE WHEN t6.d_moy = 1 THEN catalog_sales.cs_ext_list_price * catalog_sales.cs_quantity ELSE 0 END) AS jan_sales, SUM(CASE WHEN t6.d_moy = 2 THEN catalog_sales.cs_ext_list_price * catalog_sales.cs_quantity ELSE 0 END) AS feb_sales, SUM(CASE WHEN t6.d_moy = 3 THEN catalog_sales.cs_ext_list_price * catalog_sales.cs_quantity ELSE 0 END) AS mar_sales, SUM(CASE WHEN t6.d_moy = 4 THEN catalog_sales.cs_ext_list_price * catalog_sales.cs_quantity ELSE 0 END) AS apr_sales, SUM(CASE WHEN t6.d_moy = 5 THEN catalog_sales.cs_ext_list_price * catalog_sales.cs_quantity ELSE 0 END) AS may_sales, SUM(CASE WHEN t6.d_moy = 6 THEN catalog_sales.cs_ext_list_price * catalog_sales.cs_quantity ELSE 0 END) AS jun_sales, SUM(CASE WHEN t6.d_moy = 7 THEN catalog_sales.cs_ext_list_price * catalog_sales.cs_quantity ELSE 0 END) AS jul_sales, SUM(CASE WHEN t6.d_moy = 8 THEN catalog_sales.cs_ext_list_price * catalog_sales.cs_quantity ELSE 0 END) AS aug_sales, SUM(CASE WHEN t6.d_moy = 9 THEN catalog_sales.cs_ext_list_price * catalog_sales.cs_quantity ELSE 0 END) AS sep_sales, SUM(CASE WHEN t6.d_moy = 10 THEN catalog_sales.cs_ext_list_price * catalog_sales.cs_quantity ELSE 0 END) AS oct_sales, SUM(CASE WHEN t6.d_moy = 11 THEN catalog_sales.cs_ext_list_price * catalog_sales.cs_quantity ELSE 0 END) AS nov_sales, SUM(CASE WHEN t6.d_moy = 12 THEN catalog_sales.cs_ext_list_price * catalog_sales.cs_quantity ELSE 0 END) AS dec_sales, SUM(CASE WHEN t6.d_moy = 1 THEN catalog_sales.cs_net_paid_inc_tax * catalog_sales.cs_quantity ELSE 0 END) AS jan_net, SUM(CASE WHEN t6.d_moy = 2 THEN catalog_sales.cs_net_paid_inc_tax * catalog_sales.cs_quantity ELSE 0 END) AS feb_net, SUM(CASE WHEN t6.d_moy = 3 THEN catalog_sales.cs_net_paid_inc_tax * catalog_sales.cs_quantity ELSE 0 END) AS mar_net, SUM(CASE WHEN t6.d_moy = 4 THEN catalog_sales.cs_net_paid_inc_tax * catalog_sales.cs_quantity ELSE 0 END) AS apr_net, SUM(CASE WHEN t6.d_moy = 5 THEN catalog_sales.cs_net_paid_inc_tax * catalog_sales.cs_quantity ELSE 0 END) AS may_net, SUM(CASE WHEN t6.d_moy = 6 THEN catalog_sales.cs_net_paid_inc_tax * catalog_sales.cs_quantity ELSE 0 END) AS jun_net, SUM(CASE WHEN t6.d_moy = 7 THEN catalog_sales.cs_net_paid_inc_tax * catalog_sales.cs_quantity ELSE 0 END) AS jul_net, SUM(CASE WHEN t6.d_moy = 8 THEN catalog_sales.cs_net_paid_inc_tax * catalog_sales.cs_quantity ELSE 0 END) AS aug_net, SUM(CASE WHEN t6.d_moy = 9 THEN catalog_sales.cs_net_paid_inc_tax * catalog_sales.cs_quantity ELSE 0 END) AS sep_net, SUM(CASE WHEN t6.d_moy = 10 THEN catalog_sales.cs_net_paid_inc_tax * catalog_sales.cs_quantity ELSE 0 END) AS oct_net, SUM(CASE WHEN t6.d_moy = 11 THEN catalog_sales.cs_net_paid_inc_tax * catalog_sales.cs_quantity ELSE 0 END) AS nov_net, SUM(CASE WHEN t6.d_moy = 12 THEN catalog_sales.cs_net_paid_inc_tax * catalog_sales.cs_quantity ELSE 0 END) AS dec_net FROM catalog_sales INNER JOIN warehouse AS warehouse0 ON catalog_sales.cs_warehouse_sk = warehouse0.w_warehouse_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year = 2000) AS t6 ON catalog_sales.cs_sold_date_sk = t6.d_date_sk INNER JOIN (SELECT * FROM time_dim WHERE t_time >= 12143 AND t_time <= 12143 + 28800) AS t7 ON catalog_sales.cs_sold_time_sk = t7.t_time_sk INNER JOIN (SELECT * FROM ship_mode WHERE sm_carrier IN ('MSC', 'ZHOU')) AS t8 ON catalog_sales.cs_ship_mode_sk = t8.sm_ship_mode_sk GROUP BY warehouse0.w_warehouse_name, warehouse0.w_warehouse_sq_ft, warehouse0.w_city, warehouse0.w_county, warehouse0.w_state, warehouse0.w_country) AS t13 GROUP BY w_warehouse_name, w_warehouse_sq_ft, w_city, w_county, w_state, w_country ORDER BY w_warehouse_name LIMIT 100",ConstantFolding,tpcds,"select   
         w_warehouse_name
 	,w_warehouse_sq_ft
 	,w_city
 	,w_county
 	,w_state
 	,w_country
        ,ship_carriers
        ,year
 	,sum(jan_sales) as jan_sales
 	,sum(feb_sales) as feb_sales
 	,sum(mar_sales) as mar_sales
 	,sum(apr_sales) as apr_sales
 	,sum(may_sales) as may_sales
 	,sum(jun_sales) as jun_sales
 	,sum(jul_sales) as jul_sales
 	,sum(aug_sales) as aug_sales
 	,sum(sep_sales) as sep_sales
 	,sum(oct_sales) as oct_sales
 	,sum(nov_sales) as nov_sales
 	,sum(dec_sales) as dec_sales
 	,sum(jan_sales/w_warehouse_sq_ft) as jan_sales_per_sq_foot
 	,sum(feb_sales/w_warehouse_sq_ft) as feb_sales_per_sq_foot
 	,sum(mar_sales/w_warehouse_sq_ft) as mar_sales_per_sq_foot
 	,sum(apr_sales/w_warehouse_sq_ft) as apr_sales_per_sq_foot
 	,sum(may_sales/w_warehouse_sq_ft) as may_sales_per_sq_foot
 	,sum(jun_sales/w_warehouse_sq_ft) as jun_sales_per_sq_foot
 	,sum(jul_sales/w_warehouse_sq_ft) as jul_sales_per_sq_foot
 	,sum(aug_sales/w_warehouse_sq_ft) as aug_sales_per_sq_foot
 	,sum(sep_sales/w_warehouse_sq_ft) as sep_sales_per_sq_foot
 	,sum(oct_sales/w_warehouse_sq_ft) as oct_sales_per_sq_foot
 	,sum(nov_sales/w_warehouse_sq_ft) as nov_sales_per_sq_foot
 	,sum(dec_sales/w_warehouse_sq_ft) as dec_sales_per_sq_foot
 	,sum(jan_net) as jan_net
 	,sum(feb_net) as feb_net
 	,sum(mar_net) as mar_net
 	,sum(apr_net) as apr_net
 	,sum(may_net) as may_net
 	,sum(jun_net) as jun_net
 	,sum(jul_net) as jul_net
 	,sum(aug_net) as aug_net
 	,sum(sep_net) as sep_net
 	,sum(oct_net) as oct_net
 	,sum(nov_net) as nov_net
 	,sum(dec_net) as dec_net
 from (
     select 
 	w_warehouse_name
 	,w_warehouse_sq_ft
 	,w_city
 	,w_county
 	,w_state
 	,w_country
 	,'ZHOU' || ',' || 'MSC' as ship_carriers
       ,d_year as year
 	,sum(case when d_moy = 1 
 		then ws_sales_price* ws_quantity else 0 end) as jan_sales
 	,sum(case when d_moy = 2 
 		then ws_sales_price* ws_quantity else 0 end) as feb_sales
 	,sum(case when d_moy = 3 
 		then ws_sales_price* ws_quantity else 0 end) as mar_sales
 	,sum(case when d_moy = 4 
 		then ws_sales_price* ws_quantity else 0 end) as apr_sales
 	,sum(case when d_moy = 5 
 		then ws_sales_price* ws_quantity else 0 end) as may_sales
 	,sum(case when d_moy = 6 
 		then ws_sales_price* ws_quantity else 0 end) as jun_sales
 	,sum(case when d_moy = 7 
 		then ws_sales_price* ws_quantity else 0 end) as jul_sales
 	,sum(case when d_moy = 8 
 		then ws_sales_price* ws_quantity else 0 end) as aug_sales
 	,sum(case when d_moy = 9 
 		then ws_sales_price* ws_quantity else 0 end) as sep_sales
 	,sum(case when d_moy = 10 
 		then ws_sales_price* ws_quantity else 0 end) as oct_sales
 	,sum(case when d_moy = 11
 		then ws_sales_price* ws_quantity else 0 end) as nov_sales
 	,sum(case when d_moy = 12
 		then ws_sales_price* ws_quantity else 0 end) as dec_sales
 	,sum(case when d_moy = 1 
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as jan_net
 	,sum(case when d_moy = 2
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as feb_net
 	,sum(case when d_moy = 3 
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as mar_net
 	,sum(case when d_moy = 4 
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as apr_net
 	,sum(case when d_moy = 5 
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as may_net
 	,sum(case when d_moy = 6 
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as jun_net
 	,sum(case when d_moy = 7 
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as jul_net
 	,sum(case when d_moy = 8 
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as aug_net
 	,sum(case when d_moy = 9 
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as sep_net
 	,sum(case when d_moy = 10 
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as oct_net
 	,sum(case when d_moy = 11
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as nov_net
 	,sum(case when d_moy = 12
 		then ws_net_paid_inc_tax * ws_quantity else 0 end) as dec_net
     from
          web_sales
         ,warehouse
         ,date_dim
         ,time_dim
 	  ,ship_mode
     where
            ws_warehouse_sk =  w_warehouse_sk
        and ws_sold_date_sk = d_date_sk
        and ws_sold_time_sk = t_time_sk
 	and ws_ship_mode_sk = sm_ship_mode_sk
        and d_year = 2000
 	and t_time between 12143 and 12143+28800 
 	and sm_carrier in ('ZHOU','MSC')
     group by 
        w_warehouse_name
 	,w_warehouse_sq_ft
 	,w_city
 	,w_county
 	,w_state
 	,w_country
       ,d_year
 union all
     select 
 	w_warehouse_name
 	,w_warehouse_sq_ft
 	,w_city
 	,w_county
 	,w_state
 	,w_country
 	,'ZHOU' || ',' || 'MSC' as ship_carriers
       ,d_year as year
 	,sum(case when d_moy = 1 
 		then cs_ext_list_price* cs_quantity else 0 end) as jan_sales
 	,sum(case when d_moy = 2 
 		then cs_ext_list_price* cs_quantity else 0 end) as feb_sales
 	,sum(case when d_moy = 3 
 		then cs_ext_list_price* cs_quantity else 0 end) as mar_sales
 	,sum(case when d_moy = 4 
 		then cs_ext_list_price* cs_quantity else 0 end) as apr_sales
 	,sum(case when d_moy = 5 
 		then cs_ext_list_price* cs_quantity else 0 end) as may_sales
 	,sum(case when d_moy = 6 
 		then cs_ext_list_price* cs_quantity else 0 end) as jun_sales
 	,sum(case when d_moy = 7 
 		then cs_ext_list_price* cs_quantity else 0 end) as jul_sales
 	,sum(case when d_moy = 8 
 		then cs_ext_list_price* cs_quantity else 0 end) as aug_sales
 	,sum(case when d_moy = 9 
 		then cs_ext_list_price* cs_quantity else 0 end) as sep_sales
 	,sum(case when d_moy = 10 
 		then cs_ext_list_price* cs_quantity else 0 end) as oct_sales
 	,sum(case when d_moy = 11
 		then cs_ext_list_price* cs_quantity else 0 end) as nov_sales
 	,sum(case when d_moy = 12
 		then cs_ext_list_price* cs_quantity else 0 end) as dec_sales
 	,sum(case when d_moy = 1 
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as jan_net
 	,sum(case when d_moy = 2 
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as feb_net
 	,sum(case when d_moy = 3 
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as mar_net
 	,sum(case when d_moy = 4 
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as apr_net
 	,sum(case when d_moy = 5 
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as may_net
 	,sum(case when d_moy = 6 
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as jun_net
 	,sum(case when d_moy = 7 
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as jul_net
 	,sum(case when d_moy = 8 
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as aug_net
 	,sum(case when d_moy = 9 
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as sep_net
 	,sum(case when d_moy = 10 
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as oct_net
 	,sum(case when d_moy = 11
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as nov_net
 	,sum(case when d_moy = 12
 		then cs_net_paid_inc_tax * cs_quantity else 0 end) as dec_net
     from
          catalog_sales
         ,warehouse
         ,date_dim
         ,time_dim
 	 ,ship_mode
     where
            cs_warehouse_sk =  w_warehouse_sk
        and cs_sold_date_sk = d_date_sk
        and cs_sold_time_sk = t_time_sk
 	and cs_ship_mode_sk = sm_ship_mode_sk
        and d_year = 2000
 	and t_time between 12143 AND 12143+28800 
 	and sm_carrier in ('ZHOU','MSC')
     group by 
        w_warehouse_name
 	,w_warehouse_sq_ft
 	,w_city
 	,w_county
 	,w_state
 	,w_country
       ,d_year
 ) x
 group by 
        w_warehouse_name
 	,w_warehouse_sq_ft
 	,w_city
 	,w_county
 	,w_state
 	,w_country
 	,ship_carriers
       ,year
 order by w_warehouse_name
 limit 100;",ConstantFolding
40,sql_040.sql,"select  cast(amc as decimal(15,4))/cast(pmc as decimal(15,4)) am_pm_ratio
 from ( select count(*) amc
       from web_sales, household_demographics , time_dim, web_page
       where ws_sold_time_sk = time_dim.t_time_sk
         and ws_ship_hdemo_sk = household_demographics.hd_demo_sk
         and ws_web_page_sk = web_page.wp_web_page_sk
         and time_dim.t_hour between 10 and 10+1
         and household_demographics.hd_dep_count = 6
         and web_page.wp_char_count between 5000 and 5200) at,
      ( select count(*) pmc
       from web_sales, household_demographics , time_dim, web_page
       where ws_sold_time_sk = time_dim.t_time_sk
         and ws_ship_hdemo_sk = household_demographics.hd_demo_sk
         and ws_web_page_sk = web_page.wp_web_page_sk
         and time_dim.t_hour between 18 and 18+1
         and household_demographics.hd_dep_count = 6
         and web_page.wp_char_count between 5000 and 5200) pt
 order by am_pm_ratio
 limit 100;","select  cast(amc as decimal(15,4))/cast(pmc as decimal(15,4)) am_pm_ratio
 from ( select count(*) amc
       from web_sales, household_demographics , time_dim, web_page
       where ws_sold_time_sk = time_dim.t_time_sk
         and ws_ship_hdemo_sk = household_demographics.hd_demo_sk
         and ws_web_page_sk = web_page.wp_web_page_sk
         and time_dim.t_hour between 10 and 10+1
         and household_demographics.hd_dep_count = 6
         and web_page.wp_char_count between 5000 and 5200) at,
      ( select count(*) pmc
       from web_sales, household_demographics , time_dim, web_page
       where ws_sold_time_sk = time_dim.t_time_sk
         and ws_ship_hdemo_sk = household_demographics.hd_demo_sk
         and ws_web_page_sk = web_page.wp_web_page_sk
         and time_dim.t_hour between 18 and 18+1
         and household_demographics.hd_dep_count = 6
         and web_page.wp_char_count between 5000 and 5200) pt
 order by am_pm_ratio
 limit 100;",EliminateLimits,tpcds,"select  cast(amc as decimal(15,4))/cast(pmc as decimal(15,4)) am_pm_ratio
 from ( select count(*) amc
       from web_sales, household_demographics , time_dim, web_page
       where ws_sold_time_sk = time_dim.t_time_sk
         and ws_ship_hdemo_sk = household_demographics.hd_demo_sk
         and ws_web_page_sk = web_page.wp_web_page_sk
         and time_dim.t_hour between 10 and 10+1
         and household_demographics.hd_dep_count = 6
         and web_page.wp_char_count between 5000 and 5200) at,
      ( select count(*) pmc
       from web_sales, household_demographics , time_dim, web_page
       where ws_sold_time_sk = time_dim.t_time_sk
         and ws_ship_hdemo_sk = household_demographics.hd_demo_sk
         and ws_web_page_sk = web_page.wp_web_page_sk
         and time_dim.t_hour between 18 and 18+1
         and household_demographics.hd_dep_count = 6
         and web_page.wp_char_count between 5000 and 5200) pt
 order by am_pm_ratio
 limit 100;",EliminateLimits
41,sql_041.sql,"select  i_item_id
       ,i_item_desc
       ,s_state
       ,count(ss_quantity) as store_sales_quantitycount
       ,avg(ss_quantity) as store_sales_quantityave
       ,stddev_samp(ss_quantity) as store_sales_quantitystdev
       ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov
       ,count(sr_return_quantity) as store_returns_quantitycount
       ,avg(sr_return_quantity) as store_returns_quantityave
       ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev
       ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov
       ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave
       ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev
       ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov
 from store_sales
     ,store_returns
     ,catalog_sales
     ,date_dim d1
     ,date_dim d2
     ,date_dim d3
     ,store
     ,item
 where d1.d_quarter_name = '1999Q1'
   and d1.d_date_sk = ss_sold_date_sk
   and i_item_sk = ss_item_sk
   and s_store_sk = ss_store_sk
   and ss_customer_sk = sr_customer_sk
   and ss_item_sk = sr_item_sk
   and ss_ticket_number = sr_ticket_number
   and sr_returned_date_sk = d2.d_date_sk
   and d2.d_quarter_name in ('1999Q1','1999Q2','1999Q3')
   and sr_customer_sk = cs_bill_customer_sk
   and sr_item_sk = cs_item_sk
   and cs_sold_date_sk = d3.d_date_sk
   and d3.d_quarter_name in ('1999Q1','1999Q2','1999Q3')
 group by i_item_id
         ,i_item_desc
         ,s_state
 order by i_item_id
         ,i_item_desc
         ,s_state
limit 100;","SELECT item.i_item_id, item.i_item_desc, store.s_state, COUNT(*) AS store_sales_quantitycount, AVG(store_sales.ss_quantity) AS store_sales_quantityave, STDDEV_SAMP(store_sales.ss_quantity) AS store_sales_quantitystdev, STDDEV_SAMP(store_sales.ss_quantity) / AVG(store_sales.ss_quantity) AS store_sales_quantitycov, COUNT(*) AS store_returns_quantitycount, AVG(store_returns.sr_return_quantity) AS store_returns_quantityave, STDDEV_SAMP(store_returns.sr_return_quantity) AS store_returns_quantitystdev, STDDEV_SAMP(store_returns.sr_return_quantity) / AVG(store_returns.sr_return_quantity) AS store_returns_quantitycov, COUNT(*) AS catalog_sales_quantitycount, AVG(catalog_sales.cs_quantity) AS catalog_sales_quantityave, STDDEV_SAMP(catalog_sales.cs_quantity) AS catalog_sales_quantitystdev, STDDEV_SAMP(catalog_sales.cs_quantity) / AVG(catalog_sales.cs_quantity) AS catalog_sales_quantitycov FROM store_sales, store_returns, catalog_sales, date_dim, date_dim AS date_dim0, date_dim AS date_dim1, store, item WHERE date_dim.d_quarter_name = '1999Q1' AND (date_dim.d_date_sk = store_sales.ss_sold_date_sk AND item.i_item_sk = store_sales.ss_item_sk) AND (store.s_store_sk = store_sales.ss_store_sk AND (store_sales.ss_customer_sk = store_returns.sr_customer_sk AND store_sales.ss_item_sk = store_returns.sr_item_sk)) AND (store_sales.ss_ticket_number = store_returns.sr_ticket_number AND (store_returns.sr_returned_date_sk = date_dim0.d_date_sk AND (date_dim0.d_quarter_name = '1999Q1' OR date_dim0.d_quarter_name = '1999Q2' OR date_dim0.d_quarter_name = '1999Q3')) AND (store_returns.sr_customer_sk = catalog_sales.cs_bill_customer_sk AND store_returns.sr_item_sk = catalog_sales.cs_item_sk AND (catalog_sales.cs_sold_date_sk = date_dim1.d_date_sk AND (date_dim1.d_quarter_name = '1999Q1' OR date_dim1.d_quarter_name = '1999Q2' OR date_dim1.d_quarter_name = '1999Q3')))) GROUP BY item.i_item_id, item.i_item_desc, store.s_state ORDER BY item.i_item_id, item.i_item_desc, store.s_state LIMIT 100",None,tpcds,"SELECT item103.i_item_id, item103.i_item_desc, store103.s_state, COUNT(*) AS store_sales_quantitycount, AVG(store_sales103.ss_quantity) AS store_sales_quantityave, STDDEV_SAMP(store_sales103.ss_quantity) AS store_sales_quantitystdev, STDDEV_SAMP(store_sales103.ss_quantity) / AVG(store_sales103.ss_quantity) AS store_sales_quantitycov, COUNT(*) AS store_returns_quantitycount, AVG(store_returns103.sr_return_quantity) AS store_returns_quantityave, STDDEV_SAMP(store_returns103.sr_return_quantity) AS store_returns_quantitystdev, STDDEV_SAMP(store_returns103.sr_return_quantity) / AVG(store_returns103.sr_return_quantity) AS store_returns_quantitycov, COUNT(*) AS catalog_sales_quantitycount, AVG(catalog_sales103.cs_quantity) AS catalog_sales_quantityave, STDDEV_SAMP(catalog_sales103.cs_quantity) AS catalog_sales_quantitystdev, STDDEV_SAMP(catalog_sales103.cs_quantity) / AVG(catalog_sales103.cs_quantity) AS catalog_sales_quantitycov

FROM store_sales AS store_sales103

INNER JOIN store_returns AS store_returns103 ON store_sales103.ss_customer_sk = store_returns103.sr_customer_sk AND store_sales103.ss_item_sk = store_returns103.sr_item_sk AND store_sales103.ss_ticket_number = store_returns103.sr_ticket_number

INNER JOIN catalog_sales AS catalog_sales103 ON store_returns103.sr_customer_sk = catalog_sales103.cs_bill_customer_sk AND store_returns103.sr_item_sk = catalog_sales103.cs_item_sk

INNER JOIN (SELECT *

FROM date_dim

WHERE d_quarter_name = '1998Q1') AS t1054 ON store_sales103.ss_sold_date_sk = t1054.d_date_sk

INNER JOIN (SELECT *

FROM date_dim

WHERE d_quarter_name IN ('1998Q1', '1998Q2', '1998Q3')) AS t1055 ON store_returns103.sr_returned_date_sk = t1055.d_date_sk

INNER JOIN (SELECT *

FROM date_dim

WHERE d_quarter_name IN ('1998Q1', '1998Q2', '1998Q3')) AS t1056 ON catalog_sales103.cs_sold_date_sk = t1056.d_date_sk

INNER JOIN store AS store103 ON store_sales103.ss_store_sk = store103.s_store_sk

INNER JOIN item AS item103 ON store_sales103.ss_item_sk = item103.i_item_sk

GROUP BY item103.i_item_id, item103.i_item_desc, store103.s_state

ORDER BY item103.i_item_id, item103.i_item_desc, store103.s_state

LIMIT 100",None
42,sql_042.sql,"with v1 as(
 select i_category, i_brand,
        s_store_name, s_company_name,
        d_year, d_moy,
        sum(ss_sales_price) sum_sales,
        avg(sum(ss_sales_price)) over
          (partition by i_category, i_brand,
                     s_store_name, s_company_name, d_year)
          avg_monthly_sales,
        rank() over
          (partition by i_category, i_brand,
                     s_store_name, s_company_name
           order by d_year, d_moy) rn
 from item, store_sales, date_dim, store
 where ss_item_sk = i_item_sk and
       ss_sold_date_sk = d_date_sk and
       ss_store_sk = s_store_sk and
       (
         d_year = 2000 or
         ( d_year = 2000-1 and d_moy =12) or
         ( d_year = 2000+1 and d_moy =1)
       )
 group by i_category, i_brand,
          s_store_name, s_company_name,
          d_year, d_moy),
 v2 as(
 select v1.i_category, v1.i_brand
        ,v1.d_year, v1.d_moy
        ,v1.avg_monthly_sales
        ,v1.sum_sales, v1_lag.sum_sales psum, v1_lead.sum_sales nsum
 from v1, v1 v1_lag, v1 v1_lead
 where v1.i_category = v1_lag.i_category and
       v1.i_category = v1_lead.i_category and
       v1.i_brand = v1_lag.i_brand and
       v1.i_brand = v1_lead.i_brand and
       v1.s_store_name = v1_lag.s_store_name and
       v1.s_store_name = v1_lead.s_store_name and
       v1.s_company_name = v1_lag.s_company_name and
       v1.s_company_name = v1_lead.s_company_name and
       v1.rn = v1_lag.rn + 1 and
       v1.rn = v1_lead.rn - 1)
  select  *
 from v2
 where  d_year = 2000 and    
        avg_monthly_sales > 0 and
        case when avg_monthly_sales > 0 then abs(sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1
 order by sum_sales - avg_monthly_sales, psum
 limit 100;","with v1 as(
 select i_category, i_brand,
        s_store_name, s_company_name,
        d_year, d_moy,
        sum(ss_sales_price) sum_sales,
        avg(sum(ss_sales_price)) over
          (partition by i_category, i_brand,
                     s_store_name, s_company_name, d_year)
          avg_monthly_sales,
        rank() over
          (partition by i_category, i_brand,
                     s_store_name, s_company_name
           order by d_year, d_moy) rn
 from item, store_sales, date_dim, store
 where ss_item_sk = i_item_sk and
       ss_sold_date_sk = d_date_sk and
       ss_store_sk = s_store_sk and
       (
         d_year = 2000 or
         ( d_year = 2000-1 and d_moy =12) or
         ( d_year = 2000+1 and d_moy =1)
       )
 group by i_category, i_brand,
          s_store_name, s_company_name,
          d_year, d_moy),
 v2 as(
 select v1.i_category, v1.i_brand
        ,v1.d_year, v1.d_moy
        ,v1.avg_monthly_sales
        ,v1.sum_sales, v1_lag.sum_sales psum, v1_lead.sum_sales nsum
 from v1, v1 v1_lag, v1 v1_lead
 where v1.i_category = v1_lag.i_category and
       v1.i_category = v1_lead.i_category and
       v1.i_brand = v1_lag.i_brand and
       v1.i_brand = v1_lead.i_brand and
       v1.s_store_name = v1_lag.s_store_name and
       v1.s_store_name = v1_lead.s_store_name and
       v1.s_company_name = v1_lag.s_company_name and
       v1.s_company_name = v1_lead.s_company_name and
       v1.rn = v1_lag.rn + 1 and
       v1.rn = v1_lead.rn - 1)
  select  *
 from v2
 where  d_year = 2000 and    
        avg_monthly_sales > 0 and
        case when avg_monthly_sales > 0 then abs(sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1
 order by sum_sales - avg_monthly_sales, psum
 limit 100;",RemoveRedundantAliases,tpcds,"with v1 as(
 select i_category, i_brand,
        s_store_name, s_company_name,
        d_year, d_moy,
        sum(ss_sales_price) sum_sales,
        avg(sum(ss_sales_price)) over
          (partition by i_category, i_brand,
                     s_store_name, s_company_name, d_year)
          avg_monthly_sales,
        rank() over
          (partition by i_category, i_brand,
                     s_store_name, s_company_name
           order by d_year, d_moy) rn
 from item, store_sales, date_dim, store
 where ss_item_sk = i_item_sk and
       ss_sold_date_sk = d_date_sk and
       ss_store_sk = s_store_sk and
       (
         d_year = 2000 or
         ( d_year = 2000-1 and d_moy =12) or
         ( d_year = 2000+1 and d_moy =1)
       )
 group by i_category, i_brand,
          s_store_name, s_company_name,
          d_year, d_moy),
 v2 as(
 select v1.i_category, v1.i_brand
        ,v1.d_year, v1.d_moy
        ,v1.avg_monthly_sales
        ,v1.sum_sales, v1_lag.sum_sales psum, v1_lead.sum_sales nsum
 from v1, v1 v1_lag, v1 v1_lead
 where v1.i_category = v1_lag.i_category and
       v1.i_category = v1_lead.i_category and
       v1.i_brand = v1_lag.i_brand and
       v1.i_brand = v1_lead.i_brand and
       v1.s_store_name = v1_lag.s_store_name and
       v1.s_store_name = v1_lead.s_store_name and
       v1.s_company_name = v1_lag.s_company_name and
       v1.s_company_name = v1_lead.s_company_name and
       v1.rn = v1_lag.rn + 1 and
       v1.rn = v1_lead.rn - 1)
  select  *
 from v2
 where  d_year = 2000 and    
        avg_monthly_sales > 0 and
        case when avg_monthly_sales > 0 then abs(sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1
 order by sum_sales - avg_monthly_sales, psum
 limit 100;",TransposeWindow
43,sql_043.sql,"with ws_wh as
(select ws1.ws_order_number,ws1.ws_warehouse_sk wh1,ws2.ws_warehouse_sk wh2
 from web_sales ws1,web_sales ws2
 where ws1.ws_order_number = ws2.ws_order_number
   and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)
 select  
   count(distinct ws_order_number) as order_count
  ,sum(ws_ext_ship_cost) as total_shipping_cost
  ,sum(ws_net_profit) as total_net_profit
from
   web_sales ws1
  ,date_dim
  ,customer_address
  ,web_site
where
    d_date between '2002-4-01' and 
           (date_add(cast('2002-4-01' as date), 60))
and ws1.ws_ship_date_sk = d_date_sk
and ws1.ws_ship_addr_sk = ca_address_sk
and ca_state = 'MS'
and ws1.ws_web_site_sk = web_site_sk
and web_company_name = 'pri'
and ws1.ws_order_number in (select ws_order_number
                            from ws_wh)
and ws1.ws_order_number in (select wr_order_number
                            from web_returns,ws_wh
                            where wr_order_number = ws_wh.ws_order_number)
order by count(distinct ws_order_number)
limit 100;","with ws_wh as
(select ws1.ws_order_number,ws1.ws_warehouse_sk wh1,ws2.ws_warehouse_sk wh2
 from web_sales ws1,web_sales ws2
 where ws1.ws_order_number = ws2.ws_order_number
   and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)
 select  
   count(distinct ws_order_number) as order_count
  ,sum(ws_ext_ship_cost) as total_shipping_cost
  ,sum(ws_net_profit) as total_net_profit
from
   web_sales ws1
  ,date_dim
  ,customer_address
  ,web_site
where
    d_date between '2002-4-01' and 
           (date_add(cast('2002-4-01' as date), 60))
and ws1.ws_ship_date_sk = d_date_sk
and ws1.ws_ship_addr_sk = ca_address_sk
and ca_state = 'MS'
and ws1.ws_web_site_sk = web_site_sk
and web_company_name = 'pri'
and ws1.ws_order_number in (select ws_order_number
                            from ws_wh)
and ws1.ws_order_number in (select wr_order_number
                            from web_returns,ws_wh
                            where wr_order_number = ws_wh.ws_order_number)
order by count(distinct ws_order_number)
limit 100;","EliminateLimits,RemoveNoopOperators",tpcds,"with ws_wh as
(select ws1.ws_order_number,ws1.ws_warehouse_sk wh1,ws2.ws_warehouse_sk wh2
 from web_sales ws1,web_sales ws2
 where ws1.ws_order_number = ws2.ws_order_number
   and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)
 select  
   count(distinct ws_order_number) as order_count
  ,sum(ws_ext_ship_cost) as total_shipping_cost
  ,sum(ws_net_profit) as total_net_profit
from
   web_sales ws1
  ,date_dim
  ,customer_address
  ,web_site
where
    d_date between '2002-4-01' and 
           (date_add(cast('2002-4-01' as date), 60))
and ws1.ws_ship_date_sk = d_date_sk
and ws1.ws_ship_addr_sk = ca_address_sk
and ca_state = 'MS'
and ws1.ws_web_site_sk = web_site_sk
and web_company_name = 'pri'
and ws1.ws_order_number in (select ws_order_number
                            from ws_wh)
and ws1.ws_order_number in (select wr_order_number
                            from web_returns,ws_wh
                            where wr_order_number = ws_wh.ws_order_number)
order by count(distinct ws_order_number)
limit 100;","ConstantFolding,EliminateLimits"
44,sql_044.sql,"select  
   sum(ws_ext_discount_amt)  as Excess_Discount_Amount 
from 
    web_sales 
   ,item 
   ,date_dim
where
i_manufact_id = 950
and i_item_sk = ws_item_sk 
and d_date between '2000-03-20' and 
        (date_add(cast('2000-03-20' as date), 90))
and d_date_sk = ws_sold_date_sk 
and ws_ext_discount_amt  
     > ( 
         SELECT 
            1.3 * avg(ws_ext_discount_amt) 
         FROM 
            web_sales 
           ,date_dim
         WHERE 
              ws_item_sk = i_item_sk 
          and d_date between '2000-03-20' and
                             (date_add(cast('2000-03-20' as date), 90))
          and d_date_sk = ws_sold_date_sk 
      ) 
order by sum(ws_ext_discount_amt)
limit 100;","SELECT SUM(web_sales.ws_ext_discount_amt) AS Excess_Discount_Amount FROM web_sales INNER JOIN (SELECT * FROM item WHERE i_manufact_id = 950) AS t ON web_sales.ws_item_sk = t.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_date >= DATE '2000-03-20' AND d_date <= (DATE '2000-03-20' + INTERVAL '90' DAY)) AS t0 ON web_sales.ws_sold_date_sk = t0.d_date_sk INNER JOIN (SELECT web_sales0.ws_item_sk, AVG(web_sales0.ws_ext_discount_amt) AS dollarf1 FROM web_sales AS web_sales0 INNER JOIN (SELECT * FROM date_dim WHERE d_date >= DATE '2000-03-20' AND d_date <= (DATE '2000-03-20' + INTERVAL '90' DAY)) AS t1 ON web_sales0.ws_sold_date_sk = t1.d_date_sk GROUP BY web_sales0.ws_item_sk) AS t2 ON t.i_item_sk = t2.ws_item_sk AND web_sales.ws_ext_discount_amt > 1.3 * t2.dollarf1 ORDER BY SUM(web_sales.ws_ext_discount_amt) LIMIT 100",ConstantFolding,tpcds,"SELECT SUM(web_sales5.ws_ext_discount_amt) AS Excess_Discount_Amount

FROM web_sales AS web_sales5

INNER JOIN (SELECT *

FROM item

WHERE i_manufact_id = 992) AS t25 ON web_sales5.ws_item_sk = t25.i_item_sk

INNER JOIN (SELECT *

FROM date_dim

WHERE d_date >= DATE '1998-02-02' AND d_date <= (DATE '1998-02-02' + 90 * INTERVAL '1' DAY)) AS t26 ON web_sales5.ws_sold_date_sk = t26.d_date_sk

INNER JOIN (SELECT web_sales6.ws_item_sk, AVG(web_sales6.ws_ext_discount_amt) AS _f1

FROM web_sales AS web_sales6

INNER JOIN (SELECT *

FROM date_dim

WHERE d_date >= DATE '1998-02-02' AND d_date <= (DATE '1998-02-02' + 90 * INTERVAL '1' DAY)) AS t27 ON web_sales6.ws_sold_date_sk = t27.d_date_sk

GROUP BY web_sales6.ws_item_sk) AS t28 ON t25.i_item_sk = t28.ws_item_sk AND web_sales5.ws_ext_discount_amt > 1.3 * t28._f1

ORDER BY SUM(web_sales5.ws_ext_discount_amt)

LIMIT 100",ConstantFolding
45,sql_045.sql,"select  dt.d_year 
       ,item.i_brand_id brand_id 
       ,item.i_brand brand
       ,sum(ss_sales_price) sum_agg
 from  date_dim dt 
      ,store_sales
      ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
   and store_sales.ss_item_sk = item.i_item_sk
   and item.i_manufact_id = 55
   and dt.d_moy=11
 group by dt.d_year
      ,item.i_brand
      ,item.i_brand_id
 order by dt.d_year
         ,sum_agg desc
         ,brand_id
 limit 100;","select  dt.d_year 
       ,item.i_brand_id brand_id 
       ,item.i_brand brand
       ,sum(ss_sales_price) sum_agg
 from  date_dim dt 
      ,store_sales
      ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
   and store_sales.ss_item_sk = item.i_item_sk
   and item.i_manufact_id = 55
   and dt.d_moy=11
 group by dt.d_year
      ,item.i_brand
      ,item.i_brand_id
 order by dt.d_year
         ,sum_agg desc
         ,brand_id
 limit 100;",None,tpcds,"SELECT t105.d_year, t105.i_brand_id AS brand_id, t105.i_brand AS brand, t105.sum_agg

FROM (SELECT t99.d_year, t101.i_brand, t101.i_brand_id, SUM(t99.sum_agg * t101._f3) AS sum_agg

FROM (SELECT t96.d_year, t97.ss_item_sk, SUM(t96._f2 * t97.sum_agg) AS sum_agg

FROM (SELECT d_date_sk, d_year, COUNT(*) AS _f2

FROM date_dim

WHERE d_moy = 11

GROUP BY d_date_sk, d_year) AS t96

INNER JOIN (SELECT ss_sold_date_sk, ss_item_sk, SUM(ss_sales_price) AS sum_agg

FROM store_sales

GROUP BY ss_sold_date_sk, ss_item_sk) AS t97 ON t96.d_date_sk = t97.ss_sold_date_sk

GROUP BY t96.d_year, t97.ss_item_sk) AS t99

INNER JOIN (SELECT i_item_sk, i_brand_id, i_brand, COUNT(*) AS _f3

FROM item

WHERE i_manufact_id = 810

GROUP BY i_item_sk, i_brand_id, i_brand) AS t101 ON t99.ss_item_sk = t101.i_item_sk

GROUP BY t99.d_year, t101.i_brand_id, t101.i_brand

ORDER BY t99.d_year, SUM(t99.sum_agg * t101._f3) DESC, t101.i_brand_id

LIMIT 100) AS t105",ColumnPruning
46,sql_046.sql,"WITH web_v1 as (
select
  ws_item_sk item_sk, d_date,
  sum(sum(ws_sales_price))
      over (partition by ws_item_sk order by d_date rows between unbounded preceding and current row) cume_sales
from web_sales
    ,date_dim
where ws_sold_date_sk=d_date_sk
  and d_month_seq between 1212 and 1212+11
  and ws_item_sk is not NULL
group by ws_item_sk, d_date),
store_v1 as (
select
  ss_item_sk item_sk, d_date,
  sum(sum(ss_sales_price))
      over (partition by ss_item_sk order by d_date rows between unbounded preceding and current row) cume_sales
from store_sales
    ,date_dim
where ss_sold_date_sk=d_date_sk
  and d_month_seq between 1212 and 1212+11
  and ss_item_sk is not NULL
group by ss_item_sk, d_date)
 select  *
from (select item_sk
     ,d_date
     ,web_sales
     ,store_sales
     ,max(web_sales)
         over (partition by item_sk order by d_date rows between unbounded preceding and current row) web_cumulative
     ,max(store_sales)
         over (partition by item_sk order by d_date rows between unbounded preceding and current row) store_cumulative
     from (select case when web.item_sk is not null then web.item_sk else store.item_sk end item_sk
                 ,case when web.d_date is not null then web.d_date else store.d_date end d_date
                 ,web.cume_sales web_sales
                 ,store.cume_sales store_sales
           from web_v1 web full outer join store_v1 store on (web.item_sk = store.item_sk
                                                          and web.d_date = store.d_date)
          )x )y
where web_cumulative > store_cumulative
order by item_sk
        ,d_date
limit 100;","WITH web_v1 as (
select
  ws_item_sk item_sk, d_date,
  sum(sum(ws_sales_price))
      over (partition by ws_item_sk order by d_date rows between unbounded preceding and current row) cume_sales
from web_sales
    ,date_dim
where ws_sold_date_sk=d_date_sk
  and d_month_seq between 1212 and 1212+11
  and ws_item_sk is not NULL
group by ws_item_sk, d_date),
store_v1 as (
select
  ss_item_sk item_sk, d_date,
  sum(sum(ss_sales_price))
      over (partition by ss_item_sk order by d_date rows between unbounded preceding and current row) cume_sales
from store_sales
    ,date_dim
where ss_sold_date_sk=d_date_sk
  and d_month_seq between 1212 and 1212+11
  and ss_item_sk is not NULL
group by ss_item_sk, d_date)
 select  *
from (select item_sk
     ,d_date
     ,web_sales
     ,store_sales
     ,max(web_sales)
         over (partition by item_sk order by d_date rows between unbounded preceding and current row) web_cumulative
     ,max(store_sales)
         over (partition by item_sk order by d_date rows between unbounded preceding and current row) store_cumulative
     from (select case when web.item_sk is not null then web.item_sk else store.item_sk end item_sk
                 ,case when web.d_date is not null then web.d_date else store.d_date end d_date
                 ,web.cume_sales web_sales
                 ,store.cume_sales store_sales
           from web_v1 web full outer join store_v1 store on (web.item_sk = store.item_sk
                                                          and web.d_date = store.d_date)
          )x )y
where web_cumulative > store_cumulative
order by item_sk
        ,d_date
limit 100;",CollapseProject,tpcds,"WITH web_v1 as (
select
  ws_item_sk item_sk, d_date,
  sum(sum(ws_sales_price))
      over (partition by ws_item_sk order by d_date rows between unbounded preceding and current row) cume_sales
from web_sales
    ,date_dim
where ws_sold_date_sk=d_date_sk
  and d_month_seq between 1212 and 1212+11
  and ws_item_sk is not NULL
group by ws_item_sk, d_date),
store_v1 as (
select
  ss_item_sk item_sk, d_date,
  sum(sum(ss_sales_price))
      over (partition by ss_item_sk order by d_date rows between unbounded preceding and current row) cume_sales
from store_sales
    ,date_dim
where ss_sold_date_sk=d_date_sk
  and d_month_seq between 1212 and 1212+11
  and ss_item_sk is not NULL
group by ss_item_sk, d_date)
 select  *
from (select item_sk
     ,d_date
     ,web_sales
     ,store_sales
     ,max(web_sales)
         over (partition by item_sk order by d_date rows between unbounded preceding and current row) web_cumulative
     ,max(store_sales)
         over (partition by item_sk order by d_date rows between unbounded preceding and current row) store_cumulative
     from (select case when web.item_sk is not null then web.item_sk else store.item_sk end item_sk
                 ,case when web.d_date is not null then web.d_date else store.d_date end d_date
                 ,web.cume_sales web_sales
                 ,store.cume_sales store_sales
           from web_v1 web full outer join store_v1 store on (web.item_sk = store.item_sk
                                                          and web.d_date = store.d_date)
          )x )y
where web_cumulative > store_cumulative
order by item_sk
        ,d_date
limit 100;",CollapseProject
47,sql_047.sql,"select   
  ca_state,
  cd_gender,
  cd_marital_status,
  cd_dep_count,
  count(*) cnt1,
  min(cd_dep_count),
  max(cd_dep_count),
  max(cd_dep_count),
  cd_dep_employed_count,
  count(*) cnt2,
  min(cd_dep_employed_count),
  max(cd_dep_employed_count),
  max(cd_dep_employed_count),
  cd_dep_college_count,
  count(*) cnt3,
  min(cd_dep_college_count),
  max(cd_dep_college_count),
  max(cd_dep_college_count)
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 2002 and
                d_qoy < 4) and
   (exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 2002 and
                  d_qoy < 4) or 
    exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 2002 and
                  d_qoy < 4))
 group by ca_state,
          cd_gender,
          cd_marital_status,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
 order by ca_state,
          cd_gender,
          cd_marital_status,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
 limit 100;","select   
  ca_state,
  cd_gender,
  cd_marital_status,
  cd_dep_count,
  count(*) cnt1,
  min(cd_dep_count),
  max(cd_dep_count),
  max(cd_dep_count),
  cd_dep_employed_count,
  count(*) cnt2,
  min(cd_dep_employed_count),
  max(cd_dep_employed_count),
  max(cd_dep_employed_count),
  cd_dep_college_count,
  count(*) cnt3,
  min(cd_dep_college_count),
  max(cd_dep_college_count),
  max(cd_dep_college_count)
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 2002 and
                d_qoy < 4) and
   (exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 2002 and
                  d_qoy < 4) or 
    exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 2002 and
                  d_qoy < 4))
 group by ca_state,
          cd_gender,
          cd_marital_status,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
 order by ca_state,
          cd_gender,
          cd_marital_status,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
 limit 100;",RemoveNoopOperators,tpcds,"select   
  ca_state,
  cd_gender,
  cd_marital_status,
  cd_dep_count,
  count(*) cnt1,
  min(cd_dep_count),
  max(cd_dep_count),
  max(cd_dep_count),
  cd_dep_employed_count,
  count(*) cnt2,
  min(cd_dep_employed_count),
  max(cd_dep_employed_count),
  max(cd_dep_employed_count),
  cd_dep_college_count,
  count(*) cnt3,
  min(cd_dep_college_count),
  max(cd_dep_college_count),
  max(cd_dep_college_count)
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 2002 and
                d_qoy < 4) and
   (exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 2002 and
                  d_qoy < 4) or 
    exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 2002 and
                  d_qoy < 4))
 group by ca_state,
          cd_gender,
          cd_marital_status,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
 order by ca_state,
          cd_gender,
          cd_marital_status,
          cd_dep_count,
          cd_dep_employed_count,
          cd_dep_college_count
 limit 100;",RemoveNoopOperators
48,sql_048.sql,"select  channel, item, return_ratio, return_rank, currency_rank from
 (select
 'web' as channel
 ,web.item
 ,web.return_ratio
 ,web.return_rank
 ,web.currency_rank
 from (
 	select 
 	 item
 	,return_ratio
 	,currency_ratio
 	,rank() over (order by return_ratio) as return_rank
 	,rank() over (order by currency_ratio) as currency_rank
 	from
 	(	select ws.ws_item_sk as item
 		,(cast(sum(coalesce(wr.wr_return_quantity,0)) as decimal(15,4))/
 		cast(sum(coalesce(ws.ws_quantity,0)) as decimal(15,4) )) as return_ratio
 		,(cast(sum(coalesce(wr.wr_return_amt,0)) as decimal(15,4))/
 		cast(sum(coalesce(ws.ws_net_paid,0)) as decimal(15,4) )) as currency_ratio
 		from 
 		 web_sales ws left outer join web_returns wr 
 			on (ws.ws_order_number = wr.wr_order_number and 
 			ws.ws_item_sk = wr.wr_item_sk)
                 ,date_dim
 		where 
 			wr.wr_return_amt > 10000 
 			and ws.ws_net_profit > 1
                         and ws.ws_net_paid > 0
                         and ws.ws_quantity > 0
                         and ws_sold_date_sk = d_date_sk
                         and d_year = 2000
                         and d_moy = 11
 		group by ws.ws_item_sk
 	) in_web
 ) web
 where 
 (
 web.return_rank <= 10
 or
 web.currency_rank <= 10
 )
 union
 select 
 'catalog' as channel
 ,catalog.item
 ,catalog.return_ratio
 ,catalog.return_rank
 ,catalog.currency_rank
 from (
 	select 
 	 item
 	,return_ratio
 	,currency_ratio
 	,rank() over (order by return_ratio) as return_rank
 	,rank() over (order by currency_ratio) as currency_rank
 	from
 	(	select 
 		cs.cs_item_sk as item
 		,(cast(sum(coalesce(cr.cr_return_quantity,0)) as decimal(15,4))/
 		cast(sum(coalesce(cs.cs_quantity,0)) as decimal(15,4) )) as return_ratio
 		,(cast(sum(coalesce(cr.cr_return_amount,0)) as decimal(15,4))/
 		cast(sum(coalesce(cs.cs_net_paid,0)) as decimal(15,4) )) as currency_ratio
 		from 
 		catalog_sales cs left outer join catalog_returns cr
 			on (cs.cs_order_number = cr.cr_order_number and 
 			cs.cs_item_sk = cr.cr_item_sk)
                ,date_dim
 		where 
 			cr.cr_return_amount > 10000 
 			and cs.cs_net_profit > 1
                         and cs.cs_net_paid > 0
                         and cs.cs_quantity > 0
                         and cs_sold_date_sk = d_date_sk
                         and d_year = 2000
                         and d_moy = 11
                 group by cs.cs_item_sk
 	) in_cat
 ) catalog
 where 
 (
 catalog.return_rank <= 10
 or
 catalog.currency_rank <=10
 )
 union
 select 
 'store' as channel
 ,store.item
 ,store.return_ratio
 ,store.return_rank
 ,store.currency_rank
 from (
 	select 
 	 item
 	,return_ratio
 	,currency_ratio
 	,rank() over (order by return_ratio) as return_rank
 	,rank() over (order by currency_ratio) as currency_rank
 	from
 	(	select sts.ss_item_sk as item
 		,(cast(sum(coalesce(sr.sr_return_quantity,0)) as decimal(15,4))/cast(sum(coalesce(sts.ss_quantity,0)) as decimal(15,4) )) as return_ratio
 		,(cast(sum(coalesce(sr.sr_return_amt,0)) as decimal(15,4))/cast(sum(coalesce(sts.ss_net_paid,0)) as decimal(15,4) )) as currency_ratio
 		from 
 		store_sales sts left outer join store_returns sr
 			on (sts.ss_ticket_number = sr.sr_ticket_number and sts.ss_item_sk = sr.sr_item_sk)
                ,date_dim
 		where 
 			sr.sr_return_amt > 10000 
 			and sts.ss_net_profit > 1
                         and sts.ss_net_paid > 0 
                         and sts.ss_quantity > 0
                         and ss_sold_date_sk = d_date_sk
                         and d_year = 2000
                         and d_moy = 11
 		group by sts.ss_item_sk
 	) in_store
 ) store
 where  (
 store.return_rank <= 10
 or 
 store.currency_rank <= 10
 )
 )
 order by 1,4,5,2
 limit 100;","SELECT channel, item, return_ratio, return_rank, currency_rank FROM (SELECT channel, item, return_ratio, return_rank, currency_rank FROM (SELECT 'web' AS channel, item, return_ratio, return_rank, currency_rank FROM (SELECT t1.ws_item_sk AS item, CAST(SUM(CASE WHEN t1.wr_return_quantity IS NOT NULL THEN CAST(t1.wr_return_quantity AS INTEGER) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t1.ws_quantity) AS DECIMAL(15, 4)) AS return_ratio, CAST(SUM(CASE WHEN t1.wr_return_amt IS NOT NULL THEN CAST(t1.wr_return_amt AS DECIMAL(17, 2)) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t1.ws_net_paid) AS DECIMAL(15, 4)) AS currency_ratio, RANK() OVER (ORDER BY CAST(SUM(CASE WHEN t1.wr_return_quantity IS NOT NULL THEN CAST(t1.wr_return_quantity AS INTEGER) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t1.ws_quantity) AS DECIMAL(15, 4))) AS return_rank, RANK() OVER (ORDER BY CAST(SUM(CASE WHEN t1.wr_return_amt IS NOT NULL THEN CAST(t1.wr_return_amt AS DECIMAL(17, 2)) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t1.ws_net_paid) AS DECIMAL(15, 4))) AS currency_rank FROM (SELECT t.ws_sold_date_sk, t.ws_sold_time_sk, t.ws_ship_date_sk, t.ws_item_sk, t.ws_bill_customer_sk, t.ws_bill_cdemo_sk, t.ws_bill_hdemo_sk, t.ws_bill_addr_sk, t.ws_ship_customer_sk, t.ws_ship_cdemo_sk, t.ws_ship_hdemo_sk, t.ws_ship_addr_sk, t.ws_web_page_sk, t.ws_web_site_sk, t.ws_ship_mode_sk, t.ws_warehouse_sk, t.ws_promo_sk, t.ws_order_number, t.ws_quantity, t.ws_wholesale_cost, t.ws_list_price, t.ws_sales_price, t.ws_ext_discount_amt, t.ws_ext_sales_price, t.ws_ext_wholesale_cost, t.ws_ext_list_price, t.ws_ext_tax, t.ws_coupon_amt, t.ws_ext_ship_cost, t.ws_net_paid, t.ws_net_paid_inc_tax, t.ws_net_paid_inc_ship, t.ws_net_paid_inc_ship_tax, t.ws_net_profit, CAST(t0.wr_returned_date_sk AS INTEGER) AS wr_returned_date_sk, CAST(t0.wr_returned_time_sk AS INTEGER) AS wr_returned_time_sk, CAST(t0.wr_item_sk AS INTEGER) AS wr_item_sk, CAST(t0.wr_refunded_customer_sk AS INTEGER) AS wr_refunded_customer_sk, CAST(t0.wr_refunded_cdemo_sk AS INTEGER) AS wr_refunded_cdemo_sk, CAST(t0.wr_refunded_hdemo_sk AS INTEGER) AS wr_refunded_hdemo_sk, CAST(t0.wr_refunded_addr_sk AS INTEGER) AS wr_refunded_addr_sk, CAST(t0.wr_returning_customer_sk AS INTEGER) AS wr_returning_customer_sk, CAST(t0.wr_returning_cdemo_sk AS INTEGER) AS wr_returning_cdemo_sk, CAST(t0.wr_returning_hdemo_sk AS INTEGER) AS wr_returning_hdemo_sk, CAST(t0.wr_returning_addr_sk AS INTEGER) AS wr_returning_addr_sk, CAST(t0.wr_web_page_sk AS INTEGER) AS wr_web_page_sk, CAST(t0.wr_reason_sk AS INTEGER) AS wr_reason_sk, CAST(t0.wr_order_number AS INTEGER) AS wr_order_number, CAST(t0.wr_return_quantity AS INTEGER) AS wr_return_quantity, CAST(t0.wr_return_amt AS DECIMAL(17, 2)) AS wr_return_amt, CAST(t0.wr_return_tax AS DECIMAL(17, 2)) AS wr_return_tax, CAST(t0.wr_return_amt_inc_tax AS DECIMAL(17, 2)) AS wr_return_amt_inc_tax, CAST(t0.wr_fee AS DECIMAL(17, 2)) AS wr_fee, CAST(t0.wr_return_ship_cost AS DECIMAL(17, 2)) AS wr_return_ship_cost, CAST(t0.wr_refunded_cash AS DECIMAL(17, 2)) AS wr_refunded_cash, CAST(t0.wr_reversed_charge AS DECIMAL(17, 2)) AS wr_reversed_charge, CAST(t0.wr_account_credit AS DECIMAL(17, 2)) AS wr_account_credit, CAST(t0.wr_net_loss AS DECIMAL(17, 2)) AS wr_net_loss FROM (SELECT * FROM web_sales WHERE ws_net_profit > 1 AND ws_net_paid > 0 AND ws_quantity > 0) AS t INNER JOIN (SELECT * FROM web_returns WHERE wr_return_amt > 10000) AS t0 ON t.ws_order_number = t0.wr_order_number AND t.ws_item_sk = t0.wr_item_sk) AS t1 INNER JOIN (SELECT * FROM date_dim WHERE d_year = 2000 AND d_moy = 11) AS t2 ON t1.ws_sold_date_sk = t2.d_date_sk GROUP BY t1.ws_item_sk) AS t5 WHERE t5.return_rank <= 10 OR t5.currency_rank <= 10 UNION ALL SELECT 'catalog' AS channel, item, return_ratio, return_rank, currency_rank FROM (SELECT t10.cs_item_sk AS item, CAST(SUM(CASE WHEN t10.cr_return_quantity IS NOT NULL THEN CAST(t10.cr_return_quantity AS INTEGER) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t10.cs_quantity) AS DECIMAL(15, 4)) AS return_ratio, CAST(SUM(CASE WHEN t10.cr_return_amount IS NOT NULL THEN CAST(t10.cr_return_amount AS DECIMAL(17, 2)) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t10.cs_net_paid) AS DECIMAL(15, 4)) AS currency_ratio, RANK() OVER (ORDER BY CAST(SUM(CASE WHEN t10.cr_return_quantity IS NOT NULL THEN CAST(t10.cr_return_quantity AS INTEGER) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t10.cs_quantity) AS DECIMAL(15, 4))) AS return_rank, RANK() OVER (ORDER BY CAST(SUM(CASE WHEN t10.cr_return_amount IS NOT NULL THEN CAST(t10.cr_return_amount AS DECIMAL(17, 2)) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t10.cs_net_paid) AS DECIMAL(15, 4))) AS currency_rank FROM (SELECT t8.cs_sold_date_sk, t8.cs_sold_time_sk, t8.cs_ship_date_sk, t8.cs_bill_customer_sk, t8.cs_bill_cdemo_sk, t8.cs_bill_hdemo_sk, t8.cs_bill_addr_sk, t8.cs_ship_customer_sk, t8.cs_ship_cdemo_sk, t8.cs_ship_hdemo_sk, t8.cs_ship_addr_sk, t8.cs_call_center_sk, t8.cs_catalog_page_sk, t8.cs_ship_mode_sk, t8.cs_warehouse_sk, t8.cs_item_sk, t8.cs_promo_sk, t8.cs_order_number, t8.cs_quantity, t8.cs_wholesale_cost, t8.cs_list_price, t8.cs_sales_price, t8.cs_ext_discount_amt, t8.cs_ext_sales_price, t8.cs_ext_wholesale_cost, t8.cs_ext_list_price, t8.cs_ext_tax, t8.cs_coupon_amt, t8.cs_ext_ship_cost, t8.cs_net_paid, t8.cs_net_paid_inc_tax, t8.cs_net_paid_inc_ship, t8.cs_net_paid_inc_ship_tax, t8.cs_net_profit, CAST(t9.cr_returned_date_sk AS INTEGER) AS cr_returned_date_sk, CAST(t9.cr_returned_time_sk AS INTEGER) AS cr_returned_time_sk, CAST(t9.cr_item_sk AS INTEGER) AS cr_item_sk, CAST(t9.cr_refunded_customer_sk AS INTEGER) AS cr_refunded_customer_sk, CAST(t9.cr_refunded_cdemo_sk AS INTEGER) AS cr_refunded_cdemo_sk, CAST(t9.cr_refunded_hdemo_sk AS INTEGER) AS cr_refunded_hdemo_sk, CAST(t9.cr_refunded_addr_sk AS INTEGER) AS cr_refunded_addr_sk, CAST(t9.cr_returning_customer_sk AS INTEGER) AS cr_returning_customer_sk, CAST(t9.cr_returning_cdemo_sk AS INTEGER) AS cr_returning_cdemo_sk, CAST(t9.cr_returning_hdemo_sk AS INTEGER) AS cr_returning_hdemo_sk, CAST(t9.cr_returning_addr_sk AS INTEGER) AS cr_returning_addr_sk, CAST(t9.cr_call_center_sk AS INTEGER) AS cr_call_center_sk, CAST(t9.cr_catalog_page_sk AS INTEGER) AS cr_catalog_page_sk, CAST(t9.cr_ship_mode_sk AS INTEGER) AS cr_ship_mode_sk, CAST(t9.cr_warehouse_sk AS INTEGER) AS cr_warehouse_sk, CAST(t9.cr_reason_sk AS INTEGER) AS cr_reason_sk, CAST(t9.cr_order_number AS INTEGER) AS cr_order_number, CAST(t9.cr_return_quantity AS INTEGER) AS cr_return_quantity, CAST(t9.cr_return_amount AS DECIMAL(17, 2)) AS cr_return_amount, CAST(t9.cr_return_tax AS DECIMAL(17, 2)) AS cr_return_tax, CAST(t9.cr_return_amt_inc_tax AS DECIMAL(17, 2)) AS cr_return_amt_inc_tax, CAST(t9.cr_fee AS DECIMAL(17, 2)) AS cr_fee, CAST(t9.cr_return_ship_cost AS DECIMAL(17, 2)) AS cr_return_ship_cost, CAST(t9.cr_refunded_cash AS DECIMAL(17, 2)) AS cr_refunded_cash, CAST(t9.cr_reversed_charge AS DECIMAL(17, 2)) AS cr_reversed_charge, CAST(t9.cr_store_credit AS DECIMAL(17, 2)) AS cr_store_credit, CAST(t9.cr_net_loss AS DECIMAL(17, 2)) AS cr_net_loss FROM (SELECT * FROM catalog_sales WHERE cs_net_profit > 1 AND cs_net_paid > 0 AND cs_quantity > 0) AS t8 INNER JOIN (SELECT * FROM catalog_returns WHERE cr_return_amount > 10000) AS t9 ON t8.cs_order_number = t9.cr_order_number AND t8.cs_item_sk = t9.cr_item_sk) AS t10 INNER JOIN (SELECT * FROM date_dim WHERE d_year = 2000 AND d_moy = 11) AS t11 ON t10.cs_sold_date_sk = t11.d_date_sk GROUP BY t10.cs_item_sk) AS t14 WHERE t14.return_rank <= 10 OR t14.currency_rank <= 10) AS t17 GROUP BY channel, item, return_ratio, return_rank, currency_rank UNION ALL SELECT 'store' AS channel, item, return_ratio, return_rank, currency_rank FROM (SELECT t21.ss_item_sk AS item, CAST(SUM(CASE WHEN t21.sr_return_quantity IS NOT NULL THEN CAST(t21.sr_return_quantity AS INTEGER) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t21.ss_quantity) AS DECIMAL(15, 4)) AS return_ratio, CAST(SUM(CASE WHEN t21.sr_return_amt IS NOT NULL THEN CAST(t21.sr_return_amt AS DECIMAL(17, 2)) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t21.ss_net_paid) AS DECIMAL(15, 4)) AS currency_ratio, RANK() OVER (ORDER BY CAST(SUM(CASE WHEN t21.sr_return_quantity IS NOT NULL THEN CAST(t21.sr_return_quantity AS INTEGER) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t21.ss_quantity) AS DECIMAL(15, 4))) AS return_rank, RANK() OVER (ORDER BY CAST(SUM(CASE WHEN t21.sr_return_amt IS NOT NULL THEN CAST(t21.sr_return_amt AS DECIMAL(17, 2)) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t21.ss_net_paid) AS DECIMAL(15, 4))) AS currency_rank FROM (SELECT t19.ss_sold_date_sk, t19.ss_sold_time_sk, t19.ss_item_sk, t19.ss_customer_sk, t19.ss_cdemo_sk, t19.ss_hdemo_sk, t19.ss_addr_sk, t19.ss_store_sk, t19.ss_promo_sk, t19.ss_ticket_number, t19.ss_quantity, t19.ss_wholesale_cost, t19.ss_list_price, t19.ss_sales_price, t19.ss_ext_discount_amt, t19.ss_ext_sales_price, t19.ss_ext_wholesale_cost, t19.ss_ext_list_price, t19.ss_ext_tax, t19.ss_coupon_amt, t19.ss_net_paid, t19.ss_net_paid_inc_tax, t19.ss_net_profit, CAST(t20.sr_returned_date_sk AS INTEGER) AS sr_returned_date_sk, CAST(t20.sr_return_time_sk AS INTEGER) AS sr_return_time_sk, CAST(t20.sr_item_sk AS INTEGER) AS sr_item_sk, CAST(t20.sr_customer_sk AS INTEGER) AS sr_customer_sk, CAST(t20.sr_cdemo_sk AS INTEGER) AS sr_cdemo_sk, CAST(t20.sr_hdemo_sk AS INTEGER) AS sr_hdemo_sk, CAST(t20.sr_addr_sk AS INTEGER) AS sr_addr_sk, CAST(t20.sr_store_sk AS INTEGER) AS sr_store_sk, CAST(t20.sr_reason_sk AS INTEGER) AS sr_reason_sk, CAST(t20.sr_ticket_number AS INTEGER) AS sr_ticket_number, CAST(t20.sr_return_quantity AS INTEGER) AS sr_return_quantity, CAST(t20.sr_return_amt AS DECIMAL(17, 2)) AS sr_return_amt, CAST(t20.sr_return_tax AS DECIMAL(17, 2)) AS sr_return_tax, CAST(t20.sr_return_amt_inc_tax AS DECIMAL(17, 2)) AS sr_return_amt_inc_tax, CAST(t20.sr_fee AS DECIMAL(17, 2)) AS sr_fee, CAST(t20.sr_return_ship_cost AS DECIMAL(17, 2)) AS sr_return_ship_cost, CAST(t20.sr_refunded_cash AS DECIMAL(17, 2)) AS sr_refunded_cash, CAST(t20.sr_reversed_charge AS DECIMAL(17, 2)) AS sr_reversed_charge, CAST(t20.sr_store_credit AS DECIMAL(17, 2)) AS sr_store_credit, CAST(t20.sr_net_loss AS DECIMAL(17, 2)) AS sr_net_loss FROM (SELECT * FROM store_sales WHERE ss_net_profit > 1 AND ss_net_paid > 0 AND ss_quantity > 0) AS t19 INNER JOIN (SELECT * FROM store_returns WHERE sr_return_amt > 10000) AS t20 ON t19.ss_ticket_number = t20.sr_ticket_number AND t19.ss_item_sk = t20.sr_item_sk) AS t21 INNER JOIN (SELECT * FROM date_dim WHERE d_year = 2000 AND d_moy = 11) AS t22 ON t21.ss_sold_date_sk = t22.d_date_sk GROUP BY t21.ss_item_sk) AS t25 WHERE t25.return_rank <= 10 OR t25.currency_rank <= 10) AS t28 GROUP BY channel, item, return_ratio, return_rank, currency_rank ORDER BY channel, return_rank, currency_rank, item LIMIT 100",None,tpcds,"SELECT *

FROM (SELECT *

FROM (SELECT 'web' AS channel, item, return_ratio, return_rank, currency_rank

FROM (SELECT t393.ws_item_sk AS item, CAST(SUM(CASE WHEN t393.wr_return_quantity IS NOT NULL THEN CAST(t393.wr_return_quantity AS INTEGER) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t393.ws_quantity) AS DECIMAL(15, 4)) AS return_ratio, CAST(SUM(CASE WHEN t393.wr_return_amt IS NOT NULL THEN CAST(t393.wr_return_amt AS DECIMAL(19, 0)) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t393.ws_net_paid) AS DECIMAL(15, 4)) AS currency_ratio, RANK() OVER (ORDER BY CAST(SUM(CASE WHEN t393.wr_return_quantity IS NOT NULL THEN CAST(t393.wr_return_quantity AS INTEGER) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t393.ws_quantity) AS DECIMAL(15, 4))) AS return_rank, RANK() OVER (ORDER BY CAST(SUM(CASE WHEN t393.wr_return_amt IS NOT NULL THEN CAST(t393.wr_return_amt AS DECIMAL(19, 0)) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t393.ws_net_paid) AS DECIMAL(15, 4))) AS currency_rank

FROM (SELECT t390.ws_sold_date_sk, t390.ws_sold_time_sk, t390.ws_ship_date_sk, t390.ws_item_sk, t390.ws_bill_customer_sk, t390.ws_bill_cdemo_sk, t390.ws_bill_hdemo_sk, t390.ws_bill_addr_sk, t390.ws_ship_customer_sk, t390.ws_ship_cdemo_sk, t390.ws_ship_hdemo_sk, t390.ws_ship_addr_sk, t390.ws_web_page_sk, t390.ws_web_site_sk, t390.ws_ship_mode_sk, t390.ws_warehouse_sk, t390.ws_promo_sk, t390.ws_order_number, t390.ws_quantity, t390.ws_wholesale_cost, t390.ws_list_price, t390.ws_sales_price, t390.ws_ext_discount_amt, t390.ws_ext_sales_price, t390.ws_ext_wholesale_cost, t390.ws_ext_list_price, t390.ws_ext_tax, t390.ws_coupon_amt, t390.ws_ext_ship_cost, t390.ws_net_paid, t390.ws_net_paid_inc_tax, t390.ws_net_paid_inc_ship, t390.ws_net_paid_inc_ship_tax, t390.ws_net_profit, CAST(t391.wr_returned_date_sk AS INTEGER) AS wr_returned_date_sk, CAST(t391.wr_returned_time_sk AS INTEGER) AS wr_returned_time_sk, CAST(t391.wr_item_sk AS INTEGER) AS wr_item_sk, CAST(t391.wr_refunded_customer_sk AS INTEGER) AS wr_refunded_customer_sk, CAST(t391.wr_refunded_cdemo_sk AS INTEGER) AS wr_refunded_cdemo_sk, CAST(t391.wr_refunded_hdemo_sk AS INTEGER) AS wr_refunded_hdemo_sk, CAST(t391.wr_refunded_addr_sk AS INTEGER) AS wr_refunded_addr_sk, CAST(t391.wr_returning_customer_sk AS INTEGER) AS wr_returning_customer_sk, CAST(t391.wr_returning_cdemo_sk AS INTEGER) AS wr_returning_cdemo_sk, CAST(t391.wr_returning_hdemo_sk AS INTEGER) AS wr_returning_hdemo_sk, CAST(t391.wr_returning_addr_sk AS INTEGER) AS wr_returning_addr_sk, CAST(t391.wr_web_page_sk AS INTEGER) AS wr_web_page_sk, CAST(t391.wr_reason_sk AS INTEGER) AS wr_reason_sk, CAST(t391.wr_order_number AS INTEGER) AS wr_order_number, CAST(t391.wr_return_quantity AS INTEGER) AS wr_return_quantity, CAST(t391.wr_return_amt AS DECIMAL(19, 0)) AS wr_return_amt, CAST(t391.wr_return_tax AS DECIMAL(19, 0)) AS wr_return_tax, CAST(t391.wr_return_amt_inc_tax AS DECIMAL(19, 0)) AS wr_return_amt_inc_tax, CAST(t391.wr_fee AS DECIMAL(19, 0)) AS wr_fee, CAST(t391.wr_return_ship_cost AS DECIMAL(19, 0)) AS wr_return_ship_cost, CAST(t391.wr_refunded_cash AS DECIMAL(19, 0)) AS wr_refunded_cash, CAST(t391.wr_reversed_charge AS DECIMAL(19, 0)) AS wr_reversed_charge, CAST(t391.wr_account_credit AS DECIMAL(19, 0)) AS wr_account_credit, CAST(t391.wr_net_loss AS DECIMAL(19, 0)) AS wr_net_loss

FROM (SELECT *

FROM web_sales

WHERE ws_net_profit > 1 AND ws_net_paid > 0 AND ws_quantity > 0) AS t390,

(SELECT *

FROM web_returns

WHERE wr_return_amt > 10000) AS t391

WHERE t390.ws_order_number = t391.wr_order_number AND t390.ws_item_sk = t391.wr_item_sk) AS t393,

(SELECT *

FROM date_dim

WHERE d_year = 1999 AND d_moy = 11) AS t394

WHERE t393.ws_sold_date_sk = t394.d_date_sk

GROUP BY t393.ws_item_sk) AS t398

WHERE t398.return_rank <= 10 OR t398.currency_rank <= 10

UNION

SELECT 'catalog' AS channel, item, return_ratio, return_rank, currency_rank

FROM (SELECT t404.cs_item_sk AS item, CAST(SUM(CASE WHEN t404.cr_return_quantity IS NOT NULL THEN CAST(t404.cr_return_quantity AS INTEGER) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t404.cs_quantity) AS DECIMAL(15, 4)) AS return_ratio, CAST(SUM(CASE WHEN t404.cr_return_amount IS NOT NULL THEN CAST(t404.cr_return_amount AS DECIMAL(19, 0)) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t404.cs_net_paid) AS DECIMAL(15, 4)) AS currency_ratio, RANK() OVER (ORDER BY CAST(SUM(CASE WHEN t404.cr_return_quantity IS NOT NULL THEN CAST(t404.cr_return_quantity AS INTEGER) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t404.cs_quantity) AS DECIMAL(15, 4))) AS return_rank, RANK() OVER (ORDER BY CAST(SUM(CASE WHEN t404.cr_return_amount IS NOT NULL THEN CAST(t404.cr_return_amount AS DECIMAL(19, 0)) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t404.cs_net_paid) AS DECIMAL(15, 4))) AS currency_rank

FROM (SELECT t401.cs_sold_date_sk, t401.cs_sold_time_sk, t401.cs_ship_date_sk, t401.cs_bill_customer_sk, t401.cs_bill_cdemo_sk, t401.cs_bill_hdemo_sk, t401.cs_bill_addr_sk, t401.cs_ship_customer_sk, t401.cs_ship_cdemo_sk, t401.cs_ship_hdemo_sk, t401.cs_ship_addr_sk, t401.cs_call_center_sk, t401.cs_catalog_page_sk, t401.cs_ship_mode_sk, t401.cs_warehouse_sk, t401.cs_item_sk, t401.cs_promo_sk, t401.cs_order_number, t401.cs_quantity, t401.cs_wholesale_cost, t401.cs_list_price, t401.cs_sales_price, t401.cs_ext_discount_amt, t401.cs_ext_sales_price, t401.cs_ext_wholesale_cost, t401.cs_ext_list_price, t401.cs_ext_tax, t401.cs_coupon_amt, t401.cs_ext_ship_cost, t401.cs_net_paid, t401.cs_net_paid_inc_tax, t401.cs_net_paid_inc_ship, t401.cs_net_paid_inc_ship_tax, t401.cs_net_profit, CAST(t402.cr_returned_date_sk AS INTEGER) AS cr_returned_date_sk, CAST(t402.cr_returned_time_sk AS INTEGER) AS cr_returned_time_sk, CAST(t402.cr_item_sk AS INTEGER) AS cr_item_sk, CAST(t402.cr_refunded_customer_sk AS INTEGER) AS cr_refunded_customer_sk, CAST(t402.cr_refunded_cdemo_sk AS INTEGER) AS cr_refunded_cdemo_sk, CAST(t402.cr_refunded_hdemo_sk AS INTEGER) AS cr_refunded_hdemo_sk, CAST(t402.cr_refunded_addr_sk AS INTEGER) AS cr_refunded_addr_sk, CAST(t402.cr_returning_customer_sk AS INTEGER) AS cr_returning_customer_sk, CAST(t402.cr_returning_cdemo_sk AS INTEGER) AS cr_returning_cdemo_sk, CAST(t402.cr_returning_hdemo_sk AS INTEGER) AS cr_returning_hdemo_sk, CAST(t402.cr_returning_addr_sk AS INTEGER) AS cr_returning_addr_sk, CAST(t402.cr_call_center_sk AS INTEGER) AS cr_call_center_sk, CAST(t402.cr_catalog_page_sk AS INTEGER) AS cr_catalog_page_sk, CAST(t402.cr_ship_mode_sk AS INTEGER) AS cr_ship_mode_sk, CAST(t402.cr_warehouse_sk AS INTEGER) AS cr_warehouse_sk, CAST(t402.cr_reason_sk AS INTEGER) AS cr_reason_sk, CAST(t402.cr_order_number AS INTEGER) AS cr_order_number, CAST(t402.cr_return_quantity AS INTEGER) AS cr_return_quantity, CAST(t402.cr_return_amount AS DECIMAL(19, 0)) AS cr_return_amount, CAST(t402.cr_return_tax AS DECIMAL(19, 0)) AS cr_return_tax, CAST(t402.cr_return_amt_inc_tax AS DECIMAL(19, 0)) AS cr_return_amt_inc_tax, CAST(t402.cr_fee AS DECIMAL(19, 0)) AS cr_fee, CAST(t402.cr_return_ship_cost AS DECIMAL(19, 0)) AS cr_return_ship_cost, CAST(t402.cr_refunded_cash AS DECIMAL(19, 0)) AS cr_refunded_cash, CAST(t402.cr_reversed_charge AS DECIMAL(19, 0)) AS cr_reversed_charge, CAST(t402.cr_store_credit AS DECIMAL(19, 0)) AS cr_store_credit, CAST(t402.cr_net_loss AS DECIMAL(19, 0)) AS cr_net_loss

FROM (SELECT *

FROM catalog_sales

WHERE cs_net_profit > 1 AND cs_net_paid > 0 AND cs_quantity > 0) AS t401,

(SELECT *

FROM catalog_returns

WHERE cr_return_amount > 10000) AS t402

WHERE t401.cs_order_number = t402.cr_order_number AND t401.cs_item_sk = t402.cr_item_sk) AS t404,

(SELECT *

FROM date_dim

WHERE d_year = 1999 AND d_moy = 11) AS t405

WHERE t404.cs_sold_date_sk = t405.d_date_sk

GROUP BY t404.cs_item_sk) AS t409

WHERE t409.return_rank <= 10 OR t409.currency_rank <= 10) AS t

UNION

SELECT 'store' AS channel, item, return_ratio, return_rank, currency_rank

FROM (SELECT t416.ss_item_sk AS item, CAST(SUM(CASE WHEN t416.sr_return_quantity IS NOT NULL THEN CAST(t416.sr_return_quantity AS INTEGER) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t416.ss_quantity) AS DECIMAL(15, 4)) AS return_ratio, CAST(SUM(CASE WHEN t416.sr_return_amt IS NOT NULL THEN CAST(t416.sr_return_amt AS DECIMAL(19, 0)) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t416.ss_net_paid) AS DECIMAL(15, 4)) AS currency_ratio, RANK() OVER (ORDER BY CAST(SUM(CASE WHEN t416.sr_return_quantity IS NOT NULL THEN CAST(t416.sr_return_quantity AS INTEGER) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t416.ss_quantity) AS DECIMAL(15, 4))) AS return_rank, RANK() OVER (ORDER BY CAST(SUM(CASE WHEN t416.sr_return_amt IS NOT NULL THEN CAST(t416.sr_return_amt AS DECIMAL(19, 0)) ELSE 0 END) AS DECIMAL(15, 4)) / CAST(SUM(t416.ss_net_paid) AS DECIMAL(15, 4))) AS currency_rank

FROM (SELECT t413.ss_sold_date_sk, t413.ss_sold_time_sk, t413.ss_item_sk, t413.ss_customer_sk, t413.ss_cdemo_sk, t413.ss_hdemo_sk, t413.ss_addr_sk, t413.ss_store_sk, t413.ss_promo_sk, t413.ss_ticket_number, t413.ss_quantity, t413.ss_wholesale_cost, t413.ss_list_price, t413.ss_sales_price, t413.ss_ext_discount_amt, t413.ss_ext_sales_price, t413.ss_ext_wholesale_cost, t413.ss_ext_list_price, t413.ss_ext_tax, t413.ss_coupon_amt, t413.ss_net_paid, t413.ss_net_paid_inc_tax, t413.ss_net_profit, CAST(t414.sr_returned_date_sk AS INTEGER) AS sr_returned_date_sk, CAST(t414.sr_return_time_sk AS INTEGER) AS sr_return_time_sk, CAST(t414.sr_item_sk AS INTEGER) AS sr_item_sk, CAST(t414.sr_customer_sk AS INTEGER) AS sr_customer_sk, CAST(t414.sr_cdemo_sk AS INTEGER) AS sr_cdemo_sk, CAST(t414.sr_hdemo_sk AS INTEGER) AS sr_hdemo_sk, CAST(t414.sr_addr_sk AS INTEGER) AS sr_addr_sk, CAST(t414.sr_store_sk AS INTEGER) AS sr_store_sk, CAST(t414.sr_reason_sk AS INTEGER) AS sr_reason_sk, CAST(t414.sr_ticket_number AS INTEGER) AS sr_ticket_number, CAST(t414.sr_return_quantity AS INTEGER) AS sr_return_quantity, CAST(t414.sr_return_amt AS DECIMAL(19, 0)) AS sr_return_amt, CAST(t414.sr_return_tax AS DECIMAL(19, 0)) AS sr_return_tax, CAST(t414.sr_return_amt_inc_tax AS DECIMAL(19, 0)) AS sr_return_amt_inc_tax, CAST(t414.sr_fee AS DECIMAL(19, 0)) AS sr_fee, CAST(t414.sr_return_ship_cost AS DECIMAL(19, 0)) AS sr_return_ship_cost, CAST(t414.sr_refunded_cash AS DECIMAL(19, 0)) AS sr_refunded_cash, CAST(t414.sr_reversed_charge AS DECIMAL(19, 0)) AS sr_reversed_charge, CAST(t414.sr_store_credit AS DECIMAL(19, 0)) AS sr_store_credit, CAST(t414.sr_net_loss AS DECIMAL(19, 0)) AS sr_net_loss

FROM (SELECT *

FROM store_sales

WHERE ss_net_profit > 1 AND ss_net_paid > 0 AND ss_quantity > 0) AS t413,

(SELECT *

FROM store_returns

WHERE sr_return_amt > 10000) AS t414

WHERE t413.ss_ticket_number = t414.sr_ticket_number AND t413.ss_item_sk = t414.sr_item_sk) AS t416,

(SELECT *

FROM date_dim

WHERE d_year = 1999 AND d_moy = 11) AS t417

WHERE t416.ss_sold_date_sk = t417.d_date_sk

GROUP BY t416.ss_item_sk) AS t421

WHERE t421.return_rank <= 10 OR t421.currency_rank <= 10) AS t

ORDER BY channel, return_rank, currency_rank, item

LIMIT 100","CombineUnions,RemoveRedundantAliases"
49,sql_049.sql,"select case when (select count(*) 
                  from store_sales 
                  where ss_quantity between 1 and 20) > 320784
            then (select avg(ss_ext_discount_amt) 
                  from store_sales 
                  where ss_quantity between 1 and 20) 
            else (select avg(ss_net_profit)
                  from store_sales
                  where ss_quantity between 1 and 20) end bucket1 ,
       case when (select count(*)
                  from store_sales
                  where ss_quantity between 21 and 40) > 498796
            then (select avg(ss_ext_discount_amt)
                  from store_sales
                  where ss_quantity between 21 and 40) 
            else (select avg(ss_net_profit)
                  from store_sales
                  where ss_quantity between 21 and 40) end bucket2,
       case when (select count(*)
                  from store_sales
                  where ss_quantity between 41 and 60) > 1637521
            then (select avg(ss_ext_discount_amt)
                  from store_sales
                  where ss_quantity between 41 and 60)
            else (select avg(ss_net_profit)
                  from store_sales
                  where ss_quantity between 41 and 60) end bucket3,
       case when (select count(*)
                  from store_sales
                  where ss_quantity between 61 and 80) > 1340218
            then (select avg(ss_ext_discount_amt)
                  from store_sales
                  where ss_quantity between 61 and 80)
            else (select avg(ss_net_profit)
                  from store_sales
                  where ss_quantity between 61 and 80) end bucket4,
       case when (select count(*)
                  from store_sales
                  where ss_quantity between 81 and 100) > 2730070
            then (select avg(ss_ext_discount_amt)
                  from store_sales
                  where ss_quantity between 81 and 100)
            else (select avg(ss_net_profit)
                  from store_sales
                  where ss_quantity between 81 and 100) end bucket5
from reason
where r_reason_sk = 1
;","select case when (select count(*) 
                  from store_sales 
                  where ss_quantity between 1 and 20) > 320784
            then (select avg(ss_ext_discount_amt) 
                  from store_sales 
                  where ss_quantity between 1 and 20) 
            else (select avg(ss_net_profit)
                  from store_sales
                  where ss_quantity between 1 and 20) end bucket1 ,
       case when (select count(*)
                  from store_sales
                  where ss_quantity between 21 and 40) > 498796
            then (select avg(ss_ext_discount_amt)
                  from store_sales
                  where ss_quantity between 21 and 40) 
            else (select avg(ss_net_profit)
                  from store_sales
                  where ss_quantity between 21 and 40) end bucket2,
       case when (select count(*)
                  from store_sales
                  where ss_quantity between 41 and 60) > 1637521
            then (select avg(ss_ext_discount_amt)
                  from store_sales
                  where ss_quantity between 41 and 60)
            else (select avg(ss_net_profit)
                  from store_sales
                  where ss_quantity between 41 and 60) end bucket3,
       case when (select count(*)
                  from store_sales
                  where ss_quantity between 61 and 80) > 1340218
            then (select avg(ss_ext_discount_amt)
                  from store_sales
                  where ss_quantity between 61 and 80)
            else (select avg(ss_net_profit)
                  from store_sales
                  where ss_quantity between 61 and 80) end bucket4,
       case when (select count(*)
                  from store_sales
                  where ss_quantity between 81 and 100) > 2730070
            then (select avg(ss_ext_discount_amt)
                  from store_sales
                  where ss_quantity between 81 and 100)
            else (select avg(ss_net_profit)
                  from store_sales
                  where ss_quantity between 81 and 100) end bucket5
from reason
where r_reason_sk = 1
;",ConstantFolding,tpcds,"select case when (select count(*) 
                  from store_sales 
                  where ss_quantity between 1 and 20) > 12171089
            then (select avg(ss_ext_tax) 
                  from store_sales 
                  where ss_quantity between 1 and 20) 
            else (select avg(ss_net_paid)
                  from store_sales
                  where ss_quantity between 1 and 20) end bucket1 ,
       case when (select count(*)
                  from store_sales
                  where ss_quantity between 21 and 40) > 111772806
            then (select avg(ss_ext_tax)
                  from store_sales
                  where ss_quantity between 21 and 40) 
            else (select avg(ss_net_paid)
                  from store_sales
                  where ss_quantity between 21 and 40) end bucket2,
       case when (select count(*)
                  from store_sales
                  where ss_quantity between 41 and 60) > 23211533
            then (select avg(ss_ext_tax)
                  from store_sales
                  where ss_quantity between 41 and 60)
            else (select avg(ss_net_paid)
                  from store_sales
                  where ss_quantity between 41 and 60) end bucket3,
       case when (select count(*)
                  from store_sales
                  where ss_quantity between 61 and 80) > 56475617
            then (select avg(ss_ext_tax)
                  from store_sales
                  where ss_quantity between 61 and 80)
            else (select avg(ss_net_paid)
                  from store_sales
                  where ss_quantity between 61 and 80) end bucket4,
       case when (select count(*)
                  from store_sales
                  where ss_quantity between 81 and 100) > 43543186
            then (select avg(ss_ext_tax)
                  from store_sales
                  where ss_quantity between 81 and 100)
            else (select avg(ss_net_paid)
                  from store_sales
                  where ss_quantity between 81 and 100) end bucket5
from reason
where r_reason_sk = 1
",None
50,sql_050.sql,"with ss as
 (select ca_county,d_qoy, d_year,sum(ss_ext_sales_price) as store_sales
 from store_sales,date_dim,customer_address
 where ss_sold_date_sk = d_date_sk
  and ss_addr_sk=ca_address_sk
 group by ca_county,d_qoy, d_year),
 ws as
 (select ca_county,d_qoy, d_year,sum(ws_ext_sales_price) as web_sales
 from web_sales,date_dim,customer_address
 where ws_sold_date_sk = d_date_sk
  and ws_bill_addr_sk=ca_address_sk
 group by ca_county,d_qoy, d_year)
 select 
        ss1.ca_county
       ,ss1.d_year
       ,ws2.web_sales/ws1.web_sales web_q1_q2_increase
       ,ss2.store_sales/ss1.store_sales store_q1_q2_increase
       ,ws3.web_sales/ws2.web_sales web_q2_q3_increase
       ,ss3.store_sales/ss2.store_sales store_q2_q3_increase
 from
        ss ss1
       ,ss ss2
       ,ss ss3
       ,ws ws1
       ,ws ws2
       ,ws ws3
 where
    ss1.d_qoy = 1
    and ss1.d_year = 1998
    and ss1.ca_county = ss2.ca_county
    and ss2.d_qoy = 2
    and ss2.d_year = 1998
 and ss2.ca_county = ss3.ca_county
    and ss3.d_qoy = 3
    and ss3.d_year = 1998
    and ss1.ca_county = ws1.ca_county
    and ws1.d_qoy = 1
    and ws1.d_year = 1998
    and ws1.ca_county = ws2.ca_county
    and ws2.d_qoy = 2
    and ws2.d_year = 1998
    and ws1.ca_county = ws3.ca_county
    and ws3.d_qoy = 3
    and ws3.d_year =1998
    and case when ws1.web_sales > 0 then ws2.web_sales/ws1.web_sales else null end 
       > case when ss1.store_sales > 0 then ss2.store_sales/ss1.store_sales else null end
    and case when ws2.web_sales > 0 then ws3.web_sales/ws2.web_sales else null end
       > case when ss2.store_sales > 0 then ss3.store_sales/ss2.store_sales else null end
 order by ss1.d_year;","SELECT t1.ca_county, t1.d_year, t13.web_sales / t10.web_sales AS web_q1_q2_increase, t4.store_sales / t1.store_sales AS store_q1_q2_increase, t16.web_sales / t13.web_sales AS web_q2_q3_increase, t7.store_sales / t4.store_sales AS store_q2_q3_increase FROM (SELECT customer_address.ca_county, date_dim.d_qoy, date_dim.d_year, SUM(store_sales.ss_ext_sales_price) AS store_sales FROM store_sales, date_dim, customer_address WHERE store_sales.ss_sold_date_sk = date_dim.d_date_sk AND store_sales.ss_addr_sk = customer_address.ca_address_sk GROUP BY customer_address.ca_county, date_dim.d_qoy, date_dim.d_year) AS t1, (SELECT customer_address0.ca_county, date_dim0.d_qoy, date_dim0.d_year, SUM(store_sales0.ss_ext_sales_price) AS store_sales FROM store_sales AS store_sales0, date_dim AS date_dim0, customer_address AS customer_address0 WHERE store_sales0.ss_sold_date_sk = date_dim0.d_date_sk AND store_sales0.ss_addr_sk = customer_address0.ca_address_sk GROUP BY customer_address0.ca_county, date_dim0.d_qoy, date_dim0.d_year) AS t4, (SELECT customer_address1.ca_county, date_dim1.d_qoy, date_dim1.d_year, SUM(store_sales1.ss_ext_sales_price) AS store_sales FROM store_sales AS store_sales1, date_dim AS date_dim1, customer_address AS customer_address1 WHERE store_sales1.ss_sold_date_sk = date_dim1.d_date_sk AND store_sales1.ss_addr_sk = customer_address1.ca_address_sk GROUP BY customer_address1.ca_county, date_dim1.d_qoy, date_dim1.d_year) AS t7, (SELECT customer_address2.ca_county, date_dim2.d_qoy, date_dim2.d_year, SUM(web_sales.ws_ext_sales_price) AS web_sales FROM web_sales, date_dim AS date_dim2, customer_address AS customer_address2 WHERE web_sales.ws_sold_date_sk = date_dim2.d_date_sk AND web_sales.ws_bill_addr_sk = customer_address2.ca_address_sk GROUP BY customer_address2.ca_county, date_dim2.d_qoy, date_dim2.d_year) AS t10, (SELECT customer_address3.ca_county, date_dim3.d_qoy, date_dim3.d_year, SUM(web_sales0.ws_ext_sales_price) AS web_sales FROM web_sales AS web_sales0, date_dim AS date_dim3, customer_address AS customer_address3 WHERE web_sales0.ws_sold_date_sk = date_dim3.d_date_sk AND web_sales0.ws_bill_addr_sk = customer_address3.ca_address_sk GROUP BY customer_address3.ca_county, date_dim3.d_qoy, date_dim3.d_year) AS t13, (SELECT customer_address4.ca_county, date_dim4.d_qoy, date_dim4.d_year, SUM(web_sales1.ws_ext_sales_price) AS web_sales FROM web_sales AS web_sales1, date_dim AS date_dim4, customer_address AS customer_address4 WHERE web_sales1.ws_sold_date_sk = date_dim4.d_date_sk AND web_sales1.ws_bill_addr_sk = customer_address4.ca_address_sk GROUP BY customer_address4.ca_county, date_dim4.d_qoy, date_dim4.d_year) AS t16 WHERE t1.d_qoy = 1 AND t1.d_year = 1998 AND (t1.ca_county = t4.ca_county AND t4.d_qoy = 2) AND (t4.d_year = 1998 AND t4.ca_county = t7.ca_county AND (t7.d_qoy = 3 AND (t7.d_year = 1998 AND t1.ca_county = t10.ca_county))) AND (t10.d_qoy = 1 AND t10.d_year = 1998 AND (t10.ca_county = t13.ca_county AND (t13.d_qoy = 2 AND t13.d_year = 1998)) AND (t10.ca_county = t16.ca_county AND t16.d_qoy = 3 AND (t16.d_year = 1998 AND (CASE WHEN t10.web_sales > 0 THEN CAST(t13.web_sales / t10.web_sales AS DECIMAL(17, 2)) ELSE NULL END > CASE WHEN t1.store_sales > 0 THEN CAST(t4.store_sales / t1.store_sales AS DECIMAL(17, 2)) ELSE NULL END AND CASE WHEN t13.web_sales > 0 THEN CAST(t16.web_sales / t13.web_sales AS DECIMAL(17, 2)) ELSE NULL END > CASE WHEN t4.store_sales > 0 THEN CAST(t7.store_sales / t4.store_sales AS DECIMAL(17, 2)) ELSE NULL END)))) ORDER BY t1.d_year",RemoveNoopOperators,tpcds,"with ss as
 (select ca_county,d_qoy, d_year,sum(ss_ext_sales_price) as store_sales
 from store_sales,date_dim,customer_address
 where ss_sold_date_sk = d_date_sk
  and ss_addr_sk=ca_address_sk
 group by ca_county,d_qoy, d_year),
 ws as
 (select ca_county,d_qoy, d_year,sum(ws_ext_sales_price) as web_sales
 from web_sales,date_dim,customer_address
 where ws_sold_date_sk = d_date_sk
  and ws_bill_addr_sk=ca_address_sk
 group by ca_county,d_qoy, d_year)
 select 
        ss1.ca_county
       ,ss1.d_year
       ,ws2.web_sales/ws1.web_sales web_q1_q2_increase
       ,ss2.store_sales/ss1.store_sales store_q1_q2_increase
       ,ws3.web_sales/ws2.web_sales web_q2_q3_increase
       ,ss3.store_sales/ss2.store_sales store_q2_q3_increase
 from
        ss ss1
       ,ss ss2
       ,ss ss3
       ,ws ws1
       ,ws ws2
       ,ws ws3
 where
    ss1.d_qoy = 1
    and ss1.d_year = 1998
    and ss1.ca_county = ss2.ca_county
    and ss2.d_qoy = 2
    and ss2.d_year = 1998
 and ss2.ca_county = ss3.ca_county
    and ss3.d_qoy = 3
    and ss3.d_year = 1998
    and ss1.ca_county = ws1.ca_county
    and ws1.d_qoy = 1
    and ws1.d_year = 1998
    and ws1.ca_county = ws2.ca_county
    and ws2.d_qoy = 2
    and ws2.d_year = 1998
    and ws1.ca_county = ws3.ca_county
    and ws3.d_qoy = 3
    and ws3.d_year =1998
    and case when ws1.web_sales > 0 then ws2.web_sales/ws1.web_sales else null end 
       > case when ss1.store_sales > 0 then ss2.store_sales/ss1.store_sales else null end
    and case when ws2.web_sales > 0 then ws3.web_sales/ws2.web_sales else null end
       > case when ss2.store_sales > 0 then ss3.store_sales/ss2.store_sales else null end
 order by ss1.d_year;","RemoveNoopOperators,RemoveRedundantAliases"
51,sql_051.sql,"with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum(ss_ext_list_price-ss_ext_discount_amt) year_total
       ,'s' sale_type
 from customer
     ,store_sales
     ,date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag 
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year 
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum(ws_ext_list_price-ws_ext_discount_amt) year_total
       ,'w' sale_type
 from customer
     ,web_sales
     ,date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag 
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
         )
  select  
                  t_s_secyear.customer_id
                 ,t_s_secyear.customer_first_name
                 ,t_s_secyear.customer_last_name
                 ,t_s_secyear.customer_birth_country
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
         and t_s_firstyear.customer_id = t_w_secyear.customer_id
         and t_s_firstyear.customer_id = t_w_firstyear.customer_id
         and t_s_firstyear.sale_type = 's'
         and t_w_firstyear.sale_type = 'w'
         and t_s_secyear.sale_type = 's'
         and t_w_secyear.sale_type = 'w'
         and t_s_firstyear.dyear = 1998
         and t_s_secyear.dyear = 1998+1
         and t_w_firstyear.dyear = 1998
         and t_w_secyear.dyear = 1998+1
         and t_s_firstyear.year_total > 0
         and t_w_firstyear.year_total > 0
         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else 0.0 end
             > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else 0.0 end
 order by t_s_secyear.customer_id
         ,t_s_secyear.customer_first_name
         ,t_s_secyear.customer_last_name
         ,t_s_secyear.customer_birth_country
limit 100;","SELECT t16.customer_id, t16.customer_first_name, t16.customer_last_name, t16.customer_birth_country FROM (SELECT customer.c_customer_id AS customer_id, customer.c_first_name AS customer_first_name, customer.c_last_name AS customer_last_name, customer.c_preferred_cust_flag AS customer_preferred_cust_flag, customer.c_birth_country AS customer_birth_country, customer.c_login AS customer_login, customer.c_email_address AS customer_email_address, date_dim.d_year AS dyear, SUM(store_sales.ss_ext_list_price - store_sales.ss_ext_discount_amt) AS year_total, 's' AS sale_type FROM customer, store_sales, date_dim WHERE customer.c_customer_sk = store_sales.ss_customer_sk AND store_sales.ss_sold_date_sk = date_dim.d_date_sk GROUP BY customer.c_customer_id, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_country, customer.c_login, customer.c_email_address, date_dim.d_year UNION ALL SELECT customer0.c_customer_id AS customer_id, customer0.c_first_name AS customer_first_name, customer0.c_last_name AS customer_last_name, customer0.c_preferred_cust_flag AS customer_preferred_cust_flag, customer0.c_birth_country AS customer_birth_country, customer0.c_login AS customer_login, customer0.c_email_address AS customer_email_address, date_dim0.d_year AS dyear, SUM(web_sales.ws_ext_list_price - web_sales.ws_ext_discount_amt) AS year_total, 'w' AS sale_type FROM customer AS customer0, web_sales, date_dim AS date_dim0 WHERE customer0.c_customer_sk = web_sales.ws_bill_customer_sk AND web_sales.ws_sold_date_sk = date_dim0.d_date_sk GROUP BY customer0.c_customer_id, customer0.c_first_name, customer0.c_last_name, customer0.c_preferred_cust_flag, customer0.c_birth_country, customer0.c_login, customer0.c_email_address, date_dim0.d_year) AS t7, (SELECT customer1.c_customer_id AS customer_id, customer1.c_first_name AS customer_first_name, customer1.c_last_name AS customer_last_name, customer1.c_preferred_cust_flag AS customer_preferred_cust_flag, customer1.c_birth_country AS customer_birth_country, customer1.c_login AS customer_login, customer1.c_email_address AS customer_email_address, date_dim1.d_year AS dyear, SUM(store_sales0.ss_ext_list_price - store_sales0.ss_ext_discount_amt) AS year_total, 's' AS sale_type FROM customer AS customer1, store_sales AS store_sales0, date_dim AS date_dim1 WHERE customer1.c_customer_sk = store_sales0.ss_customer_sk AND store_sales0.ss_sold_date_sk = date_dim1.d_date_sk GROUP BY customer1.c_customer_id, customer1.c_first_name, customer1.c_last_name, customer1.c_preferred_cust_flag, customer1.c_birth_country, customer1.c_login, customer1.c_email_address, date_dim1.d_year UNION ALL SELECT customer2.c_customer_id AS customer_id, customer2.c_first_name AS customer_first_name, customer2.c_last_name AS customer_last_name, customer2.c_preferred_cust_flag AS customer_preferred_cust_flag, customer2.c_birth_country AS customer_birth_country, customer2.c_login AS customer_login, customer2.c_email_address AS customer_email_address, date_dim2.d_year AS dyear, SUM(web_sales0.ws_ext_list_price - web_sales0.ws_ext_discount_amt) AS year_total, 'w' AS sale_type FROM customer AS customer2, web_sales AS web_sales0, date_dim AS date_dim2 WHERE customer2.c_customer_sk = web_sales0.ws_bill_customer_sk AND web_sales0.ws_sold_date_sk = date_dim2.d_date_sk GROUP BY customer2.c_customer_id, customer2.c_first_name, customer2.c_last_name, customer2.c_preferred_cust_flag, customer2.c_birth_country, customer2.c_login, customer2.c_email_address, date_dim2.d_year) AS t16, (SELECT customer3.c_customer_id AS customer_id, customer3.c_first_name AS customer_first_name, customer3.c_last_name AS customer_last_name, customer3.c_preferred_cust_flag AS customer_preferred_cust_flag, customer3.c_birth_country AS customer_birth_country, customer3.c_login AS customer_login, customer3.c_email_address AS customer_email_address, date_dim3.d_year AS dyear, SUM(store_sales1.ss_ext_list_price - store_sales1.ss_ext_discount_amt) AS year_total, 's' AS sale_type FROM customer AS customer3, store_sales AS store_sales1, date_dim AS date_dim3 WHERE customer3.c_customer_sk = store_sales1.ss_customer_sk AND store_sales1.ss_sold_date_sk = date_dim3.d_date_sk GROUP BY customer3.c_customer_id, customer3.c_first_name, customer3.c_last_name, customer3.c_preferred_cust_flag, customer3.c_birth_country, customer3.c_login, customer3.c_email_address, date_dim3.d_year UNION ALL SELECT customer4.c_customer_id AS customer_id, customer4.c_first_name AS customer_first_name, customer4.c_last_name AS customer_last_name, customer4.c_preferred_cust_flag AS customer_preferred_cust_flag, customer4.c_birth_country AS customer_birth_country, customer4.c_login AS customer_login, customer4.c_email_address AS customer_email_address, date_dim4.d_year AS dyear, SUM(web_sales1.ws_ext_list_price - web_sales1.ws_ext_discount_amt) AS year_total, 'w' AS sale_type FROM customer AS customer4, web_sales AS web_sales1, date_dim AS date_dim4 WHERE customer4.c_customer_sk = web_sales1.ws_bill_customer_sk AND web_sales1.ws_sold_date_sk = date_dim4.d_date_sk GROUP BY customer4.c_customer_id, customer4.c_first_name, customer4.c_last_name, customer4.c_preferred_cust_flag, customer4.c_birth_country, customer4.c_login, customer4.c_email_address, date_dim4.d_year) AS t25, (SELECT customer5.c_customer_id AS customer_id, customer5.c_first_name AS customer_first_name, customer5.c_last_name AS customer_last_name, customer5.c_preferred_cust_flag AS customer_preferred_cust_flag, customer5.c_birth_country AS customer_birth_country, customer5.c_login AS customer_login, customer5.c_email_address AS customer_email_address, date_dim5.d_year AS dyear, SUM(store_sales2.ss_ext_list_price - store_sales2.ss_ext_discount_amt) AS year_total, 's' AS sale_type FROM customer AS customer5, store_sales AS store_sales2, date_dim AS date_dim5 WHERE customer5.c_customer_sk = store_sales2.ss_customer_sk AND store_sales2.ss_sold_date_sk = date_dim5.d_date_sk GROUP BY customer5.c_customer_id, customer5.c_first_name, customer5.c_last_name, customer5.c_preferred_cust_flag, customer5.c_birth_country, customer5.c_login, customer5.c_email_address, date_dim5.d_year UNION ALL SELECT customer6.c_customer_id AS customer_id, customer6.c_first_name AS customer_first_name, customer6.c_last_name AS customer_last_name, customer6.c_preferred_cust_flag AS customer_preferred_cust_flag, customer6.c_birth_country AS customer_birth_country, customer6.c_login AS customer_login, customer6.c_email_address AS customer_email_address, date_dim6.d_year AS dyear, SUM(web_sales2.ws_ext_list_price - web_sales2.ws_ext_discount_amt) AS year_total, 'w' AS sale_type FROM customer AS customer6, web_sales AS web_sales2, date_dim AS date_dim6 WHERE customer6.c_customer_sk = web_sales2.ws_bill_customer_sk AND web_sales2.ws_sold_date_sk = date_dim6.d_date_sk GROUP BY customer6.c_customer_id, customer6.c_first_name, customer6.c_last_name, customer6.c_preferred_cust_flag, customer6.c_birth_country, customer6.c_login, customer6.c_email_address, date_dim6.d_year) AS t34 WHERE t16.customer_id = t7.customer_id AND (t7.customer_id = t34.customer_id AND t7.customer_id = t25.customer_id) AND (t7.sale_type = 's' AND t25.sale_type = 'w' AND (t16.sale_type = 's' AND t34.sale_type = 'w')) AND (t7.dyear = 1998 AND (t16.dyear = 1998 + 1 AND t25.dyear = 1998) AND (t34.dyear = 1998 + 1 AND t7.year_total > 0 AND (t25.year_total > 0 AND CASE WHEN t7.year_total > 0 THEN CASE WHEN t25.year_total > 0 THEN t34.year_total / t25.year_total > t16.year_total / t7.year_total ELSE 0.0 > t16.year_total / t7.year_total END ELSE CASE WHEN t25.year_total > 0 THEN t34.year_total / t25.year_total > 0.0 ELSE FALSE END END))) ORDER BY t16.customer_id, t16.customer_first_name, t16.customer_last_name, t16.customer_birth_country LIMIT 100",RemoveNoopOperators,tpcds,"SELECT customer_id0 AS customer_id, customer_first_name0 AS customer_first_name, customer_last_name0 AS customer_last_name, customer_email_address0 AS customer_email_address

FROM (SELECT *

FROM (VALUES (NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)) AS t (customer_id, customer_first_name, customer_last_name, customer_preferred_cust_flag, customer_birth_country, customer_login, customer_email_address, dyear, year_total, sale_type, customer_id0, customer_first_name0, customer_last_name0, customer_preferred_cust_flag0, customer_birth_country0, customer_login0, customer_email_address0, dyear0, year_total0, sale_type0, customer_id1, customer_first_name1, customer_last_name1, customer_preferred_cust_flag1, customer_birth_country1, customer_login1, customer_email_address1, dyear1, year_total1, sale_type1, customer_id2, customer_first_name2, customer_last_name2, customer_preferred_cust_flag2, customer_birth_country2, customer_login2, customer_email_address2, dyear2, year_total2, sale_type2)

WHERE 1 = 0

UNION ALL

SELECT t7023.customer_id, t7023.customer_first_name, t7023.customer_last_name, t7023.customer_preferred_cust_flag, t7023.customer_birth_country, t7023.customer_login, t7023.customer_email_address, t7023.dyear, t7023.year_total, t7023.sale_type, t7023.customer_id0, t7023.customer_first_name0, t7023.customer_last_name0, t7023.customer_preferred_cust_flag0, t7023.customer_birth_country0, t7023.customer_login0, t7023.customer_email_address0, t7023.dyear0, t7023.year_total0, t7023.sale_type0, t7023.customer_id1, t7023.customer_first_name1, t7023.customer_last_name1, t7023.customer_preferred_cust_flag1, t7023.customer_birth_country1, t7023.customer_login1, t7023.customer_email_address1, t7023.dyear1, t7023.year_total1, t7023.sale_type1, t7026.customer_id AS customer_id2, t7026.customer_first_name AS customer_first_name2, t7026.customer_last_name AS customer_last_name2, t7026.customer_preferred_cust_flag AS customer_preferred_cust_flag2, t7026.customer_birth_country AS customer_birth_country2, t7026.customer_login AS customer_login2, t7026.customer_email_address AS customer_email_address2, t7026.dyear AS dyear2, t7026.year_total AS year_total2, 'w' AS sale_type2

FROM (SELECT *

FROM (VALUES (NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)) AS t (customer_id, customer_first_name, customer_last_name, customer_preferred_cust_flag, customer_birth_country, customer_login, customer_email_address, dyear, year_total, sale_type, customer_id0, customer_first_name0, customer_last_name0, customer_preferred_cust_flag0, customer_birth_country0, customer_login0, customer_email_address0, dyear0, year_total0, sale_type0, customer_id1, customer_first_name1, customer_last_name1, customer_preferred_cust_flag1, customer_birth_country1, customer_login1, customer_email_address1, dyear1, year_total1, sale_type1)

WHERE 1 = 0

UNION ALL

SELECT t7017.customer_id, t7017.customer_first_name, t7017.customer_last_name, t7017.customer_preferred_cust_flag, t7017.customer_birth_country, t7017.customer_login, t7017.customer_email_address, t7017.dyear, t7017.year_total, t7017.sale_type, t7017.customer_id0, t7017.customer_first_name0, t7017.customer_last_name0, t7017.customer_preferred_cust_flag0, t7017.customer_birth_country0, t7017.customer_login0, t7017.customer_email_address0, t7017.dyear0, t7017.year_total0, t7017.sale_type0, t7021.customer_id AS customer_id1, t7021.customer_first_name AS customer_first_name1, t7021.customer_last_name AS customer_last_name1, t7021.customer_preferred_cust_flag AS customer_preferred_cust_flag1, t7021.customer_birth_country AS customer_birth_country1, t7021.customer_login AS customer_login1, t7021.customer_email_address AS customer_email_address1, t7021.dyear AS dyear1, t7021.year_total AS year_total1, 'w' AS sale_type1

FROM (SELECT *

FROM (SELECT t7007.customer_id, t7007.customer_first_name, t7007.customer_last_name, t7007.customer_preferred_cust_flag, t7007.customer_birth_country, t7007.customer_login, t7007.customer_email_address, t7007.dyear, t7007.year_total, 's' AS sale_type, t7010.customer_id AS customer_id0, t7010.customer_first_name AS customer_first_name0, t7010.customer_last_name AS customer_last_name0, t7010.customer_preferred_cust_flag AS customer_preferred_cust_flag0, t7010.customer_birth_country AS customer_birth_country0, t7010.customer_login AS customer_login0, t7010.customer_email_address AS customer_email_address0, t7010.dyear AS dyear0, t7010.year_total AS year_total0, 's' AS sale_type0

FROM (SELECT customer1743.c_customer_id AS customer_id, customer1743.c_first_name AS customer_first_name, customer1743.c_last_name AS customer_last_name, customer1743.c_preferred_cust_flag AS customer_preferred_cust_flag, customer1743.c_birth_country AS customer_birth_country, customer1743.c_login AS customer_login, customer1743.c_email_address AS customer_email_address, t7004.d_year AS dyear, SUM(store_sales871.ss_ext_list_price - store_sales871.ss_ext_discount_amt) AS year_total

FROM customer AS customer1743

INNER JOIN store_sales AS store_sales871 ON customer1743.c_customer_sk = store_sales871.ss_customer_sk

INNER JOIN (SELECT *

FROM date_dim

WHERE d_year = 1998) AS t7004 ON store_sales871.ss_sold_date_sk = t7004.d_date_sk

GROUP BY customer1743.c_customer_id, customer1743.c_first_name, customer1743.c_last_name, customer1743.c_preferred_cust_flag, customer1743.c_birth_country, customer1743.c_login, customer1743.c_email_address, t7004.d_year

HAVING SUM(store_sales871.ss_ext_list_price - store_sales871.ss_ext_discount_amt) > 0) AS t7007

INNER JOIN (SELECT customer1744.c_customer_id AS customer_id, customer1744.c_first_name AS customer_first_name, customer1744.c_last_name AS customer_last_name, customer1744.c_preferred_cust_flag AS customer_preferred_cust_flag, customer1744.c_birth_country AS customer_birth_country, customer1744.c_login AS customer_login, customer1744.c_email_address AS customer_email_address, t7008.d_year AS dyear, SUM(store_sales872.ss_ext_list_price - store_sales872.ss_ext_discount_amt) AS year_total

FROM customer AS customer1744

INNER JOIN store_sales AS store_sales872 ON customer1744.c_customer_sk = store_sales872.ss_customer_sk

INNER JOIN (SELECT *

FROM date_dim

WHERE d_year = 1998 + 1) AS t7008 ON store_sales872.ss_sold_date_sk = t7008.d_date_sk

GROUP BY customer1744.c_customer_id, customer1744.c_first_name, customer1744.c_last_name, customer1744.c_preferred_cust_flag, customer1744.c_birth_country, customer1744.c_login, customer1744.c_email_address, t7008.d_year) AS t7010 ON t7007.customer_id = t7010.customer_id

UNION ALL

SELECT *

FROM (VALUES (NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)) AS t (customer_id, customer_first_name, customer_last_name, customer_preferred_cust_flag, customer_birth_country, customer_login, customer_email_address, dyear, year_total, sale_type, customer_id0, customer_first_name0, customer_last_name0, customer_preferred_cust_flag0, customer_birth_country0, customer_login0, customer_email_address0, dyear0, year_total0, sale_type0)

WHERE 1 = 0) AS t

UNION ALL

SELECT *

FROM (SELECT *

FROM (VALUES (NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)) AS t (customer_id, customer_first_name, customer_last_name, customer_preferred_cust_flag, customer_birth_country, customer_login, customer_email_address, dyear, year_total, sale_type, customer_id0, customer_first_name0, customer_last_name0, customer_preferred_cust_flag0, customer_birth_country0, customer_login0, customer_email_address0, dyear0, year_total0, sale_type0)

WHERE 1 = 0

UNION ALL

SELECT *

FROM (VALUES (NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)) AS t (customer_id, customer_first_name, customer_last_name, customer_preferred_cust_flag, customer_birth_country, customer_login, customer_email_address, dyear, year_total, sale_type, customer_id0, customer_first_name0, customer_last_name0, customer_preferred_cust_flag0, customer_birth_country0, customer_login0, customer_email_address0, dyear0, year_total0, sale_type0)

WHERE 1 = 0) AS t) AS t7017

INNER JOIN (SELECT customer1745.c_customer_id AS customer_id, customer1745.c_first_name AS customer_first_name, customer1745.c_last_name AS customer_last_name, customer1745.c_preferred_cust_flag AS customer_preferred_cust_flag, customer1745.c_birth_country AS customer_birth_country, customer1745.c_login AS customer_login, customer1745.c_email_address AS customer_email_address, t7018.d_year AS dyear, SUM(web_sales871.ws_ext_list_price - web_sales871.ws_ext_discount_amt) AS year_total

FROM customer AS customer1745

INNER JOIN web_sales AS web_sales871 ON customer1745.c_customer_sk = web_sales871.ws_bill_customer_sk

INNER JOIN (SELECT *

FROM date_dim

WHERE d_year = 1998) AS t7018 ON web_sales871.ws_sold_date_sk = t7018.d_date_sk

GROUP BY customer1745.c_customer_id, customer1745.c_first_name, customer1745.c_last_name, customer1745.c_preferred_cust_flag, customer1745.c_birth_country, customer1745.c_login, customer1745.c_email_address, t7018.d_year

HAVING SUM(web_sales871.ws_ext_list_price - web_sales871.ws_ext_discount_amt) > 0) AS t7021 ON t7017.customer_id = t7021.customer_id) AS t7023

INNER JOIN (SELECT customer1746.c_customer_id AS customer_id, customer1746.c_first_name AS customer_first_name, customer1746.c_last_name AS customer_last_name, customer1746.c_preferred_cust_flag AS customer_preferred_cust_flag, customer1746.c_birth_country AS customer_birth_country, customer1746.c_login AS customer_login, customer1746.c_email_address AS customer_email_address, t7024.d_year AS dyear, SUM(web_sales872.ws_ext_list_price - web_sales872.ws_ext_discount_amt) AS year_total

FROM customer AS customer1746

INNER JOIN web_sales AS web_sales872 ON customer1746.c_customer_sk = web_sales872.ws_bill_customer_sk

INNER JOIN (SELECT *

FROM date_dim

WHERE d_year = 1998 + 1) AS t7024 ON web_sales872.ws_sold_date_sk = t7024.d_date_sk

GROUP BY customer1746.c_customer_id, customer1746.c_first_name, customer1746.c_last_name, customer1746.c_preferred_cust_flag, customer1746.c_birth_country, customer1746.c_login, customer1746.c_email_address, t7024.d_year) AS t7026 ON t7023.customer_id = t7026.customer_id AND CASE WHEN t7023.year_total > 0 THEN CASE WHEN t7023.year_total1 > 0 THEN t7026.year_total / t7023.year_total1 > t7023.year_total0 / t7023.year_total ELSE 0.0 > t7023.year_total0 / t7023.year_total END ELSE CASE WHEN t7023.year_total1 > 0 THEN t7026.year_total / t7023.year_total1 > 0.0 ELSE FALSE END END) AS t7028

ORDER BY customer_id0, customer_first_name0, customer_last_name0, customer_email_address0

LIMIT 100",ConstantFolding
52,sql_052.sql,"select  ss_customer_sk
            ,sum(act_sales) sumsales
      from (select ss_item_sk
                  ,ss_ticket_number
                  ,ss_customer_sk
                  ,case when sr_return_quantity is not null then (ss_quantity-sr_return_quantity)*ss_sales_price
                                                            else (ss_quantity*ss_sales_price) end act_sales
            from store_sales left outer join store_returns on (sr_item_sk = ss_item_sk
                                                               and sr_ticket_number = ss_ticket_number)
                ,reason
            where sr_reason_sk = r_reason_sk
              and r_reason_desc = 'reason 49') t
      group by ss_customer_sk
      order by sumsales, ss_customer_sk
limit 100;","select  ss_customer_sk
            ,sum(act_sales) sumsales
      from (select ss_item_sk
                  ,ss_ticket_number
                  ,ss_customer_sk
                  ,case when sr_return_quantity is not null then (ss_quantity-sr_return_quantity)*ss_sales_price
                                                            else (ss_quantity*ss_sales_price) end act_sales
            from store_sales left outer join store_returns on (sr_item_sk = ss_item_sk
                                                               and sr_ticket_number = ss_ticket_number)
                ,reason
            where sr_reason_sk = r_reason_sk
              and r_reason_desc = 'reason 49') t
      group by ss_customer_sk
      order by sumsales, ss_customer_sk
limit 100;",None,tpcds,"select  ss_customer_sk
            ,sum(act_sales) sumsales
      from (select ss_item_sk
                  ,ss_ticket_number
                  ,ss_customer_sk
                  ,case when sr_return_quantity is not null then (ss_quantity-sr_return_quantity)*ss_sales_price
                                                            else (ss_quantity*ss_sales_price) end act_sales
            from store_sales left outer join store_returns on (sr_item_sk = ss_item_sk
                                                               and sr_ticket_number = ss_ticket_number)
                ,reason
            where sr_reason_sk = r_reason_sk
              and r_reason_desc = 'No service location in my area') t
      group by ss_customer_sk
      order by sumsales, ss_customer_sk
limit 100",EliminateOuterJoin
53,sql_053.sql,"select   
     i_item_id
    ,i_item_desc
    ,s_store_id
    ,s_store_name
    ,avg(ss_quantity)        as store_sales_quantity
    ,avg(sr_return_quantity) as store_returns_quantity
    ,avg(cs_quantity)        as catalog_sales_quantity
 from
    store_sales
   ,store_returns
   ,catalog_sales
   ,date_dim             d1
   ,date_dim             d2
   ,date_dim             d3
   ,store
   ,item
 where
     d1.d_moy               = 4 
 and d1.d_year              = 2000
 and d1.d_date_sk           = ss_sold_date_sk
 and i_item_sk              = ss_item_sk
 and s_store_sk             = ss_store_sk
 and ss_customer_sk         = sr_customer_sk
 and ss_item_sk             = sr_item_sk
 and ss_ticket_number       = sr_ticket_number
 and sr_returned_date_sk    = d2.d_date_sk
 and d2.d_moy               between 4 and  4 + 3 
 and d2.d_year              = 2000
 and sr_customer_sk         = cs_bill_customer_sk
 and sr_item_sk             = cs_item_sk
 and cs_sold_date_sk        = d3.d_date_sk     
 and d3.d_year              in (2000,2000+1,2000+2)
 group by
    i_item_id
   ,i_item_desc
   ,s_store_id
   ,s_store_name
 order by
    i_item_id 
   ,i_item_desc
   ,s_store_id
   ,s_store_name
 limit 100;","SELECT item.i_item_id, item.i_item_desc, store.s_store_id, store.s_store_name, AVG(store_sales.ss_quantity) AS store_sales_quantity, AVG(store_returns.sr_return_quantity) AS store_returns_quantity, AVG(catalog_sales.cs_quantity) AS catalog_sales_quantity FROM store_sales, store_returns, catalog_sales, date_dim, date_dim AS date_dim0, date_dim AS date_dim1, store, item WHERE date_dim.d_moy = 4 AND date_dim.d_year = 2000 AND (date_dim.d_date_sk = store_sales.ss_sold_date_sk AND item.i_item_sk = store_sales.ss_item_sk) AND (store.s_store_sk = store_sales.ss_store_sk AND store_sales.ss_customer_sk = store_returns.sr_customer_sk AND (store_sales.ss_item_sk = store_returns.sr_item_sk AND store_sales.ss_ticket_number = store_returns.sr_ticket_number)) AND (store_returns.sr_returned_date_sk = date_dim0.d_date_sk AND date_dim0.d_moy >= 4 AND (date_dim0.d_moy <= 4 + 3 AND date_dim0.d_year = 2000) AND (store_returns.sr_customer_sk = catalog_sales.cs_bill_customer_sk AND store_returns.sr_item_sk = catalog_sales.cs_item_sk AND (catalog_sales.cs_sold_date_sk = date_dim1.d_date_sk AND (date_dim1.d_year = 2000 OR date_dim1.d_year = 2000 + 1 OR date_dim1.d_year = 2000 + 2)))) GROUP BY store.s_store_id, store.s_store_name, item.i_item_id, item.i_item_desc ORDER BY item.i_item_id, item.i_item_desc, store.s_store_id, store.s_store_name LIMIT 100",None,tpcds,"SELECT t909.i_item_id, t909.i_item_desc, t908.s_store_id, t908.s_store_name, MIN(t908.store_sales_quantity) AS store_sales_quantity, MIN(t908.store_returns_quantity) AS store_returns_quantity, MIN(t908.catalog_sales_quantity) AS catalog_sales_quantity

FROM (SELECT t905.ss_item_sk, t906.s_store_id, t906.s_store_name, MIN(t905.store_sales_quantity) AS store_sales_quantity, MIN(t905.store_returns_quantity) AS store_returns_quantity, MIN(t905.catalog_sales_quantity) AS catalog_sales_quantity

FROM (SELECT t901.ss_item_sk, t901.ss_store_sk, MIN(t901.store_sales_quantity) AS store_sales_quantity, MIN(t901.store_returns_quantity) AS store_returns_quantity, MIN(t901.catalog_sales_quantity) AS catalog_sales_quantity

FROM (SELECT t897.ss_item_sk, t897.ss_store_sk, t897.cs_sold_date_sk, MIN(t897.store_sales_quantity) AS store_sales_quantity, MIN(t897.store_returns_quantity) AS store_returns_quantity, MIN(t897.catalog_sales_quantity) AS catalog_sales_quantity

FROM (SELECT t893.ss_item_sk, t893.ss_store_sk, t893.sr_returned_date_sk, t893.cs_sold_date_sk, MIN(t893.store_sales_quantity) AS store_sales_quantity, MIN(t893.store_returns_quantity) AS store_returns_quantity, MIN(t893.catalog_sales_quantity) AS catalog_sales_quantity

FROM (SELECT t890.ss_sold_date_sk, t890.ss_item_sk, t890.ss_store_sk, t890.sr_returned_date_sk, t891.cs_sold_date_sk, MIN(t890.store_sales_quantity) AS store_sales_quantity, MIN(t890.store_returns_quantity) AS store_returns_quantity, MIN(t891.catalog_sales_quantity) AS catalog_sales_quantity

FROM (SELECT t887.ss_sold_date_sk, t887.ss_item_sk, t887.ss_store_sk, t888.sr_returned_date_sk, t888.sr_item_sk, t888.sr_customer_sk, MIN(t887.store_sales_quantity) AS store_sales_quantity, MIN(t888.store_returns_quantity) AS store_returns_quantity

FROM (SELECT ss_sold_date_sk, ss_item_sk, ss_customer_sk, ss_store_sk, ss_ticket_number, MIN(ss_quantity) AS store_sales_quantity

FROM store_sales

GROUP BY ss_sold_date_sk, ss_item_sk, ss_customer_sk, ss_store_sk, ss_ticket_number) AS t887,

(SELECT sr_returned_date_sk, sr_item_sk, sr_customer_sk, sr_ticket_number, MIN(sr_return_quantity) AS store_returns_quantity

FROM store_returns

GROUP BY sr_returned_date_sk, sr_item_sk, sr_customer_sk, sr_ticket_number) AS t888

WHERE t887.ss_customer_sk = t888.sr_customer_sk AND t887.ss_item_sk = t888.sr_item_sk AND t887.ss_ticket_number = t888.sr_ticket_number

GROUP BY t887.ss_sold_date_sk, t887.ss_item_sk, t887.ss_store_sk, t888.sr_returned_date_sk, t888.sr_item_sk, t888.sr_customer_sk) AS t890,

(SELECT cs_sold_date_sk, cs_bill_customer_sk, cs_item_sk, MIN(cs_quantity) AS catalog_sales_quantity

FROM catalog_sales

GROUP BY cs_sold_date_sk, cs_bill_customer_sk, cs_item_sk) AS t891

WHERE t890.sr_customer_sk = t891.cs_bill_customer_sk AND t890.sr_item_sk = t891.cs_item_sk

GROUP BY t890.ss_sold_date_sk, t890.ss_item_sk, t890.ss_store_sk, t890.sr_returned_date_sk, t891.cs_sold_date_sk) AS t893,

(SELECT d_date_sk

FROM date_dim

WHERE d_moy = 4 AND d_year = 1998

GROUP BY d_date_sk) AS t895

WHERE t895.d_date_sk = t893.ss_sold_date_sk

GROUP BY t893.ss_item_sk, t893.ss_store_sk, t893.sr_returned_date_sk, t893.cs_sold_date_sk) AS t897,

(SELECT d_date_sk

FROM date_dim

WHERE d_moy >= 4 AND d_moy <= 4 + 3 AND d_year = 1998

GROUP BY d_date_sk) AS t899

WHERE t897.sr_returned_date_sk = t899.d_date_sk

GROUP BY t897.ss_item_sk, t897.ss_store_sk, t897.cs_sold_date_sk) AS t901,

(SELECT d_date_sk

FROM date_dim

WHERE d_year = 1998 OR d_year = 1998 + 1 OR d_year = 1998 + 2

GROUP BY d_date_sk) AS t903

WHERE t901.cs_sold_date_sk = t903.d_date_sk

GROUP BY t901.ss_item_sk, t901.ss_store_sk) AS t905,

(SELECT s_store_sk, s_store_id, s_store_name

FROM store

GROUP BY s_store_sk, s_store_id, s_store_name) AS t906

WHERE t906.s_store_sk = t905.ss_store_sk

GROUP BY t905.ss_item_sk, t906.s_store_id, t906.s_store_name) AS t908,

(SELECT i_item_sk, i_item_id, i_item_desc

FROM item

GROUP BY i_item_sk, i_item_id, i_item_desc) AS t909

WHERE t909.i_item_sk = t908.ss_item_sk

GROUP BY t908.s_store_id, t908.s_store_name, t909.i_item_id, t909.i_item_desc

ORDER BY t909.i_item_id, t909.i_item_desc, t908.s_store_id, t908.s_store_name

LIMIT 100",None
54,sql_054.sql,"select  count(*) from (
    select distinct c_last_name, c_first_name, d_date
    from store_sales, date_dim, customer
          where store_sales.ss_sold_date_sk = date_dim.d_date_sk
      and store_sales.ss_customer_sk = customer.c_customer_sk
      and d_month_seq between 1198 and 1198 + 11
  intersect
    select distinct c_last_name, c_first_name, d_date
    from catalog_sales, date_dim, customer
          where catalog_sales.cs_sold_date_sk = date_dim.d_date_sk
      and catalog_sales.cs_bill_customer_sk = customer.c_customer_sk
      and d_month_seq between 1198 and 1198 + 11
  intersect
    select distinct c_last_name, c_first_name, d_date
    from web_sales, date_dim, customer
          where web_sales.ws_sold_date_sk = date_dim.d_date_sk
      and web_sales.ws_bill_customer_sk = customer.c_customer_sk
      and d_month_seq between 1198 and 1198 + 11
) hot_cust
limit 100;","select  count(*) from (
    select distinct c_last_name, c_first_name, d_date
    from store_sales, date_dim, customer
          where store_sales.ss_sold_date_sk = date_dim.d_date_sk
      and store_sales.ss_customer_sk = customer.c_customer_sk
      and d_month_seq between 1198 and 1198 + 11
  intersect
    select distinct c_last_name, c_first_name, d_date
    from catalog_sales, date_dim, customer
          where catalog_sales.cs_sold_date_sk = date_dim.d_date_sk
      and catalog_sales.cs_bill_customer_sk = customer.c_customer_sk
      and d_month_seq between 1198 and 1198 + 11
  intersect
    select distinct c_last_name, c_first_name, d_date
    from web_sales, date_dim, customer
          where web_sales.ws_sold_date_sk = date_dim.d_date_sk
      and web_sales.ws_bill_customer_sk = customer.c_customer_sk
      and d_month_seq between 1198 and 1198 + 11
) hot_cust
limit 100;",None,tpcds,"SELECT COUNT(*)

FROM (SELECT *

FROM (SELECT customer311.c_last_name, customer311.c_first_name, t1339.d_date

FROM store_sales AS store_sales103

INNER JOIN (SELECT *

FROM date_dim

WHERE d_month_seq >= 1190 AND d_month_seq <= 1190 + 11) AS t1339 ON store_sales103.ss_sold_date_sk = t1339.d_date_sk

INNER JOIN customer AS customer311 ON store_sales103.ss_customer_sk = customer311.c_customer_sk

INTERSECT

SELECT customer312.c_last_name, customer312.c_first_name, t1341.d_date

FROM catalog_sales AS catalog_sales103

INNER JOIN (SELECT *

FROM date_dim

WHERE d_month_seq >= 1190 AND d_month_seq <= 1190 + 11) AS t1341 ON catalog_sales103.cs_sold_date_sk = t1341.d_date_sk

INNER JOIN customer AS customer312 ON catalog_sales103.cs_bill_customer_sk = customer312.c_customer_sk) AS t

INTERSECT

SELECT customer313.c_last_name, customer313.c_first_name, t1344.d_date

FROM web_sales AS web_sales103

INNER JOIN (SELECT *

FROM date_dim

WHERE d_month_seq >= 1190 AND d_month_seq <= 1190 + 11) AS t1344 ON web_sales103.ws_sold_date_sk = t1344.d_date_sk

INNER JOIN customer AS customer313 ON web_sales103.ws_bill_customer_sk = customer313.c_customer_sk) AS t1346

LIMIT 100",PushDownLeftSemiAntiJoin
55,sql_055.sql,"select  i_product_name
             ,i_brand
             ,i_class
             ,i_category
             ,avg(inv_quantity_on_hand) qoh
       from inventory
           ,date_dim
           ,item
       where inv_date_sk=d_date_sk
              and inv_item_sk=i_item_sk
              and d_month_seq between 1204 and 1204 + 11
       group by rollup(i_product_name
                       ,i_brand
                       ,i_class
                       ,i_category)
order by qoh, i_product_name, i_brand, i_class, i_category
limit 100;","select  i_product_name
             ,i_brand
             ,i_class
             ,i_category
             ,avg(inv_quantity_on_hand) qoh
       from inventory
           ,date_dim
           ,item
       where inv_date_sk=d_date_sk
              and inv_item_sk=i_item_sk
              and d_month_seq between 1204 and 1204 + 11
       group by rollup(i_product_name
                       ,i_brand
                       ,i_class
                       ,i_category)
order by qoh, i_product_name, i_brand, i_class, i_category
limit 100;",None,tpcds,"SELECT item103.i_product_name, item103.i_brand, item103.i_class, item103.i_category, AVG(inventory103.inv_quantity_on_hand) AS qoh

FROM inventory AS inventory103

INNER JOIN (SELECT *

FROM date_dim

WHERE d_month_seq >= 1183 AND d_month_seq <= 1183 + 11) AS t515 ON inventory103.inv_date_sk = t515.d_date_sk

INNER JOIN item AS item103 ON inventory103.inv_item_sk = item103.i_item_sk

GROUP BY ROLLUP(item103.i_product_name, item103.i_brand, item103.i_class, item103.i_category)

ORDER BY AVG(inventory103.inv_quantity_on_hand), item103.i_product_name, item103.i_brand, item103.i_class, item103.i_category

LIMIT 100",RemoveRedundantAliases
56,sql_056.sql,"select  *
from(
select i_category, i_class, i_brand,
       s_store_name, s_company_name,
       d_moy,
       sum(ss_sales_price) sum_sales,
       avg(sum(ss_sales_price)) over
         (partition by i_category, i_brand, s_store_name, s_company_name)
         avg_monthly_sales
from item, store_sales, date_dim, store
where ss_item_sk = i_item_sk and
      ss_sold_date_sk = d_date_sk and
      ss_store_sk = s_store_sk and
      d_year in (2001) and
        ((i_category in ('Shoes','Sports','Music') and
          i_class in ('athletic','pools','country')
         )
      or (i_category in ('Children','Women','Home') and
          i_class in ('toddlers','fragrances','blinds/shades') 
        ))
group by i_category, i_class, i_brand,
         s_store_name, s_company_name, d_moy) tmp1
where case when (avg_monthly_sales <> 0) then (abs(sum_sales - avg_monthly_sales) / avg_monthly_sales) else null end > 0.1
order by sum_sales - avg_monthly_sales, s_store_name
limit 100;","select  *
from(
select i_category, i_class, i_brand,
       s_store_name, s_company_name,
       d_moy,
       sum(ss_sales_price) sum_sales,
       avg(sum(ss_sales_price)) over
         (partition by i_category, i_brand, s_store_name, s_company_name)
         avg_monthly_sales
from item, store_sales, date_dim, store
where ss_item_sk = i_item_sk and
      ss_sold_date_sk = d_date_sk and
      ss_store_sk = s_store_sk and
      d_year in (2001) and
        ((i_category in ('Shoes','Sports','Music') and
          i_class in ('athletic','pools','country')
         )
      or (i_category in ('Children','Women','Home') and
          i_class in ('toddlers','fragrances','blinds/shades') 
        ))
group by i_category, i_class, i_brand,
         s_store_name, s_company_name, d_moy) tmp1
where case when (avg_monthly_sales <> 0) then (abs(sum_sales - avg_monthly_sales) / avg_monthly_sales) else null end > 0.1
order by sum_sales - avg_monthly_sales, s_store_name
limit 100;","ConstantFolding,OptimizeIn",tpcds,"select  *
from(
select i_category, i_class, i_brand,
       s_store_name, s_company_name,
       d_moy,
       sum(ss_sales_price) sum_sales,
       avg(sum(ss_sales_price)) over
         (partition by i_category, i_brand, s_store_name, s_company_name)
         avg_monthly_sales
from item, store_sales, date_dim, store
where ss_item_sk = i_item_sk and
      ss_sold_date_sk = d_date_sk and
      ss_store_sk = s_store_sk and
      d_year in (2001) and
        ((i_category in ('Shoes','Sports','Music') and
          i_class in ('athletic','pools','country')
         )
      or (i_category in ('Children','Women','Home') and
          i_class in ('toddlers','fragrances','blinds/shades') 
        ))
group by i_category, i_class, i_brand,
         s_store_name, s_company_name, d_moy) tmp1
where case when (avg_monthly_sales <> 0) then (abs(sum_sales - avg_monthly_sales) / avg_monthly_sales) else null end > 0.1
order by sum_sales - avg_monthly_sales, s_store_name
limit 100;","CollapseProject,ConstantFolding,OptimizeIn"
57,sql_057.sql,"select  ca_zip
       ,sum(cs_sales_price)
 from catalog_sales
     ,customer
     ,customer_address
     ,date_dim
 where cs_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk 
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',
                                   '85392', '85460', '80348', '81792')
 	      or ca_state in ('CA','WA','GA')
 	      or cs_sales_price > 500)
 	and cs_sold_date_sk = d_date_sk
 	and d_qoy = 1 and d_year = 1999
 group by ca_zip
 order by ca_zip
 limit 100;","select  ca_zip
       ,sum(cs_sales_price)
 from catalog_sales
     ,customer
     ,customer_address
     ,date_dim
 where cs_bill_customer_sk = c_customer_sk
 	and c_current_addr_sk = ca_address_sk 
 	and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',
                                   '85392', '85460', '80348', '81792')
 	      or ca_state in ('CA','WA','GA')
 	      or cs_sales_price > 500)
 	and cs_sold_date_sk = d_date_sk
 	and d_qoy = 1 and d_year = 1999
 group by ca_zip
 order by ca_zip
 limit 100;",None,tpcds,"SELECT customer_address100.ca_zip, SUM(catalog_sales100.cs_sales_price)

FROM catalog_sales AS catalog_sales100

INNER JOIN customer AS customer100 ON catalog_sales100.cs_bill_customer_sk = customer100.c_customer_sk

INNER JOIN customer_address AS customer_address100 ON customer100.c_current_addr_sk = customer_address100.ca_address_sk AND (SUBSTRING(customer_address100.ca_zip FROM 1 FOR 5) = '85669' OR SUBSTRING(customer_address100.ca_zip FROM 1 FOR 5) = '86197' OR (SUBSTRING(customer_address100.ca_zip FROM 1 FOR 5) = '88274' OR (SUBSTRING(customer_address100.ca_zip FROM 1 FOR 5) = '83405' OR SUBSTRING(customer_address100.ca_zip FROM 1 FOR 5) = '86475')) OR (SUBSTRING(customer_address100.ca_zip FROM 1 FOR 5) = '85392' OR (SUBSTRING(customer_address100.ca_zip FROM 1 FOR 5) = '85460' OR SUBSTRING(customer_address100.ca_zip FROM 1 FOR 5) = '80348') OR (SUBSTRING(customer_address100.ca_zip FROM 1 FOR 5) = '81792' OR (customer_address100.ca_state IN ('CA', 'GA', 'WA') OR catalog_sales100.cs_sales_price > 500))))

INNER JOIN (SELECT *

FROM date_dim

WHERE d_qoy = 1 AND d_year = 2002) AS t554 ON catalog_sales100.cs_sold_date_sk = t554.d_date_sk

GROUP BY customer_address100.ca_zip

ORDER BY customer_address100.ca_zip

LIMIT 100",ConstantFolding
58,sql_058.sql,"select  a.ca_state state, count(*) cnt
 from customer_address a
     ,customer c
     ,store_sales s
     ,date_dim d
     ,item i
 where       a.ca_address_sk = c.c_current_addr_sk
 	and c.c_customer_sk = s.ss_customer_sk
 	and s.ss_sold_date_sk = d.d_date_sk
 	and s.ss_item_sk = i.i_item_sk
 	and d.d_month_seq = 
 	     (select distinct (d_month_seq)
 	      from date_dim
               where d_year = 2001
 	        and d_moy = 3 )
 	and i.i_current_price > 1.2 * 
             (select avg(j.i_current_price) 
 	     from item j 
 	     where j.i_category = i.i_category)
 group by a.ca_state
 having count(*) >= 10
 order by cnt, a.ca_state 
 limit 100;","select  a.ca_state state, count(*) cnt
 from customer_address a
     ,customer c
     ,store_sales s
     ,date_dim d
     ,item i
 where       a.ca_address_sk = c.c_current_addr_sk
 	and c.c_customer_sk = s.ss_customer_sk
 	and s.ss_sold_date_sk = d.d_date_sk
 	and s.ss_item_sk = i.i_item_sk
 	and d.d_month_seq = 
 	     (select distinct (d_month_seq)
 	      from date_dim
               where d_year = 2001
 	        and d_moy = 3 )
 	and i.i_current_price > 1.2 * 
             (select avg(j.i_current_price) 
 	     from item j 
 	     where j.i_category = i.i_category)
 group by a.ca_state
 having count(*) >= 10
 order by cnt, a.ca_state 
 limit 100;",EliminateOuterJoin,tpcds,"select  a.ca_state state, count(*) cnt
 from customer_address a
     ,customer c
     ,store_sales s
     ,date_dim d
     ,item i
 where       a.ca_address_sk = c.c_current_addr_sk
 	and c.c_customer_sk = s.ss_customer_sk
 	and s.ss_sold_date_sk = d.d_date_sk
 	and s.ss_item_sk = i.i_item_sk
 	and d.d_month_seq = 
 	     (select distinct (d_month_seq)
 	      from date_dim
               where d_year = 2001
 	        and d_moy = 3 )
 	and i.i_current_price > 1.2 * 
             (select avg(j.i_current_price) 
 	     from item j 
 	     where j.i_category = i.i_category)
 group by a.ca_state
 having count(*) >= 10
 order by cnt, a.ca_state 
 limit 100;",ConstantFolding
59,sql_059.sql,"select  dt.d_year
 	,item.i_brand_id brand_id
 	,item.i_brand brand
 	,sum(ss_ext_sales_price) ext_price
 from date_dim dt
     ,store_sales
     ,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
    and store_sales.ss_item_sk = item.i_item_sk
    and item.i_manager_id = 1
    and dt.d_moy=12
    and dt.d_year=2002
 group by dt.d_year
 	,item.i_brand
 	,item.i_brand_id
 order by dt.d_year
 	,ext_price desc
 	,brand_id
limit 100 ;","SELECT date_dim.d_year, item.i_brand_id AS brand_id, item.i_brand AS brand, SUM(store_sales.ss_ext_sales_price) AS ext_price FROM date_dim, store_sales, item WHERE date_dim.d_date_sk = store_sales.ss_sold_date_sk AND store_sales.ss_item_sk = item.i_item_sk AND item.i_manager_id = 1 AND date_dim.d_moy = 12 AND date_dim.d_year = 2002 GROUP BY date_dim.d_year, item.i_brand_id, item.i_brand ORDER BY date_dim.d_year, SUM(store_sales.ss_ext_sales_price) DESC, item.i_brand_id LIMIT 100",None,tpcds,"SELECT 2002 AS d_year, t269.i_brand_id, t269.i_brand, SUM(t267.ext_price * t269._f3) AS ext_price

FROM (SELECT t265.ss_item_sk, SUM(t264._f1 * t265.ext_price) AS ext_price

FROM (SELECT d_date_sk, COUNT(*) AS _f1

FROM date_dim

WHERE d_moy = 12 AND d_year = 2002

GROUP BY d_date_sk) AS t264

INNER JOIN (SELECT ss_sold_date_sk, ss_item_sk, SUM(ss_ext_sales_price) AS ext_price

FROM store_sales

GROUP BY ss_sold_date_sk, ss_item_sk) AS t265 ON t264.d_date_sk = t265.ss_sold_date_sk

GROUP BY t265.ss_item_sk) AS t267

INNER JOIN (SELECT i_item_sk, i_brand_id, i_brand, COUNT(*) AS _f3

FROM item

WHERE i_manager_id = 1

GROUP BY i_item_sk, i_brand_id, i_brand) AS t269 ON t267.ss_item_sk = t269.i_item_sk

GROUP BY t269.i_brand_id, t269.i_brand

ORDER BY SUM(t267.ext_price * t269._f3) DESC, t269.i_brand_id

LIMIT 100",None
60,sql_060.sql,"select  
   s_store_name
  ,s_company_id
  ,s_street_number
  ,s_street_name
  ,s_street_type
  ,s_suite_number
  ,s_city
  ,s_county
  ,s_state
  ,s_zip
  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk <= 30 ) then 1 else 0 end)  as 30_days 
  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk > 30) and 
                 (sr_returned_date_sk - ss_sold_date_sk <= 60) then 1 else 0 end )  as 31_60_days 
  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk > 60) and 
                 (sr_returned_date_sk - ss_sold_date_sk <= 90) then 1 else 0 end)  as 61_90_days 
  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk > 90) and
                 (sr_returned_date_sk - ss_sold_date_sk <= 120) then 1 else 0 end)  as 91_120_days 
  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk  > 120) then 1 else 0 end)  as more_than_120_days 
from
   store_sales
  ,store_returns
  ,store
  ,date_dim d1
  ,date_dim d2
where
    d2.d_year = 1999
and d2.d_moy  = 10
and ss_ticket_number = sr_ticket_number
and ss_item_sk = sr_item_sk
and ss_sold_date_sk   = d1.d_date_sk
and sr_returned_date_sk   = d2.d_date_sk
and ss_customer_sk = sr_customer_sk
and ss_store_sk = s_store_sk
group by
   s_store_name
  ,s_company_id
  ,s_street_number
  ,s_street_name
  ,s_street_type
  ,s_suite_number
  ,s_city
  ,s_county
  ,s_state
  ,s_zip
order by s_store_name
        ,s_company_id
        ,s_street_number
        ,s_street_name
        ,s_street_type
        ,s_suite_number
        ,s_city
        ,s_county
        ,s_state
        ,s_zip
limit 100;","select  
   s_store_name
  ,s_company_id
  ,s_street_number
  ,s_street_name
  ,s_street_type
  ,s_suite_number
  ,s_city
  ,s_county
  ,s_state
  ,s_zip
  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk <= 30 ) then 1 else 0 end)  as 30_days 
  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk > 30) and 
                 (sr_returned_date_sk - ss_sold_date_sk <= 60) then 1 else 0 end )  as 31_60_days 
  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk > 60) and 
                 (sr_returned_date_sk - ss_sold_date_sk <= 90) then 1 else 0 end)  as 61_90_days 
  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk > 90) and
                 (sr_returned_date_sk - ss_sold_date_sk <= 120) then 1 else 0 end)  as 91_120_days 
  ,sum(case when (sr_returned_date_sk - ss_sold_date_sk  > 120) then 1 else 0 end)  as more_than_120_days 
from
   store_sales
  ,store_returns
  ,store
  ,date_dim d1
  ,date_dim d2
where
    d2.d_year = 1999
and d2.d_moy  = 10
and ss_ticket_number = sr_ticket_number
and ss_item_sk = sr_item_sk
and ss_sold_date_sk   = d1.d_date_sk
and sr_returned_date_sk   = d2.d_date_sk
and ss_customer_sk = sr_customer_sk
and ss_store_sk = s_store_sk
group by
   s_store_name
  ,s_company_id
  ,s_street_number
  ,s_street_name
  ,s_street_type
  ,s_suite_number
  ,s_city
  ,s_county
  ,s_state
  ,s_zip
order by s_store_name
        ,s_company_id
        ,s_street_number
        ,s_street_name
        ,s_street_type
        ,s_suite_number
        ,s_city
        ,s_county
        ,s_state
        ,s_zip
limit 100;",None,tpcds,"SELECT
  store101.s_store_name,
  store101.s_company_id,
  store101.s_street_number,
  store101.s_street_name,
  store101.s_street_type,
  store101.s_suite_number,
  store101.s_city,
  store101.s_county,
  store101.s_state,
  store101.s_zip,
  SUM(
    CASE
      WHEN store_returns101.sr_returned_date_sk - store_sales101.ss_sold_date_sk <= 30 THEN 1
      ELSE 0
    END
  ) AS 30_days,
  SUM(
    CASE
      WHEN store_returns101.sr_returned_date_sk - store_sales101.ss_sold_date_sk > 30
      AND store_returns101.sr_returned_date_sk - store_sales101.ss_sold_date_sk <= 60 THEN 1
      ELSE 0
    END
  ) AS 31_60_days,
  SUM(
    CASE
      WHEN store_returns101.sr_returned_date_sk - store_sales101.ss_sold_date_sk > 60
      AND store_returns101.sr_returned_date_sk - store_sales101.ss_sold_date_sk <= 90 THEN 1
      ELSE 0
    END
  ) AS 61_90_days,
  SUM(
    CASE
      WHEN store_returns101.sr_returned_date_sk - store_sales101.ss_sold_date_sk > 90
      AND store_returns101.sr_returned_date_sk - store_sales101.ss_sold_date_sk <= 120 THEN 1
      ELSE 0
    END
  ) AS 91_120_days,
  SUM(
    CASE
      WHEN store_returns101.sr_returned_date_sk - store_sales101.ss_sold_date_sk > 120 THEN 1
      ELSE 0
    END
  ) AS more_than_120_days
FROM
  store_sales AS store_sales101
  INNER JOIN store_returns AS store_returns101 ON store_sales101.ss_ticket_number = store_returns101.sr_ticket_number
  AND store_sales101.ss_item_sk = store_returns101.sr_item_sk
  AND store_sales101.ss_customer_sk = store_returns101.sr_customer_sk
  INNER JOIN store AS store101 ON store_sales101.ss_store_sk = store101.s_store_sk
  INNER JOIN date_dim AS date_dim203 ON store_sales101.ss_sold_date_sk = date_dim203.d_date_sk
  INNER JOIN (
    SELECT
      *
    FROM
      date_dim
    WHERE
      d_year = 2000
      AND d_moy = 8
  ) AS t599 ON store_returns101.sr_returned_date_sk = t599.d_date_sk
GROUP BY
  store101.s_store_name,
  store101.s_company_id,
  store101.s_street_number,
  store101.s_street_name,
  store101.s_street_type,
  store101.s_suite_number,
  store101.s_city,
  store101.s_county,
  store101.s_state,
  store101.s_zip
ORDER BY
  store101.s_store_name,
  store101.s_company_id,
  store101.s_street_number,
  store101.s_street_name,
  store101.s_street_type,
  store101.s_suite_number,
  store101.s_city,
  store101.s_county,
  store101.s_state,
  store101.s_zip limit 100;",None
61,sql_061.sql,"select  dt.d_year
 	,item.i_category_id
 	,item.i_category
 	,sum(ss_ext_sales_price)
 from 	date_dim dt
 	,store_sales
 	,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 	and store_sales.ss_item_sk = item.i_item_sk
 	and item.i_manager_id = 1  	
 	and dt.d_moy=11
 	and dt.d_year=2001
 group by 	dt.d_year
 		,item.i_category_id
 		,item.i_category
 order by       sum(ss_ext_sales_price) desc,dt.d_year
 		,item.i_category_id
 		,item.i_category
limit 100 ;","SELECT date_dim.d_year, item.i_category_id, item.i_category, SUM(store_sales.ss_ext_sales_price) FROM date_dim, store_sales, item WHERE date_dim.d_date_sk = store_sales.ss_sold_date_sk AND store_sales.ss_item_sk = item.i_item_sk AND item.i_manager_id = 1 AND date_dim.d_moy = 11 AND date_dim.d_year = 2001 GROUP BY date_dim.d_year, item.i_category_id, item.i_category ORDER BY SUM(store_sales.ss_ext_sales_price) DESC, item.i_category_id, item.i_category LIMIT 100",None,tpcds,"select  dt.d_year
 	,item.i_category_id
 	,item.i_category
 	,sum(ss_ext_sales_price)
 from 	date_dim dt
 	,store_sales
 	,item
 where dt.d_date_sk = store_sales.ss_sold_date_sk
 	and store_sales.ss_item_sk = item.i_item_sk
 	and item.i_manager_id = 1  	
 	and dt.d_moy=11
 	and dt.d_year=2001
 group by 	dt.d_year
 		,item.i_category_id
 		,item.i_category
 order by       sum(ss_ext_sales_price) desc,dt.d_year
 		,item.i_category_id
 		,item.i_category
limit 100 ;",None
62,sql_062.sql,"select  distinct(i_product_name)
 from item i1
 where i_manufact_id between 762 and 762+40 
   and (select count(*) as item_cnt
        from item
        where (i_manufact = i1.i_manufact and
        ((i_category = 'Women' and 
        (i_color = 'blush' or i_color = 'brown') and 
        (i_units = 'Bundle' or i_units = 'Unknown') and
        (i_size = 'extra large' or i_size = 'petite')
        ) or
        (i_category = 'Women' and
        (i_color = 'drab' or i_color = 'purple') and
        (i_units = 'Case' or i_units = 'Tbl') and
        (i_size = 'large' or i_size = 'economy')
        ) or
        (i_category = 'Men' and
        (i_color = 'sky' or i_color = 'linen') and
        (i_units = 'Pound' or i_units = 'Cup') and
        (i_size = 'N/A' or i_size = 'medium')
        ) or
        (i_category = 'Men' and
        (i_color = 'lavender' or i_color = 'wheat') and
        (i_units = 'Carton' or i_units = 'Dozen') and
        (i_size = 'extra large' or i_size = 'petite')
        ))) or
       (i_manufact = i1.i_manufact and
        ((i_category = 'Women' and 
        (i_color = 'puff' or i_color = 'violet') and 
        (i_units = 'Pallet' or i_units = 'Bunch') and
        (i_size = 'extra large' or i_size = 'petite')
        ) or
        (i_category = 'Women' and
        (i_color = 'light' or i_color = 'bisque') and
        (i_units = 'Each' or i_units = 'Gross') and
        (i_size = 'large' or i_size = 'economy')
        ) or
        (i_category = 'Men' and
        (i_color = 'mint' or i_color = 'royal') and
        (i_units = 'Ton' or i_units = 'Box') and
        (i_size = 'N/A' or i_size = 'medium')
        ) or
        (i_category = 'Men' and
        (i_color = 'coral' or i_color = 'salmon') and
        (i_units = 'Tsp' or i_units = 'Dram') and
        (i_size = 'extra large' or i_size = 'petite')
        )))) > 0
 order by i_product_name
 limit 100;","SELECT t.i_product_name FROM (SELECT * FROM item WHERE i_manufact_id >= 762 AND i_manufact_id <= 762 + 40) AS t INNER JOIN (SELECT * FROM (SELECT t1.i_manufact AS i_manufact0, COUNT(*) AS item_cnt FROM item AS item0 INNER JOIN (SELECT i_manufact FROM item WHERE i_manufact_id >= 762 AND i_manufact_id <= 762 + 40) AS t1 ON item0.i_manufact = t1.i_manufact AND (item0.i_category = 'Women' AND CAST(item0.i_color AS CHAR(5)) IN ('blush', 'brown') AND (item0.i_units = 'Bundle' OR item0.i_units = 'Unknown') AND (item0.i_size = 'extra large' OR item0.i_size = 'petite') OR item0.i_category = 'Women' AND (item0.i_color = 'drab' OR item0.i_color = 'purple') AND (item0.i_units = 'Case' OR item0.i_units = 'Tbl') AND (item0.i_size = 'large' OR item0.i_size = 'economy') OR item0.i_category = 'Men' AND (item0.i_color = 'sky' OR item0.i_color = 'linen') AND (item0.i_units = 'Pound' OR item0.i_units = 'Cup') AND (item0.i_size = 'N/A' OR item0.i_size = 'medium') OR item0.i_category = 'Men' AND (item0.i_color = 'lavender' OR item0.i_color = 'wheat') AND (item0.i_units = 'Carton' OR item0.i_units = 'Dozen') AND (item0.i_size = 'extra large' OR item0.i_size = 'petite')) OR item0.i_manufact = t1.i_manufact AND (item0.i_category = 'Women' AND (item0.i_color = 'puff' OR item0.i_color = 'violet') AND (item0.i_units = 'Pallet' OR item0.i_units = 'Bunch') AND (item0.i_size = 'extra large' OR item0.i_size = 'petite') OR item0.i_category = 'Women' AND (item0.i_color = 'light' OR item0.i_color = 'bisque') AND (item0.i_units = 'Each' OR item0.i_units = 'Gross') AND (item0.i_size = 'large' OR item0.i_size = 'economy') OR item0.i_category = 'Men' AND (item0.i_color = 'mint' OR item0.i_color = 'royal') AND CAST(item0.i_units AS CHAR(3)) IN ('Box', 'Ton') AND (item0.i_size = 'N/A' OR item0.i_size = 'medium') OR item0.i_category = 'Men' AND (item0.i_color = 'coral' OR item0.i_color = 'salmon') AND (item0.i_units = 'Tsp' OR item0.i_units = 'Dram') AND (item0.i_size = 'extra large' OR item0.i_size = 'petite')) GROUP BY t1.i_manufact) AS t3 WHERE t3.item_cnt > 0) AS t4 ON t.i_manufact = t4.i_manufact0 ORDER BY t.i_product_name LIMIT 100",ConstantFolding,tpcds,"SELECT t130.i_product_name

FROM (SELECT *

FROM item

WHERE i_manufact_id >= 744 AND i_manufact_id <= 744 + 40) AS t130

INNER JOIN (SELECT t132.i_manufact AS i_manufact0, COUNT(*) AS item_cnt

FROM item AS item42

INNER JOIN (SELECT i_manufact

FROM item

WHERE i_manufact_id >= 744 AND i_manufact_id <= 744 + 40) AS t132 ON item42.i_manufact = t132.i_manufact AND (item42.i_category = 'Women' AND (item42.i_color = 'light' OR item42.i_color = 'yellow') AND (item42.i_units = 'Pallet' OR item42.i_units = 'Box') AND (item42.i_size = 'large' OR item42.i_size = 'medium') OR item42.i_category = 'Women' AND (item42.i_color = 'firebrick' OR item42.i_color = 'cream') AND (item42.i_units = 'Oz' OR item42.i_units = 'Carton') AND (item42.i_size = 'petite' OR item42.i_size = 'extra large') OR item42.i_category = 'Men' AND (item42.i_color = 'magenta' OR item42.i_color = 'sandy') AND (item42.i_units = 'Ounce' OR item42.i_units = 'Cup') AND (item42.i_size = 'economy' OR item42.i_size = 'N/A') OR item42.i_category = 'Men' AND (item42.i_color = 'frosted' OR item42.i_color = 'plum') AND (item42.i_units = 'Tsp' OR item42.i_units = 'Bundle') AND (item42.i_size = 'large' OR item42.i_size = 'medium')) OR item42.i_manufact = t132.i_manufact AND (item42.i_category = 'Women' AND (item42.i_color = 'orchid' OR item42.i_color = 'chocolate') AND (item42.i_units = 'Pound' OR item42.i_units = 'Lb') AND (item42.i_size = 'large' OR item42.i_size = 'medium') OR item42.i_category = 'Women' AND CAST(item42.i_color AS CHAR(5)) IN ('linen', 'slate') AND (item42.i_units = 'Gross' OR item42.i_units = 'Unknown') AND (item42.i_size = 'petite' OR item42.i_size = 'extra large') OR item42.i_category = 'Men' AND (item42.i_color = 'gainsboro' OR item42.i_color = 'dim') AND (item42.i_units = 'Ton' OR item42.i_units = 'Dozen') AND (item42.i_size = 'economy' OR item42.i_size = 'N/A') OR item42.i_category = 'Men' AND (item42.i_color = 'ivory' OR item42.i_color = 'navy') AND (item42.i_units = 'Tbl' OR item42.i_units = 'Bunch') AND (item42.i_size = 'large' OR item42.i_size = 'medium'))

GROUP BY t132.i_manufact

HAVING COUNT(*) > 0) AS t135 ON t130.i_manufact = t135.i_manufact0

ORDER BY t130.i_product_name

LIMIT 100",ConstantFolding
63,sql_063.sql,"select  s_store_name
      ,sum(ss_net_profit)
 from store_sales
     ,date_dim
     ,store,
     (select ca_zip
     from (
      SELECT substr(ca_zip,1,5) ca_zip
      FROM customer_address
      WHERE substr(ca_zip,1,5) IN (
                          '31133','52908','97884','97644','93783','20034',
                          '17024','46840','91575','19744','58977',
                          '55184','73486','87417','73172','44184',
                          '65439','16179','38102','18301','17839',
                          '58830','89901','20746','59705','18569',
                          '47351','96216','46324','45262','85427',
                          '75357','20699','44728','45344','71644',
                          '87558','20832','52595','36428','35480',
                          '31386','39130','45235','32986','13224',
                          '85608','24749','63790','20579','57621',
                          '94618','49699','67828','71103','71402',
                          '64581','62381','60671','79654','36167',
                          '61101','10828','32675','20956','74689',
                          '97450','79993','53474','50476','52567',
                          '44703','58398','25520','78811','29036',
                          '91116','23410','91309','36777','47058',
                          '74899','62068','62589','99157','75796',
                          '37323','68877','43726','98320','35622',
                          '39877','64526','51296','81303','82304',
                          '97475','24357','78527','38751','25114',
                          '29734','36980','73650','42892','38110',
                          '25110','10424','89627','18764','88965',
                          '19932','15444','30861','35730','36501',
                          '58733','22550','11486','68560','88920',
                          '33414','35696','69800','18079','15809',
                          '20333','66160','13878','53902','53600',
                          '92398','23562','64634','81688','74397',
                          '47201','18820','19901','69959','45226',
                          '61358','20185','68627','89647','53003',
                          '61608','31301','39164','19531','25580',
                          '23064','47686','56593','87179','31918',
                          '58997','35290','68034','69979','49710',
                          '95816','30808','61399','30247','76693',
                          '60574','99827','77454','31142','34106',
                          '81614','74515','23618','68894','97613',
                          '54246','30317','35955','83123','15025',
                          '21508','43949','30895','51793','95391',
                          '46725','14174','94296','21462','75749',
                          '85076','31236','51114','43786','28067',
                          '39666','82673','44955','74685','85389',
                          '70798','13188','31602','61768','31941',
                          '28477','75171','11666','19407','97683',
                          '27968','40222','24549','56783','14687',
                          '42240','48867','60743','76142','83885',
                          '89917','14230','25482','39697','77931',
                          '28801','47826','18161','53924','21438',
                          '20453','50576','40464','43324','29470',
                          '18003','79785','59447','56713','59547',
                          '57921','94255','14438','53245','27165',
                          '44644','58122','42650','26172','50013',
                          '41100','55608','67439','67914','54784',
                          '68089','32330','87996','94180','13091',
                          '52406','19669','56683','74270','10206',
                          '99094','96381','82679','44204','89012',
                          '80897','42190','61636','73630','12727',
                          '88362','42771','55804','52520','16581',
                          '67793','56685','11734','91213','22939',
                          '41507','27682','62687','75524','18589',
                          '28073','34716','17168','69269','46413',
                          '28986','21537','18260','39808','68943',
                          '83368','65165','72648','99140','85957',
                          '14108','24194','49672','89137','11000',
                          '12413','20144','99799','61679','66884',
                          '73582','19898','76741','26731','93072',
                          '92467','50908','56391','65803','38412',
                          '17712','47457','16536','85150','13888',
                          '87099','36719','25000','63629','13505',
                          '49104','56990','81822','29354','28635',
                          '82170','37642','10324','35753','71087',
                          '87326','12037','72450','90992','13068',
                          '63305','75080','79055','23995','70973',
                          '12778','53878','40241','69284','12215',
                          '20345','98834','80990','55936','72521',
                          '20729','19530','53267','64542','63333',
                          '15412','47927','64410','69675','24812',
                          '52014','87377','91546','58463','97692',
                          '13763','56701','71759','32074','94470',
                          '64570','72046','88422','65036','61016',
                          '24349','76678','15934','97436','86914',
                          '83246','72486','55156','97779')
     intersect
      select ca_zip
      from (SELECT substr(ca_zip,1,5) ca_zip,count(*) cnt
            FROM customer_address, customer
            WHERE ca_address_sk = c_current_addr_sk and
                  c_preferred_cust_flag='Y'
            group by ca_zip
            having count(*) > 10)A1)A2) V1
 where ss_store_sk = s_store_sk
  and ss_sold_date_sk = d_date_sk
  and d_qoy = 1 and d_year = 2002
  and (substr(s_zip,1,2) = substr(V1.ca_zip,1,2))
 group by s_store_name
 order by s_store_name
 limit 100;","SELECT store.s_store_name, SUM(store_sales.ss_net_profit) FROM store_sales, date_dim, store, (SELECT * FROM (SELECT SUBSTR(t.ca_zip FROM 1 FOR 5) AS ca_zip FROM (SELECT ca_gmt_offset, ca_address_sk, ca_street_number, ca_street_name, ca_street_type, ca_suite_number, ca_city, ca_county, ca_state, ca_zip, ca_country, ca_location_type, ca_address_id, SUBSTR(ca_zip FROM 1 FOR 5) AS dollarf13 FROM customer_address) AS t INNER JOIN (VALUES ('31133'), ('52908'), ('97884'), ('97644'), ('93783'), ('20034'), ('17024'), ('46840'), ('91575'), ('19744'), ('58977'), ('55184'), ('73486'), ('87417'), ('73172'), ('44184'), ('65439'), ('16179'), ('38102'), ('18301'), ('17839'), ('58830'), ('89901'), ('20746'), ('59705'), ('18569'), ('47351'), ('96216'), ('46324'), ('45262'), ('85427'), ('75357'), ('20699'), ('44728'), ('45344'), ('71644'), ('87558'), ('20832'), ('52595'), ('36428'), ('35480'), ('31386'), ('39130'), ('45235'), ('32986'), ('13224'), ('85608'), ('24749'), ('63790'), ('20579'), ('57621'), ('94618'), ('49699'), ('67828'), ('71103'), ('71402'), ('64581'), ('62381'), ('60671'), ('79654'), ('36167'), ('61101'), ('10828'), ('32675'), ('20956'), ('74689'), ('97450'), ('79993'), ('53474'), ('50476'), ('52567'), ('44703'), ('58398'), ('25520'), ('78811'), ('29036'), ('91116'), ('23410'), ('91309'), ('36777'), ('47058'), ('74899'), ('62068'), ('62589'), ('99157'), ('75796'), ('37323'), ('68877'), ('43726'), ('98320'), ('35622'), ('39877'), ('64526'), ('51296'), ('81303'), ('82304'), ('97475'), ('24357'), ('78527'), ('38751'), ('25114'), ('29734'), ('36980'), ('73650'), ('42892'), ('38110'), ('25110'), ('10424'), ('89627'), ('18764'), ('88965'), ('19932'), ('15444'), ('30861'), ('35730'), ('36501'), ('58733'), ('22550'), ('11486'), ('68560'), ('88920'), ('33414'), ('35696'), ('69800'), ('18079'), ('15809'), ('20333'), ('66160'), ('13878'), ('53902'), ('53600'), ('92398'), ('23562'), ('64634'), ('81688'), ('74397'), ('47201'), ('18820'), ('19901'), ('69959'), ('45226'), ('61358'), ('20185'), ('68627'), ('89647'), ('53003'), ('61608'), ('31301'), ('39164'), ('19531'), ('25580'), ('23064'), ('47686'), ('56593'), ('87179'), ('31918'), ('58997'), ('35290'), ('68034'), ('69979'), ('49710'), ('95816'), ('30808'), ('61399'), ('30247'), ('76693'), ('60574'), ('99827'), ('77454'), ('31142'), ('34106'), ('81614'), ('74515'), ('23618'), ('68894'), ('97613'), ('54246'), ('30317'), ('35955'), ('83123'), ('15025'), ('21508'), ('43949'), ('30895'), ('51793'), ('95391'), ('46725'), ('14174'), ('94296'), ('21462'), ('75749'), ('85076'), ('31236'), ('51114'), ('43786'), ('28067'), ('39666'), ('82673'), ('44955'), ('74685'), ('85389'), ('70798'), ('13188'), ('31602'), ('61768'), ('31941'), ('28477'), ('75171'), ('11666'), ('19407'), ('97683'), ('27968'), ('40222'), ('24549'), ('56783'), ('14687'), ('42240'), ('48867'), ('60743'), ('76142'), ('83885'), ('89917'), ('14230'), ('25482'), ('39697'), ('77931'), ('28801'), ('47826'), ('18161'), ('53924'), ('21438'), ('20453'), ('50576'), ('40464'), ('43324'), ('29470'), ('18003'), ('79785'), ('59447'), ('56713'), ('59547'), ('57921'), ('94255'), ('14438'), ('53245'), ('27165'), ('44644'), ('58122'), ('42650'), ('26172'), ('50013'), ('41100'), ('55608'), ('67439'), ('67914'), ('54784'), ('68089'), ('32330'), ('87996'), ('94180'), ('13091'), ('52406'), ('19669'), ('56683'), ('74270'), ('10206'), ('99094'), ('96381'), ('82679'), ('44204'), ('89012'), ('80897'), ('42190'), ('61636'), ('73630'), ('12727'), ('88362'), ('42771'), ('55804'), ('52520'), ('16581'), ('67793'), ('56685'), ('11734'), ('91213'), ('22939'), ('41507'), ('27682'), ('62687'), ('75524'), ('18589'), ('28073'), ('34716'), ('17168'), ('69269'), ('46413'), ('28986'), ('21537'), ('18260'), ('39808'), ('68943'), ('83368'), ('65165'), ('72648'), ('99140'), ('85957'), ('14108'), ('24194'), ('49672'), ('89137'), ('11000'), ('12413'), ('20144'), ('99799'), ('61679'), ('66884'), ('73582'), ('19898'), ('76741'), ('26731'), ('93072'), ('92467'), ('50908'), ('56391'), ('65803'), ('38412'), ('17712'), ('47457'), ('16536'), ('85150'), ('13888'), ('87099'), ('36719'), ('25000'), ('63629'), ('13505'), ('49104'), ('56990'), ('81822'), ('29354'), ('28635'), ('82170'), ('37642'), ('10324'), ('35753'), ('71087'), ('87326'), ('12037'), ('72450'), ('90992'), ('13068'), ('63305'), ('75080'), ('79055'), ('23995'), ('70973'), ('12778'), ('53878'), ('40241'), ('69284'), ('12215'), ('20345'), ('98834'), ('80990'), ('55936'), ('72521'), ('20729'), ('19530'), ('53267'), ('64542'), ('63333'), ('15412'), ('47927'), ('64410'), ('69675'), ('24812'), ('52014'), ('87377'), ('91546'), ('58463'), ('97692'), ('13763'), ('56701'), ('71759'), ('32074'), ('94470'), ('64570'), ('72046'), ('88422'), ('65036'), ('61016'), ('24349'), ('76678'), ('15934'), ('97436'), ('86914'), ('83246'), ('72486'), ('55156'), ('97779')) AS t0 (ROW_VALUE) ON t.dollarf13 = t0.ROW_VALUE INTERSECT SELECT SUBSTR(customer_address0.ca_zip FROM 1 FOR 5) AS ca_zip FROM customer_address AS customer_address0, customer WHERE customer_address0.ca_address_sk = customer.c_current_addr_sk AND customer.c_preferred_cust_flag = 'Y' GROUP BY customer_address0.ca_zip HAVING COUNT(*) > 10) AS t6) AS t7 WHERE store_sales.ss_store_sk = store.s_store_sk AND store_sales.ss_sold_date_sk = date_dim.d_date_sk AND date_dim.d_qoy = 1 AND date_dim.d_year = 2002 AND SUBSTR(store.s_zip FROM 1 FOR 2) = SUBSTR(t7.ca_zip FROM 1 FOR 2) GROUP BY store.s_store_name ORDER BY store.s_store_name LIMIT 100",ConstantFolding,tpcds,"select  s_store_name
      ,sum(ss_net_profit)
 from store_sales
     ,date_dim
     ,store,
     (select ca_zip
     from (
      SELECT substr(ca_zip,1,5) ca_zip
      FROM customer_address
      WHERE substr(ca_zip,1,5) IN (
                          '31133','52908','97884','97644','93783','20034',
                          '17024','46840','91575','19744','58977',
                          '55184','73486','87417','73172','44184',
                          '65439','16179','38102','18301','17839',
                          '58830','89901','20746','59705','18569',
                          '47351','96216','46324','45262','85427',
                          '75357','20699','44728','45344','71644',
                          '87558','20832','52595','36428','35480',
                          '31386','39130','45235','32986','13224',
                          '85608','24749','63790','20579','57621',
                          '94618','49699','67828','71103','71402',
                          '64581','62381','60671','79654','36167',
                          '61101','10828','32675','20956','74689',
                          '97450','79993','53474','50476','52567',
                          '44703','58398','25520','78811','29036',
                          '91116','23410','91309','36777','47058',
                          '74899','62068','62589','99157','75796',
                          '37323','68877','43726','98320','35622',
                          '39877','64526','51296','81303','82304',
                          '97475','24357','78527','38751','25114',
                          '29734','36980','73650','42892','38110',
                          '25110','10424','89627','18764','88965',
                          '19932','15444','30861','35730','36501',
                          '58733','22550','11486','68560','88920',
                          '33414','35696','69800','18079','15809',
                          '20333','66160','13878','53902','53600',
                          '92398','23562','64634','81688','74397',
                          '47201','18820','19901','69959','45226',
                          '61358','20185','68627','89647','53003',
                          '61608','31301','39164','19531','25580',
                          '23064','47686','56593','87179','31918',
                          '58997','35290','68034','69979','49710',
                          '95816','30808','61399','30247','76693',
                          '60574','99827','77454','31142','34106',
                          '81614','74515','23618','68894','97613',
                          '54246','30317','35955','83123','15025',
                          '21508','43949','30895','51793','95391',
                          '46725','14174','94296','21462','75749',
                          '85076','31236','51114','43786','28067',
                          '39666','82673','44955','74685','85389',
                          '70798','13188','31602','61768','31941',
                          '28477','75171','11666','19407','97683',
                          '27968','40222','24549','56783','14687',
                          '42240','48867','60743','76142','83885',
                          '89917','14230','25482','39697','77931',
                          '28801','47826','18161','53924','21438',
                          '20453','50576','40464','43324','29470',
                          '18003','79785','59447','56713','59547',
                          '57921','94255','14438','53245','27165',
                          '44644','58122','42650','26172','50013',
                          '41100','55608','67439','67914','54784',
                          '68089','32330','87996','94180','13091',
                          '52406','19669','56683','74270','10206',
                          '99094','96381','82679','44204','89012',
                          '80897','42190','61636','73630','12727',
                          '88362','42771','55804','52520','16581',
                          '67793','56685','11734','91213','22939',
                          '41507','27682','62687','75524','18589',
                          '28073','34716','17168','69269','46413',
                          '28986','21537','18260','39808','68943',
                          '83368','65165','72648','99140','85957',
                          '14108','24194','49672','89137','11000',
                          '12413','20144','99799','61679','66884',
                          '73582','19898','76741','26731','93072',
                          '92467','50908','56391','65803','38412',
                          '17712','47457','16536','85150','13888',
                          '87099','36719','25000','63629','13505',
                          '49104','56990','81822','29354','28635',
                          '82170','37642','10324','35753','71087',
                          '87326','12037','72450','90992','13068',
                          '63305','75080','79055','23995','70973',
                          '12778','53878','40241','69284','12215',
                          '20345','98834','80990','55936','72521',
                          '20729','19530','53267','64542','63333',
                          '15412','47927','64410','69675','24812',
                          '52014','87377','91546','58463','97692',
                          '13763','56701','71759','32074','94470',
                          '64570','72046','88422','65036','61016',
                          '24349','76678','15934','97436','86914',
                          '83246','72486','55156','97779')
     intersect
      select ca_zip
      from (SELECT substr(ca_zip,1,5) ca_zip,count(*) cnt
            FROM customer_address, customer
            WHERE ca_address_sk = c_current_addr_sk and
                  c_preferred_cust_flag='Y'
            group by ca_zip
            having count(*) > 10)A1)A2) V1
 where ss_store_sk = s_store_sk
  and ss_sold_date_sk = d_date_sk
  and d_qoy = 1 and d_year = 2002
  and (substr(s_zip,1,2) = substr(V1.ca_zip,1,2))
 group by s_store_name
 order by s_store_name
 limit 100;",None
64,sql_064.sql,"select  i_item_id
      ,i_item_desc 
      ,i_category 
      ,i_class 
      ,i_current_price
      ,sum(ws_ext_sales_price) as itemrevenue 
      ,sum(ws_ext_sales_price)*100/sum(sum(ws_ext_sales_price)) over
          (partition by i_class) as revenueratio
from	
	web_sales
    	,item 
    	,date_dim
where 
	ws_item_sk = i_item_sk 
  	and i_category in ('Home', 'Children', 'Shoes')
  	and ws_sold_date_sk = d_date_sk
	and d_date between cast('2000-03-01' as date) 
				and (date_add(cast('2000-03-01' as date), 30))
group by 
	i_item_id
        ,i_item_desc 
        ,i_category
        ,i_class
        ,i_current_price
order by 
	i_category
        ,i_class
        ,i_item_id
        ,i_item_desc
        ,revenueratio
limit 100;","select  i_item_id
      ,i_item_desc 
      ,i_category 
      ,i_class 
      ,i_current_price
      ,sum(ws_ext_sales_price) as itemrevenue 
      ,sum(ws_ext_sales_price)*100/sum(sum(ws_ext_sales_price)) over
          (partition by i_class) as revenueratio
from	
	web_sales
    	,item 
    	,date_dim
where 
	ws_item_sk = i_item_sk 
  	and i_category in ('Home', 'Children', 'Shoes')
  	and ws_sold_date_sk = d_date_sk
	and d_date between cast('2000-03-01' as date) 
				and (date_add(cast('2000-03-01' as date), 30))
group by 
	i_item_id
        ,i_item_desc 
        ,i_category
        ,i_class
        ,i_current_price
order by 
	i_category
        ,i_class
        ,i_item_id
        ,i_item_desc
        ,revenueratio
limit 100;",ConstantFolding,tpcds,"select  i_item_id
      ,i_item_desc 
      ,i_category 
      ,i_class 
      ,i_current_price
      ,sum(ws_ext_sales_price) as itemrevenue 
      ,sum(ws_ext_sales_price)*100/sum(sum(ws_ext_sales_price)) over
          (partition by i_class) as revenueratio
from	
	web_sales
    	,item 
    	,date_dim
where 
	ws_item_sk = i_item_sk 
  	and i_category in ('Home', 'Children', 'Shoes')
  	and ws_sold_date_sk = d_date_sk
	and d_date between cast('2000-03-01' as date) 
				and (date_add(cast('2000-03-01' as date), 30))
group by 
	i_item_id
        ,i_item_desc 
        ,i_category
        ,i_class
        ,i_current_price
order by 
	i_category
        ,i_class
        ,i_item_id
        ,i_item_desc
        ,revenueratio
limit 100;",ConstantFolding
65,sql_065.sql,"select  i_item_id
       ,i_item_desc 
       ,i_category 
       ,i_class 
       ,i_current_price
       ,sum(cs_ext_sales_price) as itemrevenue 
       ,sum(cs_ext_sales_price)*100/sum(sum(cs_ext_sales_price)) over
           (partition by i_class) as revenueratio
 from	catalog_sales
     ,item 
     ,date_dim
 where cs_item_sk = i_item_sk 
   and i_category in ('Men', 'Children', 'Shoes')
   and cs_sold_date_sk = d_date_sk
 and d_date between cast('1999-02-11' as date) 
 				and (date_add(cast('1999-02-11' as date), 30))
 group by i_item_id
         ,i_item_desc 
         ,i_category
         ,i_class
         ,i_current_price
 order by i_category
         ,i_class
         ,i_item_id
         ,i_item_desc
         ,revenueratio
limit 100;","select  i_item_id
       ,i_item_desc 
       ,i_category 
       ,i_class 
       ,i_current_price
       ,sum(cs_ext_sales_price) as itemrevenue 
       ,sum(cs_ext_sales_price)*100/sum(sum(cs_ext_sales_price)) over
           (partition by i_class) as revenueratio
 from	catalog_sales
     ,item 
     ,date_dim
 where cs_item_sk = i_item_sk 
   and i_category in ('Men', 'Children', 'Shoes')
   and cs_sold_date_sk = d_date_sk
 and d_date between cast('1999-02-11' as date) 
 				and (date_add(cast('1999-02-11' as date), 30))
 group by i_item_id
         ,i_item_desc 
         ,i_category
         ,i_class
         ,i_current_price
 order by i_category
         ,i_class
         ,i_item_id
         ,i_item_desc
         ,revenueratio
limit 100;",None,tpcds,"select  i_item_id
       ,i_item_desc 
       ,i_category 
       ,i_class 
       ,i_current_price
       ,sum(cs_ext_sales_price) as itemrevenue 
       ,sum(cs_ext_sales_price)*100/sum(sum(cs_ext_sales_price)) over
           (partition by i_class) as revenueratio
 from	catalog_sales
     ,item 
     ,date_dim
 where cs_item_sk = i_item_sk 
   and i_category in ('Men', 'Children', 'Shoes')
   and cs_sold_date_sk = d_date_sk
 and d_date between cast('1999-02-11' as date) 
 				and (date_add(cast('1999-02-11' as date), 30))
 group by i_item_id
         ,i_item_desc 
         ,i_category
         ,i_class
         ,i_current_price
 order by i_category
         ,i_class
         ,i_item_id
         ,i_item_desc
         ,revenueratio
limit 100;",ConstantFolding
66,sql_066.sql,"select  *
from
 (select count(*) h8_30_to_9
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk   
     and ss_hdemo_sk = household_demographics.hd_demo_sk 
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 8
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2)) 
     and store.s_store_name = 'ese') s1,
 (select count(*) h9_to_9_30 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 9 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2))
     and store.s_store_name = 'ese') s2,
 (select count(*) h9_30_to_10 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 9
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2))
     and store.s_store_name = 'ese') s3,
 (select count(*) h10_to_10_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2))
     and store.s_store_name = 'ese') s4,
 (select count(*) h10_30_to_11
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2))
     and store.s_store_name = 'ese') s5,
 (select count(*) h11_to_11_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 11
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2))
     and store.s_store_name = 'ese') s6,
 (select count(*) h11_30_to_12
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 11
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2))
     and store.s_store_name = 'ese') s7,
 (select count(*) h12_to_12_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 12
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2))
     and store.s_store_name = 'ese') s8
;","select  *
from
 (select count(*) h8_30_to_9
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk   
     and ss_hdemo_sk = household_demographics.hd_demo_sk 
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 8
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2)) 
     and store.s_store_name = 'ese') s1,
 (select count(*) h9_to_9_30 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 9 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2))
     and store.s_store_name = 'ese') s2,
 (select count(*) h9_30_to_10 
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 9
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2))
     and store.s_store_name = 'ese') s3,
 (select count(*) h10_to_10_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2))
     and store.s_store_name = 'ese') s4,
 (select count(*) h10_30_to_11
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 10 
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2))
     and store.s_store_name = 'ese') s5,
 (select count(*) h11_to_11_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk 
     and time_dim.t_hour = 11
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2))
     and store.s_store_name = 'ese') s6,
 (select count(*) h11_30_to_12
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 11
     and time_dim.t_minute >= 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2))
     and store.s_store_name = 'ese') s7,
 (select count(*) h12_to_12_30
 from store_sales, household_demographics , time_dim, store
 where ss_sold_time_sk = time_dim.t_time_sk
     and ss_hdemo_sk = household_demographics.hd_demo_sk
     and ss_store_sk = s_store_sk
     and time_dim.t_hour = 12
     and time_dim.t_minute < 30
     and ((household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2) or
          (household_demographics.hd_dep_count = 1 and household_demographics.hd_vehicle_count<=1+2) or
          (household_demographics.hd_dep_count = 0 and household_demographics.hd_vehicle_count<=0+2))
     and store.s_store_name = 'ese') s8
;",None,tpcds,"SELECT *

FROM (SELECT COALESCE(SUM(t319.h8_30_to_9 * t321.h8_30_to_9), 0) AS h8_30_to_9

FROM (SELECT t314.ss_store_sk, COALESCE(SUM(t314.h8_30_to_9 * t316.h8_30_to_9), 0) AS h8_30_to_9

FROM (SELECT t309.ss_sold_time_sk, t309.ss_store_sk, COALESCE(SUM(t309.h8_30_to_9 * t311.h8_30_to_9), 0) AS h8_30_to_9

FROM (SELECT ss_sold_time_sk, ss_hdemo_sk, ss_store_sk, COUNT(*) AS h8_30_to_9

FROM store_sales

GROUP BY ss_sold_time_sk, ss_hdemo_sk, ss_store_sk) AS t309,

(SELECT hd_demo_sk, COUNT(*) AS h8_30_to_9

FROM household_demographics

WHERE hd_dep_count = 0 AND hd_vehicle_count <= 2 OR hd_dep_count = 2 AND hd_vehicle_count <= 2 + 2 OR hd_dep_count = 4 AND hd_vehicle_count <= 4 + 2

GROUP BY hd_demo_sk) AS t311

WHERE t309.ss_hdemo_sk = t311.hd_demo_sk

GROUP BY t309.ss_sold_time_sk, t309.ss_store_sk) AS t314,

(SELECT t_time_sk, COUNT(*) AS h8_30_to_9

FROM time_dim

WHERE t_hour = 8 AND t_minute >= 30

GROUP BY t_time_sk) AS t316

WHERE t314.ss_sold_time_sk = t316.t_time_sk

GROUP BY t314.ss_store_sk) AS t319,

(SELECT s_store_sk, COUNT(*) AS h8_30_to_9

FROM store

WHERE s_store_name = 'ese'

GROUP BY s_store_sk) AS t321

WHERE t319.ss_store_sk = t321.s_store_sk) AS t324,

(SELECT COALESCE(SUM(t335.h9_to_9_30 * t337.h9_to_9_30), 0) AS h9_to_9_30

FROM (SELECT t330.ss_store_sk, COALESCE(SUM(t330.h9_to_9_30 * t332.h9_to_9_30), 0) AS h9_to_9_30

FROM (SELECT t325.ss_sold_time_sk, t325.ss_store_sk, COALESCE(SUM(t325.h9_to_9_30 * t327.h9_to_9_30), 0) AS h9_to_9_30

FROM (SELECT ss_sold_time_sk, ss_hdemo_sk, ss_store_sk, COUNT(*) AS h9_to_9_30

FROM store_sales

GROUP BY ss_sold_time_sk, ss_hdemo_sk, ss_store_sk) AS t325,

(SELECT hd_demo_sk, COUNT(*) AS h9_to_9_30

FROM household_demographics

WHERE hd_dep_count = 0 AND hd_vehicle_count <= 2 OR hd_dep_count = 2 AND hd_vehicle_count <= 2 + 2 OR hd_dep_count = 4 AND hd_vehicle_count <= 4 + 2

GROUP BY hd_demo_sk) AS t327

WHERE t325.ss_hdemo_sk = t327.hd_demo_sk

GROUP BY t325.ss_sold_time_sk, t325.ss_store_sk) AS t330,

(SELECT t_time_sk, COUNT(*) AS h9_to_9_30

FROM time_dim

WHERE t_hour = 9 AND t_minute < 30

GROUP BY t_time_sk) AS t332

WHERE t330.ss_sold_time_sk = t332.t_time_sk

GROUP BY t330.ss_store_sk) AS t335,

(SELECT s_store_sk, COUNT(*) AS h9_to_9_30

FROM store

WHERE s_store_name = 'ese'

GROUP BY s_store_sk) AS t337

WHERE t335.ss_store_sk = t337.s_store_sk) AS t340,

(SELECT COALESCE(SUM(t351.h9_30_to_10 * t353.h9_30_to_10), 0) AS h9_30_to_10

FROM (SELECT t346.ss_store_sk, COALESCE(SUM(t346.h9_30_to_10 * t348.h9_30_to_10), 0) AS h9_30_to_10

FROM (SELECT t341.ss_sold_time_sk, t341.ss_store_sk, COALESCE(SUM(t341.h9_30_to_10 * t343.h9_30_to_10), 0) AS h9_30_to_10

FROM (SELECT ss_sold_time_sk, ss_hdemo_sk, ss_store_sk, COUNT(*) AS h9_30_to_10

FROM store_sales

GROUP BY ss_sold_time_sk, ss_hdemo_sk, ss_store_sk) AS t341,

(SELECT hd_demo_sk, COUNT(*) AS h9_30_to_10

FROM household_demographics

WHERE hd_dep_count = 0 AND hd_vehicle_count <= 2 OR hd_dep_count = 2 AND hd_vehicle_count <= 2 + 2 OR hd_dep_count = 4 AND hd_vehicle_count <= 4 + 2

GROUP BY hd_demo_sk) AS t343

WHERE t341.ss_hdemo_sk = t343.hd_demo_sk

GROUP BY t341.ss_sold_time_sk, t341.ss_store_sk) AS t346,

(SELECT t_time_sk, COUNT(*) AS h9_30_to_10

FROM time_dim

WHERE t_hour = 9 AND t_minute >= 30

GROUP BY t_time_sk) AS t348

WHERE t346.ss_sold_time_sk = t348.t_time_sk

GROUP BY t346.ss_store_sk) AS t351,

(SELECT s_store_sk, COUNT(*) AS h9_30_to_10

FROM store

WHERE s_store_name = 'ese'

GROUP BY s_store_sk) AS t353

WHERE t351.ss_store_sk = t353.s_store_sk) AS t356,

(SELECT COALESCE(SUM(t367.h10_to_10_30 * t369.h10_to_10_30), 0) AS h10_to_10_30

FROM (SELECT t362.ss_store_sk, COALESCE(SUM(t362.h10_to_10_30 * t364.h10_to_10_30), 0) AS h10_to_10_30

FROM (SELECT t357.ss_sold_time_sk, t357.ss_store_sk, COALESCE(SUM(t357.h10_to_10_30 * t359.h10_to_10_30), 0) AS h10_to_10_30

FROM (SELECT ss_sold_time_sk, ss_hdemo_sk, ss_store_sk, COUNT(*) AS h10_to_10_30

FROM store_sales

GROUP BY ss_sold_time_sk, ss_hdemo_sk, ss_store_sk) AS t357,

(SELECT hd_demo_sk, COUNT(*) AS h10_to_10_30

FROM household_demographics

WHERE hd_dep_count = 0 AND hd_vehicle_count <= 2 OR hd_dep_count = 2 AND hd_vehicle_count <= 2 + 2 OR hd_dep_count = 4 AND hd_vehicle_count <= 4 + 2

GROUP BY hd_demo_sk) AS t359

WHERE t357.ss_hdemo_sk = t359.hd_demo_sk

GROUP BY t357.ss_sold_time_sk, t357.ss_store_sk) AS t362,

(SELECT t_time_sk, COUNT(*) AS h10_to_10_30

FROM time_dim

WHERE t_hour = 10 AND t_minute < 30

GROUP BY t_time_sk) AS t364

WHERE t362.ss_sold_time_sk = t364.t_time_sk

GROUP BY t362.ss_store_sk) AS t367,

(SELECT s_store_sk, COUNT(*) AS h10_to_10_30

FROM store

WHERE s_store_name = 'ese'

GROUP BY s_store_sk) AS t369

WHERE t367.ss_store_sk = t369.s_store_sk) AS t372,

(SELECT COALESCE(SUM(t383.h10_30_to_11 * t385.h10_30_to_11), 0) AS h10_30_to_11

FROM (SELECT t378.ss_store_sk, COALESCE(SUM(t378.h10_30_to_11 * t380.h10_30_to_11), 0) AS h10_30_to_11

FROM (SELECT t373.ss_sold_time_sk, t373.ss_store_sk, COALESCE(SUM(t373.h10_30_to_11 * t375.h10_30_to_11), 0) AS h10_30_to_11

FROM (SELECT ss_sold_time_sk, ss_hdemo_sk, ss_store_sk, COUNT(*) AS h10_30_to_11

FROM store_sales

GROUP BY ss_sold_time_sk, ss_hdemo_sk, ss_store_sk) AS t373,

(SELECT hd_demo_sk, COUNT(*) AS h10_30_to_11

FROM household_demographics

WHERE hd_dep_count = 0 AND hd_vehicle_count <= 2 OR hd_dep_count = 2 AND hd_vehicle_count <= 2 + 2 OR hd_dep_count = 4 AND hd_vehicle_count <= 4 + 2

GROUP BY hd_demo_sk) AS t375

WHERE t373.ss_hdemo_sk = t375.hd_demo_sk

GROUP BY t373.ss_sold_time_sk, t373.ss_store_sk) AS t378,

(SELECT t_time_sk, COUNT(*) AS h10_30_to_11

FROM time_dim

WHERE t_hour = 10 AND t_minute >= 30

GROUP BY t_time_sk) AS t380

WHERE t378.ss_sold_time_sk = t380.t_time_sk

GROUP BY t378.ss_store_sk) AS t383,

(SELECT s_store_sk, COUNT(*) AS h10_30_to_11

FROM store

WHERE s_store_name = 'ese'

GROUP BY s_store_sk) AS t385

WHERE t383.ss_store_sk = t385.s_store_sk) AS t388,

(SELECT COALESCE(SUM(t399.h11_to_11_30 * t401.h11_to_11_30), 0) AS h11_to_11_30

FROM (SELECT t394.ss_store_sk, COALESCE(SUM(t394.h11_to_11_30 * t396.h11_to_11_30), 0) AS h11_to_11_30

FROM (SELECT t389.ss_sold_time_sk, t389.ss_store_sk, COALESCE(SUM(t389.h11_to_11_30 * t391.h11_to_11_30), 0) AS h11_to_11_30

FROM (SELECT ss_sold_time_sk, ss_hdemo_sk, ss_store_sk, COUNT(*) AS h11_to_11_30

FROM store_sales

GROUP BY ss_sold_time_sk, ss_hdemo_sk, ss_store_sk) AS t389,

(SELECT hd_demo_sk, COUNT(*) AS h11_to_11_30

FROM household_demographics

WHERE hd_dep_count = 0 AND hd_vehicle_count <= 2 OR hd_dep_count = 2 AND hd_vehicle_count <= 2 + 2 OR hd_dep_count = 4 AND hd_vehicle_count <= 4 + 2

GROUP BY hd_demo_sk) AS t391

WHERE t389.ss_hdemo_sk = t391.hd_demo_sk

GROUP BY t389.ss_sold_time_sk, t389.ss_store_sk) AS t394,

(SELECT t_time_sk, COUNT(*) AS h11_to_11_30

FROM time_dim

WHERE t_hour = 11 AND t_minute < 30

GROUP BY t_time_sk) AS t396

WHERE t394.ss_sold_time_sk = t396.t_time_sk

GROUP BY t394.ss_store_sk) AS t399,

(SELECT s_store_sk, COUNT(*) AS h11_to_11_30

FROM store

WHERE s_store_name = 'ese'

GROUP BY s_store_sk) AS t401

WHERE t399.ss_store_sk = t401.s_store_sk) AS t404,

(SELECT COALESCE(SUM(t415.h11_30_to_12 * t417.h11_30_to_12), 0) AS h11_30_to_12

FROM (SELECT t410.ss_store_sk, COALESCE(SUM(t410.h11_30_to_12 * t412.h11_30_to_12), 0) AS h11_30_to_12

FROM (SELECT t405.ss_sold_time_sk, t405.ss_store_sk, COALESCE(SUM(t405.h11_30_to_12 * t407.h11_30_to_12), 0) AS h11_30_to_12

FROM (SELECT ss_sold_time_sk, ss_hdemo_sk, ss_store_sk, COUNT(*) AS h11_30_to_12

FROM store_sales

GROUP BY ss_sold_time_sk, ss_hdemo_sk, ss_store_sk) AS t405,

(SELECT hd_demo_sk, COUNT(*) AS h11_30_to_12

FROM household_demographics

WHERE hd_dep_count = 0 AND hd_vehicle_count <= 2 OR hd_dep_count = 2 AND hd_vehicle_count <= 2 + 2 OR hd_dep_count = 4 AND hd_vehicle_count <= 4 + 2

GROUP BY hd_demo_sk) AS t407

WHERE t405.ss_hdemo_sk = t407.hd_demo_sk

GROUP BY t405.ss_sold_time_sk, t405.ss_store_sk) AS t410,

(SELECT t_time_sk, COUNT(*) AS h11_30_to_12

FROM time_dim

WHERE t_hour = 11 AND t_minute >= 30

GROUP BY t_time_sk) AS t412

WHERE t410.ss_sold_time_sk = t412.t_time_sk

GROUP BY t410.ss_store_sk) AS t415,

(SELECT s_store_sk, COUNT(*) AS h11_30_to_12

FROM store

WHERE s_store_name = 'ese'

GROUP BY s_store_sk) AS t417

WHERE t415.ss_store_sk = t417.s_store_sk) AS t420,

(SELECT COALESCE(SUM(t431.h12_to_12_30 * t433.h12_to_12_30), 0) AS h12_to_12_30

FROM (SELECT t426.ss_store_sk, COALESCE(SUM(t426.h12_to_12_30 * t428.h12_to_12_30), 0) AS h12_to_12_30

FROM (SELECT t421.ss_sold_time_sk, t421.ss_store_sk, COALESCE(SUM(t421.h12_to_12_30 * t423.h12_to_12_30), 0) AS h12_to_12_30

FROM (SELECT ss_sold_time_sk, ss_hdemo_sk, ss_store_sk, COUNT(*) AS h12_to_12_30

FROM store_sales

GROUP BY ss_sold_time_sk, ss_hdemo_sk, ss_store_sk) AS t421,

(SELECT hd_demo_sk, COUNT(*) AS h12_to_12_30

FROM household_demographics

WHERE hd_dep_count = 0 AND hd_vehicle_count <= 2 OR hd_dep_count = 2 AND hd_vehicle_count <= 2 + 2 OR hd_dep_count = 4 AND hd_vehicle_count <= 4 + 2

GROUP BY hd_demo_sk) AS t423

WHERE t421.ss_hdemo_sk = t423.hd_demo_sk

GROUP BY t421.ss_sold_time_sk, t421.ss_store_sk) AS t426,

(SELECT t_time_sk, COUNT(*) AS h12_to_12_30

FROM time_dim

WHERE t_hour = 12 AND t_minute < 30

GROUP BY t_time_sk) AS t428

WHERE t426.ss_sold_time_sk = t428.t_time_sk

GROUP BY t426.ss_store_sk) AS t431,

(SELECT s_store_sk, COUNT(*) AS h12_to_12_30

FROM store

WHERE s_store_name = 'ese'

GROUP BY s_store_sk) AS t433

WHERE t431.ss_store_sk = t433.s_store_sk) AS t436","ConstantFolding,RemoveNoopOperators"
67,sql_067.sql,"select  i_item_id
       ,i_item_desc
       ,i_current_price
 from item, inventory, date_dim, store_sales
 where i_current_price between 73 and 73+30
 and inv_item_sk = i_item_sk
 and d_date_sk=inv_date_sk
 and d_date between cast('2002-03-23' as date) and (date_add(cast('2002-03-23' as date), 60))
 and i_manufact_id in (82,515,918,297)
 and inv_quantity_on_hand between 100 and 500
 and ss_item_sk = i_item_sk
 group by i_item_id,i_item_desc,i_current_price
 order by i_item_id
 limit 100;","SELECT item.i_item_id, item.i_item_desc, item.i_current_price FROM item, inventory, date_dim, store_sales WHERE item.i_current_price >= 73 AND item.i_current_price <= 73 + 30 AND (inventory.inv_item_sk = item.i_item_sk AND (date_dim.d_date_sk = inventory.inv_date_sk AND date_dim.d_date >= '2002-03-23')) AND (date_dim.d_date <= (CAST('2002-03-23' AS DATE) + INTERVAL '60' DAY) AND (item.i_manufact_id = 82 OR item.i_manufact_id = 515 OR item.i_manufact_id = 918 OR item.i_manufact_id = 297) AND (inventory.inv_quantity_on_hand >= 100 AND (inventory.inv_quantity_on_hand <= 500 AND store_sales.ss_item_sk = item.i_item_sk))) ORDER BY item.i_item_id LIMIT 100",UnwrapCastInBinaryComparison,tpcds,"SELECT t512.i_item_id, t512.i_item_desc, t512.i_current_price

FROM (SELECT *

FROM item

WHERE i_current_price >= 12 AND i_current_price <= 12 + 30 AND i_manufact_id IN (149, 400, 448, 910)) AS t512

INNER JOIN (SELECT *

FROM inventory

WHERE inv_quantity_on_hand >= 100 AND inv_quantity_on_hand <= 500) AS t513 ON t512.i_item_sk = t513.inv_item_sk

INNER JOIN (SELECT *

FROM date_dim

WHERE d_date >= DATE '2002-04-05' AND d_date <= (DATE '2002-04-05' + 60 * INTERVAL '1' DAY)) AS t514 ON t513.inv_date_sk = t514.d_date_sk

INNER JOIN store_sales AS store_sales80 ON t512.i_item_sk = store_sales80.ss_item_sk

ORDER BY t512.i_item_id

LIMIT 100",UnwrapCastInBinaryComparison
68,sql_068_1.sql,"with frequent_ss_items as 
 (select substr(i_item_desc,1,30) itemdesc,i_item_sk item_sk,d_date solddate,count(*) cnt
  from store_sales
      ,date_dim 
      ,item
  where ss_sold_date_sk = d_date_sk
    and ss_item_sk = i_item_sk 
    and d_year in (2000,2000+1,2000+2,2000+3)
  group by substr(i_item_desc,1,30),i_item_sk,d_date
  having count(*) >4),
 max_store_sales as
 (select max(csales) tpcds_cmax 
  from (select c_customer_sk,sum(ss_quantity*ss_sales_price) csales
        from store_sales
            ,customer
            ,date_dim 
        where ss_customer_sk = c_customer_sk
         and ss_sold_date_sk = d_date_sk
         and d_year in (2000,2000+1,2000+2,2000+3) 
        group by c_customer_sk)),
 best_ss_customer as
 (select c_customer_sk,sum(ss_quantity*ss_sales_price) ssales
  from store_sales
      ,customer
  where ss_customer_sk = c_customer_sk
  group by c_customer_sk
  having sum(ss_quantity*ss_sales_price) > (95/100.0) * (select
  *
from
 max_store_sales))
  select  sum(sales)
 from (select cs_quantity*cs_list_price sales
       from catalog_sales
           ,date_dim 
       where d_year = 2000 
         and d_moy = 7 
         and cs_sold_date_sk = d_date_sk 
         and cs_item_sk in (select item_sk from frequent_ss_items)
         and cs_bill_customer_sk in (select c_customer_sk from best_ss_customer)
      union all
      select ws_quantity*ws_list_price sales
       from web_sales 
           ,date_dim 
       where d_year = 2000 
         and d_moy = 7 
         and ws_sold_date_sk = d_date_sk 
         and ws_item_sk in (select item_sk from frequent_ss_items)
         and ws_bill_customer_sk in (select c_customer_sk from best_ss_customer)) 
 limit 100;","with frequent_ss_items as 
 (select substr(i_item_desc,1,30) itemdesc,i_item_sk item_sk,d_date solddate,count(*) cnt
  from store_sales
      ,date_dim 
      ,item
  where ss_sold_date_sk = d_date_sk
    and ss_item_sk = i_item_sk 
    and d_year in (2000,2000+1,2000+2,2000+3)
  group by substr(i_item_desc,1,30),i_item_sk,d_date
  having count(*) >4),
 max_store_sales as
 (select max(csales) tpcds_cmax 
  from (select c_customer_sk,sum(ss_quantity*ss_sales_price) csales
        from store_sales
            ,customer
            ,date_dim 
        where ss_customer_sk = c_customer_sk
         and ss_sold_date_sk = d_date_sk
         and d_year in (2000,2000+1,2000+2,2000+3) 
        group by c_customer_sk)),
 best_ss_customer as
 (select c_customer_sk,sum(ss_quantity*ss_sales_price) ssales
  from store_sales
      ,customer
  where ss_customer_sk = c_customer_sk
  group by c_customer_sk
  having sum(ss_quantity*ss_sales_price) > (95/100.0) * (select
  *
from
 max_store_sales))
  select  sum(sales)
 from (select cs_quantity*cs_list_price sales
       from catalog_sales
           ,date_dim 
       where d_year = 2000 
         and d_moy = 7 
         and cs_sold_date_sk = d_date_sk 
         and cs_item_sk in (select item_sk from frequent_ss_items)
         and cs_bill_customer_sk in (select c_customer_sk from best_ss_customer)
      union all
      select ws_quantity*ws_list_price sales
       from web_sales 
           ,date_dim 
       where d_year = 2000 
         and d_moy = 7 
         and ws_sold_date_sk = d_date_sk 
         and ws_item_sk in (select item_sk from frequent_ss_items)
         and ws_bill_customer_sk in (select c_customer_sk from best_ss_customer)) 
 limit 100;",None,tpcds,"with frequent_ss_items as 
 (select substr(i_item_desc,1,30) itemdesc,i_item_sk item_sk,d_date solddate,count(*) cnt
  from store_sales
      ,date_dim 
      ,item
  where ss_sold_date_sk = d_date_sk
    and ss_item_sk = i_item_sk 
    and d_year in (2000,2000+1,2000+2,2000+3)
  group by substr(i_item_desc,1,30),i_item_sk,d_date
  having count(*) >4),
 max_store_sales as
 (select max(csales) tpcds_cmax 
  from (select c_customer_sk,sum(ss_quantity*ss_sales_price) csales
        from store_sales
            ,customer
            ,date_dim 
        where ss_customer_sk = c_customer_sk
         and ss_sold_date_sk = d_date_sk
         and d_year in (2000,2000+1,2000+2,2000+3) 
        group by c_customer_sk)),
 best_ss_customer as
 (select c_customer_sk,sum(ss_quantity*ss_sales_price) ssales
  from store_sales
      ,customer
  where ss_customer_sk = c_customer_sk
  group by c_customer_sk
  having sum(ss_quantity*ss_sales_price) > (95/100.0) * (select
  *
from
 max_store_sales))
  select  sum(sales)
 from (select cs_quantity*cs_list_price sales
       from catalog_sales
           ,date_dim 
       where d_year = 2000 
         and d_moy = 7 
         and cs_sold_date_sk = d_date_sk 
         and cs_item_sk in (select item_sk from frequent_ss_items)
         and cs_bill_customer_sk in (select c_customer_sk from best_ss_customer)
      union all
      select ws_quantity*ws_list_price sales
       from web_sales 
           ,date_dim 
       where d_year = 2000 
         and d_moy = 7 
         and ws_sold_date_sk = d_date_sk 
         and ws_item_sk in (select item_sk from frequent_ss_items)
         and ws_bill_customer_sk in (select c_customer_sk from best_ss_customer)) 
 limit 100;","ConstantFolding,EliminateLimits"
69,sql_068_2.sql,"with frequent_ss_items as
 (select substr(i_item_desc,1,30) itemdesc,i_item_sk item_sk,d_date solddate,count(*) cnt
  from store_sales
      ,date_dim
      ,item
  where ss_sold_date_sk = d_date_sk
    and ss_item_sk = i_item_sk
    and d_year in (2000,2000 + 1,2000 + 2,2000 + 3)
  group by substr(i_item_desc,1,30),i_item_sk,d_date
  having count(*) >4),
 max_store_sales as
 (select max(csales) tpcds_cmax
  from (select c_customer_sk,sum(ss_quantity*ss_sales_price) csales
        from store_sales
            ,customer
            ,date_dim 
        where ss_customer_sk = c_customer_sk
         and ss_sold_date_sk = d_date_sk
         and d_year in (2000,2000+1,2000+2,2000+3)
        group by c_customer_sk)),
 best_ss_customer as
 (select c_customer_sk,sum(ss_quantity*ss_sales_price) ssales
  from store_sales
      ,customer
  where ss_customer_sk = c_customer_sk
  group by c_customer_sk
  having sum(ss_quantity*ss_sales_price) > (95/100.0) * (select
  *
 from max_store_sales))
  select  c_last_name,c_first_name,sales
 from (select c_last_name,c_first_name,sum(cs_quantity*cs_list_price) sales
        from catalog_sales
            ,customer
            ,date_dim 
        where d_year = 2000 
         and d_moy = 7 
         and cs_sold_date_sk = d_date_sk 
         and cs_item_sk in (select item_sk from frequent_ss_items)
         and cs_bill_customer_sk in (select c_customer_sk from best_ss_customer)
         and cs_bill_customer_sk = c_customer_sk 
       group by c_last_name,c_first_name
      union all
      select c_last_name,c_first_name,sum(ws_quantity*ws_list_price) sales
       from web_sales
           ,customer
           ,date_dim 
       where d_year = 2000 
         and d_moy = 7 
         and ws_sold_date_sk = d_date_sk 
         and ws_item_sk in (select item_sk from frequent_ss_items)
         and ws_bill_customer_sk in (select c_customer_sk from best_ss_customer)
         and ws_bill_customer_sk = c_customer_sk
       group by c_last_name,c_first_name) 
     order by c_last_name,c_first_name,sales
  limit 100;","with frequent_ss_items as
 (select substr(i_item_desc,1,30) itemdesc,i_item_sk item_sk,d_date solddate,count(*) cnt
  from store_sales
      ,date_dim
      ,item
  where ss_sold_date_sk = d_date_sk
    and ss_item_sk = i_item_sk
    and d_year in (2000,2000 + 1,2000 + 2,2000 + 3)
  group by substr(i_item_desc,1,30),i_item_sk,d_date
  having count(*) >4),
 max_store_sales as
 (select max(csales) tpcds_cmax
  from (select c_customer_sk,sum(ss_quantity*ss_sales_price) csales
        from store_sales
            ,customer
            ,date_dim 
        where ss_customer_sk = c_customer_sk
         and ss_sold_date_sk = d_date_sk
         and d_year in (2000,2000+1,2000+2,2000+3)
        group by c_customer_sk)),
 best_ss_customer as
 (select c_customer_sk,sum(ss_quantity*ss_sales_price) ssales
  from store_sales
      ,customer
  where ss_customer_sk = c_customer_sk
  group by c_customer_sk
  having sum(ss_quantity*ss_sales_price) > (95/100.0) * (select
  *
 from max_store_sales))
  select  c_last_name,c_first_name,sales
 from (select c_last_name,c_first_name,sum(cs_quantity*cs_list_price) sales
        from catalog_sales
            ,customer
            ,date_dim 
        where d_year = 2000 
         and d_moy = 7 
         and cs_sold_date_sk = d_date_sk 
         and cs_item_sk in (select item_sk from frequent_ss_items)
         and cs_bill_customer_sk in (select c_customer_sk from best_ss_customer)
         and cs_bill_customer_sk = c_customer_sk 
       group by c_last_name,c_first_name
      union all
      select c_last_name,c_first_name,sum(ws_quantity*ws_list_price) sales
       from web_sales
           ,customer
           ,date_dim 
       where d_year = 2000 
         and d_moy = 7 
         and ws_sold_date_sk = d_date_sk 
         and ws_item_sk in (select item_sk from frequent_ss_items)
         and ws_bill_customer_sk in (select c_customer_sk from best_ss_customer)
         and ws_bill_customer_sk = c_customer_sk
       group by c_last_name,c_first_name) 
     order by c_last_name,c_first_name,sales
  limit 100;",RemoveNoopOperators,tpcds,"with frequent_ss_items as
 (select substr(i_item_desc,1,30) itemdesc,i_item_sk item_sk,d_date solddate,count(*) cnt
  from store_sales
      ,date_dim
      ,item
  where ss_sold_date_sk = d_date_sk
    and ss_item_sk = i_item_sk
    and d_year in (2000,2000 + 1,2000 + 2,2000 + 3)
  group by substr(i_item_desc,1,30),i_item_sk,d_date
  having count(*) >4),
 max_store_sales as
 (select max(csales) tpcds_cmax
  from (select c_customer_sk,sum(ss_quantity*ss_sales_price) csales
        from store_sales
            ,customer
            ,date_dim 
        where ss_customer_sk = c_customer_sk
         and ss_sold_date_sk = d_date_sk
         and d_year in (2000,2000+1,2000+2,2000+3)
        group by c_customer_sk)),
 best_ss_customer as
 (select c_customer_sk,sum(ss_quantity*ss_sales_price) ssales
  from store_sales
      ,customer
  where ss_customer_sk = c_customer_sk
  group by c_customer_sk
  having sum(ss_quantity*ss_sales_price) > (95/100.0) * (select
  *
 from max_store_sales))
  select  c_last_name,c_first_name,sales
 from (select c_last_name,c_first_name,sum(cs_quantity*cs_list_price) sales
        from catalog_sales
            ,customer
            ,date_dim 
        where d_year = 2000 
         and d_moy = 7 
         and cs_sold_date_sk = d_date_sk 
         and cs_item_sk in (select item_sk from frequent_ss_items)
         and cs_bill_customer_sk in (select c_customer_sk from best_ss_customer)
         and cs_bill_customer_sk = c_customer_sk 
       group by c_last_name,c_first_name
      union all
      select c_last_name,c_first_name,sum(ws_quantity*ws_list_price) sales
       from web_sales
           ,customer
           ,date_dim 
       where d_year = 2000 
         and d_moy = 7 
         and ws_sold_date_sk = d_date_sk 
         and ws_item_sk in (select item_sk from frequent_ss_items)
         and ws_bill_customer_sk in (select c_customer_sk from best_ss_customer)
         and ws_bill_customer_sk = c_customer_sk
       group by c_last_name,c_first_name) 
     order by c_last_name,c_first_name,sales
  limit 100;",None
70,sql_069_1.sql,"with  cross_items as
 (select i_item_sk ss_item_sk
 from item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from store_sales
     ,item iss
     ,date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 1999 AND 1999 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from catalog_sales
     ,item ics
     ,date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 1999 AND 1999 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from web_sales
     ,item iws
     ,date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 1999 AND 1999 + 2)
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from store_sales
           ,date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 1999 and 1999 + 2
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from catalog_sales
           ,date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 1999 and 1999 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from web_sales
           ,date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 1999 and 1999 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from store_sales
           ,item
           ,date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 1999+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from catalog_sales
           ,item
           ,date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 1999+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from web_sales
           ,item
           ,date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 1999+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100;","SELECT channel, i_brand_id, i_class_id, i_category_id, SUM(sales), SUM(number_sales) FROM (SELECT * FROM (SELECT 'store' AS channel, t10.i_brand_id, t10.i_class_id, t10.i_category_id, t10.sales, t10.number_sales FROM (SELECT item.i_brand_id, item.i_class_id, item.i_category_id, SUM(store_sales.ss_quantity * store_sales.ss_list_price) AS sales, COUNT(*) AS number_sales FROM store_sales INNER JOIN item ON store_sales.ss_item_sk = item.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year = 1999 + 2 AND d_moy = 11) AS t ON store_sales.ss_sold_date_sk = t.d_date_sk INNER JOIN (SELECT item0.i_item_sk AS ss_item_sk FROM item AS item0 INNER JOIN (SELECT * FROM (SELECT item1.i_brand_id AS brand_id, item1.i_class_id AS class_id, item1.i_category_id AS category_id FROM store_sales AS store_sales0 INNER JOIN item AS item1 ON store_sales0.ss_item_sk = item1.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t0 ON store_sales0.ss_sold_date_sk = t0.d_date_sk INTERSECT SELECT item2.i_brand_id, item2.i_class_id, item2.i_category_id FROM catalog_sales INNER JOIN item AS item2 ON catalog_sales.cs_item_sk = item2.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t2 ON catalog_sales.cs_sold_date_sk = t2.d_date_sk) AS t INTERSECT SELECT item3.i_brand_id, item3.i_class_id, item3.i_category_id FROM web_sales INNER JOIN item AS item3 ON web_sales.ws_item_sk = item3.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t5 ON web_sales.ws_sold_date_sk = t5.d_date_sk) AS t7 ON item0.i_brand_id = t7.brand_id AND item0.i_class_id = t7.class_id AND item0.i_category_id = t7.category_id) AS t8 ON store_sales.ss_item_sk = t8.ss_item_sk GROUP BY item.i_brand_id, item.i_class_id, item.i_category_id) AS t10 INNER JOIN (SELECT AVG(quantity * list_price) AS average_sales FROM (SELECT * FROM (SELECT store_sales1.ss_quantity AS quantity, store_sales1.ss_list_price AS list_price FROM store_sales AS store_sales1 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t11 ON store_sales1.ss_sold_date_sk = t11.d_date_sk UNION ALL SELECT catalog_sales0.cs_quantity AS quantity, catalog_sales0.cs_list_price AS list_price FROM catalog_sales AS catalog_sales0 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t13 ON catalog_sales0.cs_sold_date_sk = t13.d_date_sk) AS t UNION ALL SELECT web_sales0.ws_quantity AS quantity, web_sales0.ws_list_price AS list_price FROM web_sales AS web_sales0 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t16 ON web_sales0.ws_sold_date_sk = t16.d_date_sk) AS t18) AS t21 ON t10.sales > t21.average_sales UNION ALL SELECT 'catalog' AS channel, t34.i_brand_id, t34.i_class_id, t34.i_category_id, t34.sales, t34.number_sales FROM (SELECT item4.i_brand_id, item4.i_class_id, item4.i_category_id, SUM(catalog_sales1.cs_quantity * catalog_sales1.cs_list_price) AS sales, COUNT(*) AS number_sales FROM catalog_sales AS catalog_sales1 INNER JOIN item AS item4 ON catalog_sales1.cs_item_sk = item4.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year = 1999 + 2 AND d_moy = 11) AS t23 ON catalog_sales1.cs_sold_date_sk = t23.d_date_sk INNER JOIN (SELECT item5.i_item_sk AS ss_item_sk FROM item AS item5 INNER JOIN (SELECT * FROM (SELECT item6.i_brand_id AS brand_id, item6.i_class_id AS class_id, item6.i_category_id AS category_id FROM store_sales AS store_sales2 INNER JOIN item AS item6 ON store_sales2.ss_item_sk = item6.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t24 ON store_sales2.ss_sold_date_sk = t24.d_date_sk INTERSECT SELECT item7.i_brand_id, item7.i_class_id, item7.i_category_id FROM catalog_sales AS catalog_sales2 INNER JOIN item AS item7 ON catalog_sales2.cs_item_sk = item7.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t26 ON catalog_sales2.cs_sold_date_sk = t26.d_date_sk) AS t INTERSECT SELECT item8.i_brand_id, item8.i_class_id, item8.i_category_id FROM web_sales AS web_sales1 INNER JOIN item AS item8 ON web_sales1.ws_item_sk = item8.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t29 ON web_sales1.ws_sold_date_sk = t29.d_date_sk) AS t31 ON item5.i_brand_id = t31.brand_id AND item5.i_class_id = t31.class_id AND item5.i_category_id = t31.category_id) AS t32 ON catalog_sales1.cs_item_sk = t32.ss_item_sk GROUP BY item4.i_brand_id, item4.i_class_id, item4.i_category_id) AS t34 INNER JOIN (SELECT AVG(quantity * list_price) AS average_sales FROM (SELECT * FROM (SELECT store_sales3.ss_quantity AS quantity, store_sales3.ss_list_price AS list_price FROM store_sales AS store_sales3 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t35 ON store_sales3.ss_sold_date_sk = t35.d_date_sk UNION ALL SELECT catalog_sales3.cs_quantity AS quantity, catalog_sales3.cs_list_price AS list_price FROM catalog_sales AS catalog_sales3 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t37 ON catalog_sales3.cs_sold_date_sk = t37.d_date_sk) AS t UNION ALL SELECT web_sales2.ws_quantity AS quantity, web_sales2.ws_list_price AS list_price FROM web_sales AS web_sales2 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t40 ON web_sales2.ws_sold_date_sk = t40.d_date_sk) AS t42) AS t45 ON t34.sales > t45.average_sales) AS t UNION ALL SELECT 'web' AS channel, t59.i_brand_id, t59.i_class_id, t59.i_category_id, t59.sales, t59.number_sales FROM (SELECT item9.i_brand_id, item9.i_class_id, item9.i_category_id, SUM(web_sales3.ws_quantity * web_sales3.ws_list_price) AS sales, COUNT(*) AS number_sales FROM web_sales AS web_sales3 INNER JOIN item AS item9 ON web_sales3.ws_item_sk = item9.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year = 1999 + 2 AND d_moy = 11) AS t48 ON web_sales3.ws_sold_date_sk = t48.d_date_sk INNER JOIN (SELECT item10.i_item_sk AS ss_item_sk FROM item AS item10 INNER JOIN (SELECT * FROM (SELECT item11.i_brand_id AS brand_id, item11.i_class_id AS class_id, item11.i_category_id AS category_id FROM store_sales AS store_sales4 INNER JOIN item AS item11 ON store_sales4.ss_item_sk = item11.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t49 ON store_sales4.ss_sold_date_sk = t49.d_date_sk INTERSECT SELECT item12.i_brand_id, item12.i_class_id, item12.i_category_id FROM catalog_sales AS catalog_sales4 INNER JOIN item AS item12 ON catalog_sales4.cs_item_sk = item12.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t51 ON catalog_sales4.cs_sold_date_sk = t51.d_date_sk) AS t INTERSECT SELECT item13.i_brand_id, item13.i_class_id, item13.i_category_id FROM web_sales AS web_sales4 INNER JOIN item AS item13 ON web_sales4.ws_item_sk = item13.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t54 ON web_sales4.ws_sold_date_sk = t54.d_date_sk) AS t56 ON item10.i_brand_id = t56.brand_id AND item10.i_class_id = t56.class_id AND item10.i_category_id = t56.category_id) AS t57 ON web_sales3.ws_item_sk = t57.ss_item_sk GROUP BY item9.i_brand_id, item9.i_class_id, item9.i_category_id) AS t59 INNER JOIN (SELECT AVG(quantity * list_price) AS average_sales FROM (SELECT * FROM (SELECT store_sales5.ss_quantity AS quantity, store_sales5.ss_list_price AS list_price FROM store_sales AS store_sales5 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t60 ON store_sales5.ss_sold_date_sk = t60.d_date_sk UNION ALL SELECT catalog_sales5.cs_quantity AS quantity, catalog_sales5.cs_list_price AS list_price FROM catalog_sales AS catalog_sales5 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t62 ON catalog_sales5.cs_sold_date_sk = t62.d_date_sk) AS t UNION ALL SELECT web_sales5.ws_quantity AS quantity, web_sales5.ws_list_price AS list_price FROM web_sales AS web_sales5 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t65 ON web_sales5.ws_sold_date_sk = t65.d_date_sk) AS t67) AS t70 ON t59.sales > t70.average_sales) AS t72 GROUP BY ROLLUP(channel, i_brand_id, i_class_id, i_category_id) ORDER BY channel, i_brand_id, i_class_id, i_category_id LIMIT 100","PushProjectionThroughUnion,RemoveNoopOperators",tpcds,"with  cross_items as
 (select i_item_sk ss_item_sk
 from item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from store_sales
     ,item iss
     ,date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 1999 AND 1999 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from catalog_sales
     ,item ics
     ,date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 1999 AND 1999 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from web_sales
     ,item iws
     ,date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 1999 AND 1999 + 2)
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from store_sales
           ,date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 1999 and 1999 + 2
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from catalog_sales
           ,date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 1999 and 1999 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from web_sales
           ,date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 1999 and 1999 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from store_sales
           ,item
           ,date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 1999+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from catalog_sales
           ,item
           ,date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 1999+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from web_sales
           ,item
           ,date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 1999+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100;","PushDownLeftSemiAntiJoin,PushProjectionThroughUnion"
71,sql_069_2.sql,"with  cross_items as
 (select i_item_sk ss_item_sk
 from item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from store_sales
     ,item iss
     ,date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 1999 AND 1999 + 2
 intersect
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from catalog_sales
     ,item ics
     ,date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 1999 AND 1999 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from web_sales
     ,item iws
     ,date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 1999 AND 1999 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
(select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from store_sales
           ,date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 1999 and 1999 + 2
       union all
       select cs_quantity quantity
             ,cs_list_price list_price
       from catalog_sales
           ,date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 1999 and 1999 + 2
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from web_sales
           ,date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 1999 and 1999 + 2) x)
  select  this_year.channel ty_channel
                           ,this_year.i_brand_id ty_brand
                           ,this_year.i_class_id ty_class
                           ,this_year.i_category_id ty_category
                           ,this_year.sales ty_sales
                           ,this_year.number_sales ty_number_sales
                           ,last_year.channel ly_channel
                           ,last_year.i_brand_id ly_brand
                           ,last_year.i_class_id ly_class
                           ,last_year.i_category_id ly_category
                           ,last_year.sales ly_sales
                           ,last_year.number_sales ly_number_sales 
 from
 (select 'store' channel, i_brand_id,i_class_id,i_category_id
        ,sum(ss_quantity*ss_list_price) sales, count(*) number_sales
 from store_sales 
     ,item
     ,date_dim
 where ss_item_sk in (select ss_item_sk from cross_items)
   and ss_item_sk = i_item_sk
   and ss_sold_date_sk = d_date_sk
   and d_week_seq = (select d_week_seq
                     from date_dim
                     where d_year = 1999 + 1
                       and d_moy = 12
                       and d_dom = 12)
 group by i_brand_id,i_class_id,i_category_id
 having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)) this_year,
 (select 'store' channel, i_brand_id,i_class_id
        ,i_category_id, sum(ss_quantity*ss_list_price) sales, count(*) number_sales
 from store_sales
     ,item
     ,date_dim
 where ss_item_sk in (select ss_item_sk from cross_items)
   and ss_item_sk = i_item_sk
   and ss_sold_date_sk = d_date_sk
   and d_week_seq = (select d_week_seq
                     from date_dim
                     where d_year = 1999
                       and d_moy = 12
                       and d_dom = 12)
 group by i_brand_id,i_class_id,i_category_id
 having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)) last_year
 where this_year.i_brand_id= last_year.i_brand_id
   and this_year.i_class_id = last_year.i_class_id
   and this_year.i_category_id = last_year.i_category_id
 order by this_year.channel, this_year.i_brand_id, this_year.i_class_id, this_year.i_category_id
 limit 100;","SELECT t24.channel AS ty_channel, t24.i_brand_id AS ty_brand, t24.i_class_id AS ty_class, t24.i_category_id AS ty_category, t24.sales AS ty_sales, t24.number_sales AS ty_number_sales, t50.channel AS ly_channel, t50.i_brand_id AS ly_brand, t50.i_class_id AS ly_class, t50.i_category_id AS ly_category, t50.sales AS ly_sales, t50.number_sales AS ly_number_sales FROM (SELECT 'store' AS channel, t12.i_brand_id, t12.i_class_id, t12.i_category_id, t12.sales, t12.number_sales FROM (SELECT item.i_brand_id, item.i_class_id, item.i_category_id, SUM(store_sales.ss_quantity * store_sales.ss_list_price) AS sales, COUNT(*) AS number_sales FROM store_sales INNER JOIN item ON store_sales.ss_item_sk = item.i_item_sk INNER JOIN date_dim ON store_sales.ss_sold_date_sk = date_dim.d_date_sk INNER JOIN (SELECT item0.i_item_sk AS ss_item_sk FROM item AS item0 INNER JOIN (SELECT * FROM (SELECT item1.i_brand_id AS brand_id, item1.i_class_id AS class_id, item1.i_category_id AS category_id FROM store_sales AS store_sales0 INNER JOIN item AS item1 ON store_sales0.ss_item_sk = item1.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t ON store_sales0.ss_sold_date_sk = t.d_date_sk INTERSECT SELECT item2.i_brand_id, item2.i_class_id, item2.i_category_id FROM catalog_sales INNER JOIN item AS item2 ON catalog_sales.cs_item_sk = item2.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t1 ON catalog_sales.cs_sold_date_sk = t1.d_date_sk) AS t INTERSECT SELECT item3.i_brand_id, item3.i_class_id, item3.i_category_id FROM web_sales INNER JOIN item AS item3 ON web_sales.ws_item_sk = item3.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t4 ON web_sales.ws_sold_date_sk = t4.d_date_sk) AS t6 ON item0.i_brand_id = t6.brand_id AND item0.i_class_id = t6.class_id AND item0.i_category_id = t6.category_id) AS t7 ON store_sales.ss_item_sk = t7.ss_item_sk INNER JOIN (SELECT d_week_seq FROM date_dim WHERE d_year = 1999 + 1 AND d_moy = 12 AND d_dom = 12) AS t9 ON date_dim.d_week_seq = t9.d_week_seq GROUP BY item.i_brand_id, item.i_class_id, item.i_category_id) AS t12 INNER JOIN (SELECT AVG(quantity * list_price) AS average_sales FROM (SELECT * FROM (SELECT store_sales1.ss_quantity AS quantity, store_sales1.ss_list_price AS list_price FROM store_sales AS store_sales1 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t13 ON store_sales1.ss_sold_date_sk = t13.d_date_sk UNION ALL SELECT catalog_sales0.cs_quantity AS quantity, catalog_sales0.cs_list_price AS list_price FROM catalog_sales AS catalog_sales0 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t15 ON catalog_sales0.cs_sold_date_sk = t15.d_date_sk) AS t UNION ALL SELECT web_sales0.ws_quantity AS quantity, web_sales0.ws_list_price AS list_price FROM web_sales AS web_sales0 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t18 ON web_sales0.ws_sold_date_sk = t18.d_date_sk) AS t20) AS t23 ON t12.sales > t23.average_sales) AS t24 INNER JOIN (SELECT 'store' AS channel, t38.i_brand_id, t38.i_class_id, t38.i_category_id, t38.sales, t38.number_sales FROM (SELECT item4.i_brand_id, item4.i_class_id, item4.i_category_id, SUM(store_sales2.ss_quantity * store_sales2.ss_list_price) AS sales, COUNT(*) AS number_sales FROM store_sales AS store_sales2 INNER JOIN item AS item4 ON store_sales2.ss_item_sk = item4.i_item_sk INNER JOIN date_dim AS date_dim7 ON store_sales2.ss_sold_date_sk = date_dim7.d_date_sk INNER JOIN (SELECT item5.i_item_sk AS ss_item_sk FROM item AS item5 INNER JOIN (SELECT * FROM (SELECT item6.i_brand_id AS brand_id, item6.i_class_id AS class_id, item6.i_category_id AS category_id FROM store_sales AS store_sales3 INNER JOIN item AS item6 ON store_sales3.ss_item_sk = item6.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t25 ON store_sales3.ss_sold_date_sk = t25.d_date_sk INTERSECT SELECT item7.i_brand_id, item7.i_class_id, item7.i_category_id FROM catalog_sales AS catalog_sales1 INNER JOIN item AS item7 ON catalog_sales1.cs_item_sk = item7.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t27 ON catalog_sales1.cs_sold_date_sk = t27.d_date_sk) AS t INTERSECT SELECT item8.i_brand_id, item8.i_class_id, item8.i_category_id FROM web_sales AS web_sales1 INNER JOIN item AS item8 ON web_sales1.ws_item_sk = item8.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t30 ON web_sales1.ws_sold_date_sk = t30.d_date_sk) AS t32 ON item5.i_brand_id = t32.brand_id AND item5.i_class_id = t32.class_id AND item5.i_category_id = t32.category_id) AS t33 ON store_sales2.ss_item_sk = t33.ss_item_sk INNER JOIN (SELECT d_week_seq FROM date_dim WHERE d_year = 1999 AND d_moy = 12 AND d_dom = 12) AS t35 ON date_dim7.d_week_seq = t35.d_week_seq GROUP BY item4.i_brand_id, item4.i_class_id, item4.i_category_id) AS t38 INNER JOIN (SELECT AVG(quantity * list_price) AS average_sales FROM (SELECT * FROM (SELECT store_sales4.ss_quantity AS quantity, store_sales4.ss_list_price AS list_price FROM store_sales AS store_sales4 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t39 ON store_sales4.ss_sold_date_sk = t39.d_date_sk UNION ALL SELECT catalog_sales2.cs_quantity AS quantity, catalog_sales2.cs_list_price AS list_price FROM catalog_sales AS catalog_sales2 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t41 ON catalog_sales2.cs_sold_date_sk = t41.d_date_sk) AS t UNION ALL SELECT web_sales2.ws_quantity AS quantity, web_sales2.ws_list_price AS list_price FROM web_sales AS web_sales2 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t44 ON web_sales2.ws_sold_date_sk = t44.d_date_sk) AS t46) AS t49 ON t38.sales > t49.average_sales) AS t50 ON t24.i_brand_id = t50.i_brand_id AND t24.i_class_id = t50.i_class_id AND t24.i_category_id = t50.i_category_id ORDER BY t24.channel, t24.i_brand_id, t24.i_class_id, t24.i_category_id LIMIT 100",None,tpcds,"with  cross_items as
 (select i_item_sk ss_item_sk
 from item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from store_sales
     ,item iss
     ,date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 1999 AND 1999 + 2
 intersect
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from catalog_sales
     ,item ics
     ,date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 1999 AND 1999 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from web_sales
     ,item iws
     ,date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 1999 AND 1999 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
(select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from store_sales
           ,date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 1999 and 1999 + 2
       union all
       select cs_quantity quantity
             ,cs_list_price list_price
       from catalog_sales
           ,date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 1999 and 1999 + 2
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from web_sales
           ,date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 1999 and 1999 + 2) x)
  select  this_year.channel ty_channel
                           ,this_year.i_brand_id ty_brand
                           ,this_year.i_class_id ty_class
                           ,this_year.i_category_id ty_category
                           ,this_year.sales ty_sales
                           ,this_year.number_sales ty_number_sales
                           ,last_year.channel ly_channel
                           ,last_year.i_brand_id ly_brand
                           ,last_year.i_class_id ly_class
                           ,last_year.i_category_id ly_category
                           ,last_year.sales ly_sales
                           ,last_year.number_sales ly_number_sales 
 from
 (select 'store' channel, i_brand_id,i_class_id,i_category_id
        ,sum(ss_quantity*ss_list_price) sales, count(*) number_sales
 from store_sales 
     ,item
     ,date_dim
 where ss_item_sk in (select ss_item_sk from cross_items)
   and ss_item_sk = i_item_sk
   and ss_sold_date_sk = d_date_sk
   and d_week_seq = (select d_week_seq
                     from date_dim
                     where d_year = 1999 + 1
                       and d_moy = 12
                       and d_dom = 12)
 group by i_brand_id,i_class_id,i_category_id
 having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)) this_year,
 (select 'store' channel, i_brand_id,i_class_id
        ,i_category_id, sum(ss_quantity*ss_list_price) sales, count(*) number_sales
 from store_sales
     ,item
     ,date_dim
 where ss_item_sk in (select ss_item_sk from cross_items)
   and ss_item_sk = i_item_sk
   and ss_sold_date_sk = d_date_sk
   and d_week_seq = (select d_week_seq
                     from date_dim
                     where d_year = 1999
                       and d_moy = 12
                       and d_dom = 12)
 group by i_brand_id,i_class_id,i_category_id
 having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)) last_year
 where this_year.i_brand_id= last_year.i_brand_id
   and this_year.i_class_id = last_year.i_class_id
   and this_year.i_category_id = last_year.i_category_id
 order by this_year.channel, this_year.i_brand_id, this_year.i_class_id, this_year.i_category_id
 limit 100;",PushLeftSemiLeftAntiThroughJoin
72,sql_070.sql,"with v1 as(
 select i_category, i_brand,
        cc_name,
        d_year, d_moy,
        sum(cs_sales_price) sum_sales,
        avg(sum(cs_sales_price)) over
          (partition by i_category, i_brand,
                     cc_name, d_year)
          avg_monthly_sales,
        rank() over
          (partition by i_category, i_brand,
                     cc_name
           order by d_year, d_moy) rn
 from item, catalog_sales, date_dim, call_center
 where cs_item_sk = i_item_sk and
       cs_sold_date_sk = d_date_sk and
       cc_call_center_sk= cs_call_center_sk and
       (
         d_year = 1999 or
         ( d_year = 1999-1 and d_moy =12) or
         ( d_year = 1999+1 and d_moy =1)
       )
 group by i_category, i_brand,
          cc_name , d_year, d_moy),
 v2 as(
 select v1.cc_name
        ,v1.d_year
        ,v1.avg_monthly_sales
        ,v1.sum_sales, v1_lag.sum_sales psum, v1_lead.sum_sales nsum
 from v1, v1 v1_lag, v1 v1_lead
 where v1.i_category = v1_lag.i_category and
       v1.i_category = v1_lead.i_category and
       v1.i_brand = v1_lag.i_brand and
       v1.i_brand = v1_lead.i_brand and
       v1. cc_name = v1_lag. cc_name and
       v1. cc_name = v1_lead. cc_name and
       v1.rn = v1_lag.rn + 1 and
       v1.rn = v1_lead.rn - 1)
  select  *
 from v2
 where  d_year = 1999 and
        avg_monthly_sales > 0 and
        case when avg_monthly_sales > 0 then abs(sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1
 order by sum_sales - avg_monthly_sales, psum
 limit 100;","with v1 as(
 select i_category, i_brand,
        cc_name,
        d_year, d_moy,
        sum(cs_sales_price) sum_sales,
        avg(sum(cs_sales_price)) over
          (partition by i_category, i_brand,
                     cc_name, d_year)
          avg_monthly_sales,
        rank() over
          (partition by i_category, i_brand,
                     cc_name
           order by d_year, d_moy) rn
 from item, catalog_sales, date_dim, call_center
 where cs_item_sk = i_item_sk and
       cs_sold_date_sk = d_date_sk and
       cc_call_center_sk= cs_call_center_sk and
       (
         d_year = 1999 or
         ( d_year = 1999-1 and d_moy =12) or
         ( d_year = 1999+1 and d_moy =1)
       )
 group by i_category, i_brand,
          cc_name , d_year, d_moy),
 v2 as(
 select v1.cc_name
        ,v1.d_year
        ,v1.avg_monthly_sales
        ,v1.sum_sales, v1_lag.sum_sales psum, v1_lead.sum_sales nsum
 from v1, v1 v1_lag, v1 v1_lead
 where v1.i_category = v1_lag.i_category and
       v1.i_category = v1_lead.i_category and
       v1.i_brand = v1_lag.i_brand and
       v1.i_brand = v1_lead.i_brand and
       v1. cc_name = v1_lag. cc_name and
       v1. cc_name = v1_lead. cc_name and
       v1.rn = v1_lag.rn + 1 and
       v1.rn = v1_lead.rn - 1)
  select  *
 from v2
 where  d_year = 1999 and
        avg_monthly_sales > 0 and
        case when avg_monthly_sales > 0 then abs(sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1
 order by sum_sales - avg_monthly_sales, psum
 limit 100;","ConstantFolding,RemoveRedundantAliases",tpcds,"with v1 as(
 select i_category, i_brand,
        cc_name,
        d_year, d_moy,
        sum(cs_sales_price) sum_sales,
        avg(sum(cs_sales_price)) over
          (partition by i_category, i_brand,
                     cc_name, d_year)
          avg_monthly_sales,
        rank() over
          (partition by i_category, i_brand,
                     cc_name
           order by d_year, d_moy) rn
 from item, catalog_sales, date_dim, call_center
 where cs_item_sk = i_item_sk and
       cs_sold_date_sk = d_date_sk and
       cc_call_center_sk= cs_call_center_sk and
       (
         d_year = 1999 or
         ( d_year = 1999-1 and d_moy =12) or
         ( d_year = 1999+1 and d_moy =1)
       )
 group by i_category, i_brand,
          cc_name , d_year, d_moy),
 v2 as(
 select v1.cc_name
        ,v1.d_year
        ,v1.avg_monthly_sales
        ,v1.sum_sales, v1_lag.sum_sales psum, v1_lead.sum_sales nsum
 from v1, v1 v1_lag, v1 v1_lead
 where v1.i_category = v1_lag.i_category and
       v1.i_category = v1_lead.i_category and
       v1.i_brand = v1_lag.i_brand and
       v1.i_brand = v1_lead.i_brand and
       v1. cc_name = v1_lag. cc_name and
       v1. cc_name = v1_lead. cc_name and
       v1.rn = v1_lag.rn + 1 and
       v1.rn = v1_lead.rn - 1)
  select  *
 from v2
 where  d_year = 1999 and
        avg_monthly_sales > 0 and
        case when avg_monthly_sales > 0 then abs(sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1
 order by sum_sales - avg_monthly_sales, psum
 limit 100;",RemoveRedundantAliases
73,sql_071.sql,"select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
     (select ss_store_sk, avg(revenue) as ave
 	from
 	    (select  ss_store_sk, ss_item_sk, 
 		     sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1191 and 1191+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
     (select  ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1191 and 1191+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
       sc.revenue <= 0.1 * sb.ave and
       s_store_sk = sc.ss_store_sk and
       i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100;","select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
     (select ss_store_sk, avg(revenue) as ave
 	from
 	    (select  ss_store_sk, ss_item_sk, 
 		     sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1191 and 1191+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
     (select  ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1191 and 1191+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
       sc.revenue <= 0.1 * sb.ave and
       s_store_sk = sc.ss_store_sk and
       i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100;",None,tpcds,"select 
	s_store_name,
	i_item_desc,
	sc.revenue,
	i_current_price,
	i_wholesale_cost,
	i_brand
 from store, item,
     (select ss_store_sk, avg(revenue) as ave
 	from
 	    (select  ss_store_sk, ss_item_sk, 
 		     sum(ss_sales_price) as revenue
 		from store_sales, date_dim
 		where ss_sold_date_sk = d_date_sk and d_month_seq between 1191 and 1191+11
 		group by ss_store_sk, ss_item_sk) sa
 	group by ss_store_sk) sb,
     (select  ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue
 	from store_sales, date_dim
 	where ss_sold_date_sk = d_date_sk and d_month_seq between 1191 and 1191+11
 	group by ss_store_sk, ss_item_sk) sc
 where sb.ss_store_sk = sc.ss_store_sk and 
       sc.revenue <= 0.1 * sb.ave and
       s_store_sk = sc.ss_store_sk and
       i_item_sk = sc.ss_item_sk
 order by s_store_name, i_item_desc
limit 100;",CollapseProject
74,sql_072.sql,"select i_brand_id brand_id, i_brand brand,t_hour,t_minute,
 	sum(ext_price) ext_price
 from item, (select ws_ext_sales_price as ext_price, 
                        ws_sold_date_sk as sold_date_sk,
                        ws_item_sk as sold_item_sk,
                        ws_sold_time_sk as time_sk  
                 from web_sales,date_dim
                 where d_date_sk = ws_sold_date_sk
                   and d_moy=11
                   and d_year=2001
                 union all
                 select cs_ext_sales_price as ext_price,
                        cs_sold_date_sk as sold_date_sk,
                        cs_item_sk as sold_item_sk,
                        cs_sold_time_sk as time_sk
                 from catalog_sales,date_dim
                 where d_date_sk = cs_sold_date_sk
                   and d_moy=11
                   and d_year=2001
                 union all
                 select ss_ext_sales_price as ext_price,
                        ss_sold_date_sk as sold_date_sk,
                        ss_item_sk as sold_item_sk,
                        ss_sold_time_sk as time_sk
                 from store_sales,date_dim
                 where d_date_sk = ss_sold_date_sk
                   and d_moy=11
                   and d_year=2001
                 ) tmp,time_dim
 where
   sold_item_sk = i_item_sk
   and i_manager_id=1
   and time_sk = t_time_sk
   and (t_meal_time = 'breakfast' or t_meal_time = 'dinner')
 group by i_brand, i_brand_id,t_hour,t_minute
 order by ext_price desc, i_brand_id
 ;","SELECT item.i_brand_id AS brand_id, item.i_brand AS brand, time_dim.t_hour, time_dim.t_minute, SUM(t6.ext_price) AS ext_price FROM item, (SELECT * FROM (SELECT web_sales.ws_ext_sales_price AS ext_price, web_sales.ws_sold_date_sk AS sold_date_sk, web_sales.ws_item_sk AS sold_item_sk, web_sales.ws_sold_time_sk AS time_sk FROM web_sales, date_dim WHERE date_dim.d_date_sk = web_sales.ws_sold_date_sk AND date_dim.d_moy = 11 AND date_dim.d_year = 2001 UNION ALL SELECT catalog_sales.cs_ext_sales_price AS ext_price, catalog_sales.cs_sold_date_sk AS sold_date_sk, catalog_sales.cs_item_sk AS sold_item_sk, catalog_sales.cs_sold_time_sk AS time_sk FROM catalog_sales, date_dim AS date_dim0 WHERE date_dim0.d_date_sk = catalog_sales.cs_sold_date_sk AND date_dim0.d_moy = 11 AND date_dim0.d_year = 2001) AS t UNION ALL SELECT store_sales.ss_ext_sales_price AS ext_price, store_sales.ss_sold_date_sk AS sold_date_sk, store_sales.ss_item_sk AS sold_item_sk, store_sales.ss_sold_time_sk AS time_sk FROM store_sales, date_dim AS date_dim1 WHERE date_dim1.d_date_sk = store_sales.ss_sold_date_sk AND date_dim1.d_moy = 11 AND date_dim1.d_year = 2001) AS t6, time_dim WHERE t6.sold_item_sk = item.i_item_sk AND item.i_manager_id = 1 AND t6.time_sk = time_dim.t_time_sk AND (time_dim.t_meal_time = 'breakfast' OR time_dim.t_meal_time = 'dinner') GROUP BY item.i_brand_id, item.i_brand, time_dim.t_hour, time_dim.t_minute ORDER BY SUM(t6.ext_price) DESC, item.i_brand_id",CombineUnions,tpcds,"SELECT t197.i_brand_id AS brand_id, t197.i_brand AS brand, t198.t_hour, t198.t_minute, SUM(t197.ext_price) AS ext_price

FROM (SELECT *

FROM (SELECT *

FROM (SELECT *

FROM (SELECT *

FROM item

WHERE i_manager_id = 1) AS t183,

(SELECT web_sales13.ws_ext_sales_price AS ext_price, web_sales13.ws_sold_date_sk AS sold_date_sk, web_sales13.ws_item_sk AS sold_item_sk, web_sales13.ws_sold_time_sk AS time_sk

FROM web_sales AS web_sales13,

(SELECT *

FROM date_dim

WHERE d_moy = 12 AND d_year = 2001) AS t184

WHERE t184.d_date_sk = web_sales13.ws_sold_date_sk) AS t186

UNION ALL

SELECT *

FROM (SELECT *

FROM item

WHERE i_manager_id = 1) AS t187,

(SELECT catalog_sales13.cs_ext_sales_price AS ext_price, catalog_sales13.cs_sold_date_sk AS sold_date_sk, catalog_sales13.cs_item_sk AS sold_item_sk, catalog_sales13.cs_sold_time_sk AS time_sk

FROM catalog_sales AS catalog_sales13,

(SELECT *

FROM date_dim

WHERE d_moy = 12 AND d_year = 2001) AS t188

WHERE t188.d_date_sk = catalog_sales13.cs_sold_date_sk) AS t190) AS t

UNION ALL

SELECT *

FROM (SELECT *

FROM item

WHERE i_manager_id = 1) AS t192,

(SELECT store_sales13.ss_ext_sales_price AS ext_price, store_sales13.ss_sold_date_sk AS sold_date_sk, store_sales13.ss_item_sk AS sold_item_sk, store_sales13.ss_sold_time_sk AS time_sk

FROM store_sales AS store_sales13,

(SELECT *

FROM date_dim

WHERE d_moy = 12 AND d_year = 2001) AS t193

WHERE t193.d_date_sk = store_sales13.ss_sold_date_sk) AS t195) AS t196

WHERE sold_item_sk = i_item_sk) AS t197,

(SELECT *

FROM time_dim

WHERE t_meal_time = 'breakfast' OR t_meal_time = 'dinner') AS t198

WHERE t197.time_sk = t198.t_time_sk

GROUP BY t197.i_brand, t197.i_brand_id, t198.t_hour, t198.t_minute

ORDER BY SUM(t197.ext_price) DESC, t197.i_brand_id",None
75,sql_073.sql,"select c_last_name
       ,c_first_name
       ,c_salutation
       ,c_preferred_cust_flag
       ,ss_ticket_number
       ,cnt from
   (select ss_ticket_number
          ,ss_customer_sk
          ,count(*) cnt
    from store_sales,date_dim,store,household_demographics
    where store_sales.ss_sold_date_sk = date_dim.d_date_sk
    and store_sales.ss_store_sk = store.s_store_sk  
    and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
    and (date_dim.d_dom between 1 and 3 or date_dim.d_dom between 25 and 28)
    and (household_demographics.hd_buy_potential = '501-1000' or
         household_demographics.hd_buy_potential = 'Unknown')
    and household_demographics.hd_vehicle_count > 0
    and (case when household_demographics.hd_vehicle_count > 0 
	then household_demographics.hd_dep_count/ household_demographics.hd_vehicle_count 
	else null 
	end)  > 1.2
    and date_dim.d_year in (2000,2000+1,2000+2)
    and store.s_county in ('Ziebach County','Fairfield County','Walker County','Barrow County',
                           'Williamson County','Franklin Parish','Richland County','Luce County')
    group by ss_ticket_number,ss_customer_sk) dn,customer
    where ss_customer_sk = c_customer_sk
      and cnt between 15 and 20
    order by c_last_name,c_first_name,c_salutation,c_preferred_cust_flag desc, ss_ticket_number;","SELECT customer.c_last_name, customer.c_first_name, customer.c_salutation, customer.c_preferred_cust_flag, t4.ss_ticket_number, t4.cnt FROM (SELECT store_sales.ss_ticket_number, store_sales.ss_customer_sk, COUNT(*) AS cnt FROM store_sales INNER JOIN (SELECT * FROM date_dim WHERE (d_dom >= 1 AND d_dom <= 3 OR d_dom >= 25 AND d_dom <= 28) AND (d_year = 2000 OR d_year = 2000 + 1 OR d_year = 2000 + 2)) AS t ON store_sales.ss_sold_date_sk = t.d_date_sk INNER JOIN (SELECT * FROM store WHERE s_county IN ('Barrow County', 'Fairfield County', 'Franklin Parish', 'Luce County', 'Richland County', 'Walker County', 'Williamson County', 'Ziebach County')) AS t0 ON store_sales.ss_store_sk = t0.s_store_sk INNER JOIN (SELECT * FROM household_demographics WHERE (hd_buy_potential = '501-1000' OR hd_buy_potential = 'Unknown') AND hd_vehicle_count > 0 AND CASE WHEN hd_vehicle_count > 0 THEN hd_dep_count / hd_vehicle_count ELSE NULL END > 1.2) AS t1 ON store_sales.ss_hdemo_sk = t1.hd_demo_sk GROUP BY store_sales.ss_ticket_number, store_sales.ss_customer_sk HAVING COUNT(*) >= 15 AND COUNT(*) <= 20) AS t4 INNER JOIN customer ON t4.ss_customer_sk = customer.c_customer_sk ORDER BY customer.c_last_name, customer.c_first_name, customer.c_salutation, customer.c_preferred_cust_flag DESC, t4.ss_ticket_number",ConstantFolding,tpcds,"SELECT customer101.c_last_name, customer101.c_first_name, customer101.c_salutation, customer101.c_preferred_cust_flag, t987.ss_ticket_number, t987.cnt

FROM (SELECT t982.ss_ticket_number, t982.ss_customer_sk, COUNT(*) AS cnt

FROM (SELECT *

FROM (SELECT *

FROM store_sales AS store_sales101,

(SELECT *

FROM date_dim

WHERE (d_dom >= 1 AND d_dom <= 3 OR d_dom >= 25 AND d_dom <= 28) AND (d_year = 2000 OR d_year = 2000 + 1 OR d_year = 2000 + 2)) AS t979

WHERE store_sales101.ss_sold_date_sk = t979.d_date_sk) AS t980,

(SELECT *

FROM store

WHERE s_county IN ('Bronx County', 'Gage County', 'Hubbard County', 'Pennington County', 'Perry County', 'Salem County', 'San Miguel County', 'Sumner County')) AS t981

WHERE t980.ss_store_sk = t981.s_store_sk) AS t982,

(SELECT *

FROM household_demographics

WHERE (hd_buy_potential = '501-1000' OR hd_buy_potential = '5001-10000') AND hd_vehicle_count > 0 AND CASE WHEN hd_vehicle_count > 0 THEN hd_dep_count / hd_vehicle_count > 1.2 ELSE FALSE END) AS t983

WHERE t982.ss_hdemo_sk = t983.hd_demo_sk

GROUP BY t982.ss_ticket_number, t982.ss_customer_sk

HAVING COUNT(*) >= 15 AND COUNT(*) <= 20) AS t987,

customer AS customer101

WHERE t987.ss_customer_sk = customer101.c_customer_sk

ORDER BY customer101.c_last_name, customer101.c_first_name, customer101.c_salutation, customer101.c_preferred_cust_flag DESC, t987.ss_ticket_number",ConstantFolding
76,sql_074.sql,"select sum (ss_quantity)
 from store_sales, store, customer_demographics, customer_address, date_dim
 where s_store_sk = ss_store_sk
 and  ss_sold_date_sk = d_date_sk and d_year = 1998
 and  
 (
  (
   cd_demo_sk = ss_cdemo_sk
   and 
   cd_marital_status = 'S'
   and 
   cd_education_status = 'Primary'
   and 
   ss_sales_price between 100.00 and 150.00  
   )
 or
  (
  cd_demo_sk = ss_cdemo_sk
   and 
   cd_marital_status = 'M'
   and 
   cd_education_status = '4 yr Degree'
   and 
   ss_sales_price between 50.00 and 100.00   
  )
 or 
 (
  cd_demo_sk = ss_cdemo_sk
  and 
   cd_marital_status = 'D'
   and 
   cd_education_status = '2 yr Degree'
   and 
   ss_sales_price between 150.00 and 200.00  
 )
 )
 and
 (
  (
  ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('CO', 'IN', 'AR')
  and ss_net_profit between 0 and 2000  
  )
 or
  (ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('AZ', 'TX', 'NY')
  and ss_net_profit between 150 and 3000 
  )
 or
  (ss_addr_sk = ca_address_sk
  and
  ca_country = 'United States'
  and
  ca_state in ('ND', 'OH', 'MI')
  and ss_net_profit between 50 and 25000 
  )
 )
;","SELECT SUM(store_sales.ss_quantity) FROM store_sales, store, customer_demographics, customer_address, date_dim WHERE store.s_store_sk = store_sales.ss_store_sk AND store_sales.ss_sold_date_sk = date_dim.d_date_sk AND date_dim.d_year = 1998 AND (customer_demographics.cd_demo_sk = store_sales.ss_cdemo_sk AND customer_demographics.cd_marital_status = 'S' AND customer_demographics.cd_education_status = 'Primary' AND store_sales.ss_sales_price >= 100.00 AND store_sales.ss_sales_price <= 150.00 OR customer_demographics.cd_demo_sk = store_sales.ss_cdemo_sk AND customer_demographics.cd_marital_status = 'M' AND customer_demographics.cd_education_status = '4 yr Degree' AND store_sales.ss_sales_price >= 50.00 AND store_sales.ss_sales_price <= 100.00 OR customer_demographics.cd_demo_sk = store_sales.ss_cdemo_sk AND customer_demographics.cd_marital_status = 'D' AND customer_demographics.cd_education_status = '2 yr Degree' AND store_sales.ss_sales_price >= 150.00 AND store_sales.ss_sales_price <= 200.00) AND (store_sales.ss_addr_sk = customer_address.ca_address_sk AND customer_address.ca_country = 'United States' AND (customer_address.ca_state = 'CO' OR customer_address.ca_state = 'IN' OR customer_address.ca_state = 'AR') AND store_sales.ss_net_profit >= 0 AND store_sales.ss_net_profit <= 2000 OR store_sales.ss_addr_sk = customer_address.ca_address_sk AND customer_address.ca_country = 'United States' AND (customer_address.ca_state = 'AZ' OR customer_address.ca_state = 'TX' OR customer_address.ca_state = 'NY') AND store_sales.ss_net_profit >= 150 AND store_sales.ss_net_profit <= 3000 OR store_sales.ss_addr_sk = customer_address.ca_address_sk AND customer_address.ca_country = 'United States' AND (customer_address.ca_state = 'ND' OR customer_address.ca_state = 'OH' OR customer_address.ca_state = 'MI') AND store_sales.ss_net_profit >= 50 AND store_sales.ss_net_profit <= 25000)",None,tpcds,"SELECT SUM(store_sales82.ss_quantity)

FROM store_sales AS store_sales82

INNER JOIN store AS store82 ON store_sales82.ss_store_sk = store82.s_store_sk

INNER JOIN customer_demographics AS customer_demographics82 ON store_sales82.ss_cdemo_sk = customer_demographics82.cd_demo_sk AND customer_demographics82.cd_marital_status = 'D' AND customer_demographics82.cd_education_status = 'Secondary' AND (store_sales82.ss_sales_price >= 100.00 AND store_sales82.ss_sales_price <= 150.00) OR store_sales82.ss_cdemo_sk = customer_demographics82.cd_demo_sk AND customer_demographics82.cd_marital_status = 'M' AND customer_demographics82.cd_education_status = '2 yr Degree' AND (store_sales82.ss_sales_price >= 50.00 AND store_sales82.ss_sales_price <= 100.00) OR store_sales82.ss_cdemo_sk = customer_demographics82.cd_demo_sk AND customer_demographics82.cd_marital_status = 'W' AND customer_demographics82.cd_education_status = '4 yr Degree' AND (store_sales82.ss_sales_price >= 150.00 AND store_sales82.ss_sales_price <= 200.00)

INNER JOIN customer_address AS customer_address82 ON store_sales82.ss_addr_sk = customer_address82.ca_address_sk AND customer_address82.ca_country = 'United States' AND customer_address82.ca_state IN ('IN', 'VA', 'WV') AND (store_sales82.ss_net_profit >= 0 AND store_sales82.ss_net_profit <= 2000) OR store_sales82.ss_addr_sk = customer_address82.ca_address_sk AND customer_address82.ca_country = 'United States' AND customer_address82.ca_state IN ('MN', 'ND', 'TX') AND (store_sales82.ss_net_profit >= 150 AND store_sales82.ss_net_profit <= 3000) OR store_sales82.ss_addr_sk = customer_address82.ca_address_sk AND customer_address82.ca_country = 'United States' AND customer_address82.ca_state IN ('CO', 'GA', 'SD') AND (store_sales82.ss_net_profit >= 50 AND store_sales82.ss_net_profit <= 25000)

INNER JOIN (SELECT *

FROM date_dim

WHERE d_year = 1999) AS t417 ON store_sales82.ss_sold_date_sk = t417.d_date_sk",None
77,sql_075.sql,"with customer_total_return as
 (select wr_returning_customer_sk as ctr_customer_sk
        ,ca_state as ctr_state, 
 	sum(wr_return_amt) as ctr_total_return
 from web_returns
     ,date_dim
     ,customer_address
 where wr_returned_date_sk = d_date_sk 
   and d_year =2002
   and wr_returning_addr_sk = ca_address_sk 
 group by wr_returning_customer_sk
         ,ca_state)
  select  c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag
       ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address
       ,c_last_review_date_sk,ctr_total_return
 from customer_total_return ctr1
     ,customer_address
     ,customer
 where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2
 			  from customer_total_return ctr2 
                  	  where ctr1.ctr_state = ctr2.ctr_state)
       and ca_address_sk = c_current_addr_sk
       and ca_state = 'NM'
       and ctr1.ctr_customer_sk = c_customer_sk
 order by c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag
                  ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address
                  ,c_last_review_date_sk,ctr_total_return
limit 100;","SELECT customer.c_customer_id, customer.c_salutation, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_day, customer.c_birth_month, customer.c_birth_year, customer.c_birth_country, customer.c_login, customer.c_email_address, customer.c_last_review_date_sk, t1.ctr_total_return FROM (SELECT web_returns.wr_returning_customer_sk AS ctr_customer_sk, customer_address.ca_state AS ctr_state, SUM(web_returns.wr_return_amt) AS ctr_total_return FROM web_returns INNER JOIN (SELECT * FROM date_dim WHERE d_year = 2002) AS t ON web_returns.wr_returned_date_sk = t.d_date_sk INNER JOIN customer_address ON web_returns.wr_returning_addr_sk = customer_address.ca_address_sk GROUP BY web_returns.wr_returning_customer_sk, customer_address.ca_state) AS t1 CROSS JOIN (SELECT * FROM customer_address WHERE ca_state = 'NM') AS t2 INNER JOIN customer ON t2.ca_address_sk = customer.c_current_addr_sk AND t1.ctr_customer_sk = customer.c_customer_sk INNER JOIN (SELECT t6.ctr_state, AVG(t6.ctr_total_return) AS dollarf1 FROM (SELECT customer_address1.ca_state AS ctr_state, SUM(web_returns0.wr_return_amt) AS ctr_total_return FROM web_returns AS web_returns0 INNER JOIN (SELECT * FROM date_dim WHERE d_year = 2002) AS t3 ON web_returns0.wr_returned_date_sk = t3.d_date_sk INNER JOIN customer_address AS customer_address1 ON web_returns0.wr_returning_addr_sk = customer_address1.ca_address_sk GROUP BY web_returns0.wr_returning_customer_sk, customer_address1.ca_state) AS t6 GROUP BY t6.ctr_state) AS t7 ON t1.ctr_state = t7.ctr_state AND t1.ctr_total_return > t7.dollarf1 * 1.2 ORDER BY customer.c_customer_id, customer.c_salutation, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_day, customer.c_birth_month, customer.c_birth_year, customer.c_birth_country, customer.c_login, customer.c_email_address, customer.c_last_review_date_sk, t1.ctr_total_return LIMIT 100",CollapseProject,tpcds,"with customer_total_return as
 (select wr_returning_customer_sk as ctr_customer_sk
        ,ca_state as ctr_state, 
 	sum(wr_return_amt) as ctr_total_return
 from web_returns
     ,date_dim
     ,customer_address
 where wr_returned_date_sk = d_date_sk 
   and d_year =2002
   and wr_returning_addr_sk = ca_address_sk 
 group by wr_returning_customer_sk
         ,ca_state)
  select  c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag
       ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address
       ,c_last_review_date_sk,ctr_total_return
 from customer_total_return ctr1
     ,customer_address
     ,customer
 where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2
 			  from customer_total_return ctr2 
                  	  where ctr1.ctr_state = ctr2.ctr_state)
       and ca_address_sk = c_current_addr_sk
       and ca_state = 'NM'
       and ctr1.ctr_customer_sk = c_customer_sk
 order by c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag
                  ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address
                  ,c_last_review_date_sk,ctr_total_return
limit 100;",CollapseProject
78,sql_076.sql,"with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,stddev_samp(ss_net_paid) year_total
       ,'s' sale_type
 from customer
     ,store_sales
     ,date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
   and d_year in (2001,2001+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,stddev_samp(ws_net_paid) year_total
       ,'w' sale_type
 from customer
     ,web_sales
     ,date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
   and d_year in (2001,2001+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
         )
  select 
        t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
         and t_s_firstyear.customer_id = t_w_secyear.customer_id
         and t_s_firstyear.customer_id = t_w_firstyear.customer_id
         and t_s_firstyear.sale_type = 's'
         and t_w_firstyear.sale_type = 'w'
         and t_s_secyear.sale_type = 's'
         and t_w_secyear.sale_type = 'w'
         and t_s_firstyear.year = 2001
         and t_s_secyear.year = 2001+1
         and t_w_firstyear.year = 2001
         and t_w_secyear.year = 2001+1
         and t_s_firstyear.year_total > 0
         and t_w_firstyear.year_total > 0
         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
 order by 1,3,2
limit 100;","SELECT t16.customer_id, t16.customer_first_name, t16.customer_last_name FROM (SELECT customer.c_customer_id AS customer_id, customer.c_first_name AS customer_first_name, customer.c_last_name AS customer_last_name, date_dim.d_year AS calcite_year, STDDEV_SAMP(store_sales.ss_net_paid) AS year_total, 's' AS sale_type FROM customer, store_sales, date_dim WHERE customer.c_customer_sk = store_sales.ss_customer_sk AND store_sales.ss_sold_date_sk = date_dim.d_date_sk AND (date_dim.d_year = 2001 OR date_dim.d_year = 2001 + 1) GROUP BY customer.c_customer_id, customer.c_last_name, customer.c_first_name, date_dim.d_year UNION ALL SELECT customer0.c_customer_id AS customer_id, customer0.c_first_name AS customer_first_name, customer0.c_last_name AS customer_last_name, date_dim0.d_year AS calcite_year, STDDEV_SAMP(web_sales.ws_net_paid) AS year_total, 'w' AS sale_type FROM customer AS customer0, web_sales, date_dim AS date_dim0 WHERE customer0.c_customer_sk = web_sales.ws_bill_customer_sk AND web_sales.ws_sold_date_sk = date_dim0.d_date_sk AND (date_dim0.d_year = 2001 OR date_dim0.d_year = 2001 + 1) GROUP BY customer0.c_customer_id, customer0.c_last_name, customer0.c_first_name, date_dim0.d_year) AS t7, (SELECT customer1.c_customer_id AS customer_id, customer1.c_first_name AS customer_first_name, customer1.c_last_name AS customer_last_name, date_dim1.d_year AS calcite_year, STDDEV_SAMP(store_sales0.ss_net_paid) AS year_total, 's' AS sale_type FROM customer AS customer1, store_sales AS store_sales0, date_dim AS date_dim1 WHERE customer1.c_customer_sk = store_sales0.ss_customer_sk AND store_sales0.ss_sold_date_sk = date_dim1.d_date_sk AND (date_dim1.d_year = 2001 OR date_dim1.d_year = 2001 + 1) GROUP BY customer1.c_customer_id, customer1.c_last_name, customer1.c_first_name, date_dim1.d_year UNION ALL SELECT customer2.c_customer_id AS customer_id, customer2.c_first_name AS customer_first_name, customer2.c_last_name AS customer_last_name, date_dim2.d_year AS calcite_year, STDDEV_SAMP(web_sales0.ws_net_paid) AS year_total, 'w' AS sale_type FROM customer AS customer2, web_sales AS web_sales0, date_dim AS date_dim2 WHERE customer2.c_customer_sk = web_sales0.ws_bill_customer_sk AND web_sales0.ws_sold_date_sk = date_dim2.d_date_sk AND (date_dim2.d_year = 2001 OR date_dim2.d_year = 2001 + 1) GROUP BY customer2.c_customer_id, customer2.c_last_name, customer2.c_first_name, date_dim2.d_year) AS t16, (SELECT customer3.c_customer_id AS customer_id, customer3.c_first_name AS customer_first_name, customer3.c_last_name AS customer_last_name, date_dim3.d_year AS calcite_year, STDDEV_SAMP(store_sales1.ss_net_paid) AS year_total, 's' AS sale_type FROM customer AS customer3, store_sales AS store_sales1, date_dim AS date_dim3 WHERE customer3.c_customer_sk = store_sales1.ss_customer_sk AND store_sales1.ss_sold_date_sk = date_dim3.d_date_sk AND (date_dim3.d_year = 2001 OR date_dim3.d_year = 2001 + 1) GROUP BY customer3.c_customer_id, customer3.c_last_name, customer3.c_first_name, date_dim3.d_year UNION ALL SELECT customer4.c_customer_id AS customer_id, customer4.c_first_name AS customer_first_name, customer4.c_last_name AS customer_last_name, date_dim4.d_year AS calcite_year, STDDEV_SAMP(web_sales1.ws_net_paid) AS year_total, 'w' AS sale_type FROM customer AS customer4, web_sales AS web_sales1, date_dim AS date_dim4 WHERE customer4.c_customer_sk = web_sales1.ws_bill_customer_sk AND web_sales1.ws_sold_date_sk = date_dim4.d_date_sk AND (date_dim4.d_year = 2001 OR date_dim4.d_year = 2001 + 1) GROUP BY customer4.c_customer_id, customer4.c_last_name, customer4.c_first_name, date_dim4.d_year) AS t25, (SELECT customer5.c_customer_id AS customer_id, customer5.c_first_name AS customer_first_name, customer5.c_last_name AS customer_last_name, date_dim5.d_year AS calcite_year, STDDEV_SAMP(store_sales2.ss_net_paid) AS year_total, 's' AS sale_type FROM customer AS customer5, store_sales AS store_sales2, date_dim AS date_dim5 WHERE customer5.c_customer_sk = store_sales2.ss_customer_sk AND store_sales2.ss_sold_date_sk = date_dim5.d_date_sk AND (date_dim5.d_year = 2001 OR date_dim5.d_year = 2001 + 1) GROUP BY customer5.c_customer_id, customer5.c_last_name, customer5.c_first_name, date_dim5.d_year UNION ALL SELECT customer6.c_customer_id AS customer_id, customer6.c_first_name AS customer_first_name, customer6.c_last_name AS customer_last_name, date_dim6.d_year AS calcite_year, STDDEV_SAMP(web_sales2.ws_net_paid) AS year_total, 'w' AS sale_type FROM customer AS customer6, web_sales AS web_sales2, date_dim AS date_dim6 WHERE customer6.c_customer_sk = web_sales2.ws_bill_customer_sk AND web_sales2.ws_sold_date_sk = date_dim6.d_date_sk AND (date_dim6.d_year = 2001 OR date_dim6.d_year = 2001 + 1) GROUP BY customer6.c_customer_id, customer6.c_last_name, customer6.c_first_name, date_dim6.d_year) AS t34 WHERE t16.customer_id = t7.customer_id AND (t7.customer_id = t34.customer_id AND t7.customer_id = t25.customer_id) AND (t7.sale_type = 's' AND t25.sale_type = 'w' AND (t16.sale_type = 's' AND t34.sale_type = 'w')) AND (t7.calcite_year = 2001 AND (t16.calcite_year = 2001 + 1 AND t25.calcite_year = 2001) AND (t34.calcite_year = 2001 + 1 AND t7.year_total > 0 AND (t25.year_total > 0 AND CASE WHEN t7.year_total > 0 THEN CASE WHEN t25.year_total > 0 THEN t34.year_total / t25.year_total > t16.year_total / t7.year_total ELSE FALSE END ELSE FALSE END))) ORDER BY t16.customer_id, t16.customer_last_name, t16.customer_first_name LIMIT 100","ConstantFolding,RemoveNoopOperators",tpcds,"with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,stddev_samp(ss_net_paid) year_total
       ,'s' sale_type
 from customer
     ,store_sales
     ,date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
   and d_year in (2001,2001+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,stddev_samp(ws_net_paid) year_total
       ,'w' sale_type
 from customer
     ,web_sales
     ,date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
   and d_year in (2001,2001+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
         )
  select 
        t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
         and t_s_firstyear.customer_id = t_w_secyear.customer_id
         and t_s_firstyear.customer_id = t_w_firstyear.customer_id
         and t_s_firstyear.sale_type = 's'
         and t_w_firstyear.sale_type = 'w'
         and t_s_secyear.sale_type = 's'
         and t_w_secyear.sale_type = 'w'
         and t_s_firstyear.year = 2001
         and t_s_secyear.year = 2001+1
         and t_w_firstyear.year = 2001
         and t_w_secyear.year = 2001+1
         and t_s_firstyear.year_total > 0
         and t_w_firstyear.year_total > 0
         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
 order by 1,3,2
limit 100;","RemoveRedundantAliases,ReorderJoin"
79,sql_077.sql,"select count(*) 
from ((select distinct c_last_name, c_first_name, d_date
       from store_sales, date_dim, customer
       where store_sales.ss_sold_date_sk = date_dim.d_date_sk
         and store_sales.ss_customer_sk = customer.c_customer_sk
         and d_month_seq between 1203 and 1203+11)
       except
      (select distinct c_last_name, c_first_name, d_date
       from catalog_sales, date_dim, customer
       where catalog_sales.cs_sold_date_sk = date_dim.d_date_sk
         and catalog_sales.cs_bill_customer_sk = customer.c_customer_sk
         and d_month_seq between 1203 and 1203+11)
       except
      (select distinct c_last_name, c_first_name, d_date
       from web_sales, date_dim, customer
       where web_sales.ws_sold_date_sk = date_dim.d_date_sk
         and web_sales.ws_bill_customer_sk = customer.c_customer_sk
         and d_month_seq between 1203 and 1203+11)
) cool_cust
;","select count(*) 
from ((select distinct c_last_name, c_first_name, d_date
       from store_sales, date_dim, customer
       where store_sales.ss_sold_date_sk = date_dim.d_date_sk
         and store_sales.ss_customer_sk = customer.c_customer_sk
         and d_month_seq between 1203 and 1203+11)
       except
      (select distinct c_last_name, c_first_name, d_date
       from catalog_sales, date_dim, customer
       where catalog_sales.cs_sold_date_sk = date_dim.d_date_sk
         and catalog_sales.cs_bill_customer_sk = customer.c_customer_sk
         and d_month_seq between 1203 and 1203+11)
       except
      (select distinct c_last_name, c_first_name, d_date
       from web_sales, date_dim, customer
       where web_sales.ws_sold_date_sk = date_dim.d_date_sk
         and web_sales.ws_bill_customer_sk = customer.c_customer_sk
         and d_month_seq between 1203 and 1203+11)
) cool_cust
;",None,tpcds,"SELECT COUNT(*)

FROM (SELECT *

FROM (SELECT customer248.c_last_name, customer248.c_first_name, t986.d_date

FROM store_sales AS store_sales82

INNER JOIN (SELECT *

FROM date_dim

WHERE d_month_seq >= 1217 AND d_month_seq <= 1217 + 11) AS t986 ON store_sales82.ss_sold_date_sk = t986.d_date_sk

INNER JOIN customer AS customer248 ON store_sales82.ss_customer_sk = customer248.c_customer_sk

EXCEPT

SELECT customer249.c_last_name, customer249.c_first_name, t988.d_date

FROM catalog_sales AS catalog_sales82

INNER JOIN (SELECT *

FROM date_dim

WHERE d_month_seq >= 1217 AND d_month_seq <= 1217 + 11) AS t988 ON catalog_sales82.cs_sold_date_sk = t988.d_date_sk

INNER JOIN customer AS customer249 ON catalog_sales82.cs_bill_customer_sk = customer249.c_customer_sk) AS t

EXCEPT

SELECT customer250.c_last_name, customer250.c_first_name, t991.d_date

FROM web_sales AS web_sales82

INNER JOIN (SELECT *

FROM date_dim

WHERE d_month_seq >= 1217 AND d_month_seq <= 1217 + 11) AS t991 ON web_sales82.ws_sold_date_sk = t991.d_date_sk

INNER JOIN customer AS customer250 ON web_sales82.ws_bill_customer_sk = customer250.c_customer_sk) AS t993",RemoveRedundantAggregates
80,sql_078.sql,"with ss as
 (select s_store_sk,
         sum(ss_ext_sales_price) as sales,
         sum(ss_net_profit) as profit
 from store_sales,
      date_dim,
      store
 where ss_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-27' as date) 
                  and (date_add(cast('1998-08-27' as date), 30)) 
       and ss_store_sk = s_store_sk
 group by s_store_sk)
 ,
 sr as
 (select s_store_sk,
         sum(sr_return_amt) as returns,
         sum(sr_net_loss) as profit_loss
 from store_returns,
      date_dim,
      store
 where sr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-27' as date)
                  and (date_add(cast('1998-08-27' as date), 30))
       and sr_store_sk = s_store_sk
 group by s_store_sk), 
 cs as
 (select cs_call_center_sk,
        sum(cs_ext_sales_price) as sales,
        sum(cs_net_profit) as profit
 from catalog_sales,
      date_dim
 where cs_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-27' as date)
                  and (date_add(cast('1998-08-27' as date), 30))
 group by cs_call_center_sk 
 ), 
 cr as
 (select cr_call_center_sk,
         sum(cr_return_amount) as returns,
         sum(cr_net_loss) as profit_loss
 from catalog_returns,
      date_dim
 where cr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-27' as date)
                  and (date_add(cast('1998-08-27' as date), 30))
 group by cr_call_center_sk
 ), 
 ws as
 ( select wp_web_page_sk,
        sum(ws_ext_sales_price) as sales,
        sum(ws_net_profit) as profit
 from web_sales,
      date_dim,
      web_page
 where ws_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-27' as date)
                  and (date_add(cast('1998-08-27' as date), 30))
       and ws_web_page_sk = wp_web_page_sk
 group by wp_web_page_sk), 
 wr as
 (select wp_web_page_sk,
        sum(wr_return_amt) as returns,
        sum(wr_net_loss) as profit_loss
 from web_returns,
      date_dim,
      web_page
 where wr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-27' as date)
                  and (date_add(cast('1998-08-27' as date), 30))
       and wr_web_page_sk = wp_web_page_sk
 group by wp_web_page_sk)
  select  channel
        , id
        , sum(sales) as sales
        , sum(returns) as returns
        , sum(profit) as profit
 from 
 (select 'store channel' as channel
        , ss.s_store_sk as id
        , sales
        , coalesce(returns, 0) as returns
        , (profit - coalesce(profit_loss,0)) as profit
 from   ss left join sr
        on  ss.s_store_sk = sr.s_store_sk
 union all
 select 'catalog channel' as channel
        , cs_call_center_sk as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from  cs
       , cr
 union all
 select 'web channel' as channel
        , ws.wp_web_page_sk as id
        , sales
        , coalesce(returns, 0) returns
        , (profit - coalesce(profit_loss,0)) as profit
 from   ws left join wr
        on  ws.wp_web_page_sk = wr.wp_web_page_sk
 ) x
 group by rollup (channel, id)
 order by channel
         ,id
 limit 100;","SELECT channel, id, SUM(sales) AS sales, SUM(calcite_returns) AS calcite_returns, SUM(profit) AS profit FROM (SELECT * FROM (SELECT 'store channel' AS channel, t0.s_store_sk AS id, t0.sales, CASE WHEN t2.calcite_returns IS NOT NULL THEN CAST(t2.calcite_returns AS DECIMAL(17, 2)) ELSE 0 END AS calcite_returns, t0.profit - CASE WHEN t2.profit_loss IS NOT NULL THEN CAST(t2.profit_loss AS DECIMAL(17, 2)) ELSE 0 END AS profit FROM (SELECT store.s_store_sk, SUM(store_sales.ss_ext_sales_price) AS sales, SUM(store_sales.ss_net_profit) AS profit FROM store_sales, date_dim, store WHERE store_sales.ss_sold_date_sk = date_dim.d_date_sk AND date_dim.d_date >= '1998-08-27' AND date_dim.d_date <= (CAST('1998-08-27' AS DATE) + INTERVAL '30' DAY) AND store_sales.ss_store_sk = store.s_store_sk GROUP BY store.s_store_sk) AS t0 LEFT JOIN (SELECT store0.s_store_sk, SUM(store_returns.sr_return_amt) AS calcite_returns, SUM(store_returns.sr_net_loss) AS profit_loss FROM store_returns, date_dim AS date_dim0, store AS store0 WHERE store_returns.sr_returned_date_sk = date_dim0.d_date_sk AND date_dim0.d_date >= '1998-08-27' AND date_dim0.d_date <= (CAST('1998-08-27' AS DATE) + INTERVAL '30' DAY) AND store_returns.sr_store_sk = store0.s_store_sk GROUP BY store0.s_store_sk) AS t2 ON t0.s_store_sk = t2.s_store_sk UNION ALL SELECT 'catalog channel' AS channel, t5.cs_call_center_sk AS id, t5.sales, t7.calcite_returns, t5.profit - t7.profit_loss AS profit FROM (SELECT catalog_sales.cs_call_center_sk, SUM(catalog_sales.cs_ext_sales_price) AS sales, SUM(catalog_sales.cs_net_profit) AS profit FROM catalog_sales, date_dim AS date_dim1 WHERE catalog_sales.cs_sold_date_sk = date_dim1.d_date_sk AND date_dim1.d_date >= '1998-08-27' AND date_dim1.d_date <= (CAST('1998-08-27' AS DATE) + INTERVAL '30' DAY) GROUP BY catalog_sales.cs_call_center_sk) AS t5, (SELECT catalog_returns.cr_call_center_sk, SUM(catalog_returns.cr_return_amount) AS calcite_returns, SUM(catalog_returns.cr_net_loss) AS profit_loss FROM catalog_returns, date_dim AS date_dim2 WHERE catalog_returns.cr_returned_date_sk = date_dim2.d_date_sk AND date_dim2.d_date >= '1998-08-27' AND date_dim2.d_date <= (CAST('1998-08-27' AS DATE) + INTERVAL '30' DAY) GROUP BY catalog_returns.cr_call_center_sk) AS t7) AS t UNION ALL SELECT 'web channel' AS channel, t11.wp_web_page_sk AS id, t11.sales, CASE WHEN t13.calcite_returns IS NOT NULL THEN CAST(t13.calcite_returns AS DECIMAL(17, 2)) ELSE 0 END AS calcite_returns, t11.profit - CASE WHEN t13.profit_loss IS NOT NULL THEN CAST(t13.profit_loss AS DECIMAL(17, 2)) ELSE 0 END AS profit FROM (SELECT web_page.wp_web_page_sk, SUM(web_sales.ws_ext_sales_price) AS sales, SUM(web_sales.ws_net_profit) AS profit FROM web_sales, date_dim AS date_dim3, web_page WHERE web_sales.ws_sold_date_sk = date_dim3.d_date_sk AND date_dim3.d_date >= '1998-08-27' AND date_dim3.d_date <= (CAST('1998-08-27' AS DATE) + INTERVAL '30' DAY) AND web_sales.ws_web_page_sk = web_page.wp_web_page_sk GROUP BY web_page.wp_web_page_sk) AS t11 LEFT JOIN (SELECT web_page0.wp_web_page_sk, SUM(web_returns.wr_return_amt) AS calcite_returns, SUM(web_returns.wr_net_loss) AS profit_loss FROM web_returns, date_dim AS date_dim4, web_page AS web_page0 WHERE web_returns.wr_returned_date_sk = date_dim4.d_date_sk AND date_dim4.d_date >= '1998-08-27' AND date_dim4.d_date <= (CAST('1998-08-27' AS DATE) + INTERVAL '30' DAY) AND web_returns.wr_web_page_sk = web_page0.wp_web_page_sk GROUP BY web_page0.wp_web_page_sk) AS t13 ON t11.wp_web_page_sk = t13.wp_web_page_sk) AS t15 GROUP BY ROLLUP(channel, id) ORDER BY channel, id LIMIT 100","ConstantFolding,PushProjectionThroughUnion,RemoveNoopOperators",tpcds,"with ss as
 (select s_store_sk,
         sum(ss_ext_sales_price) as sales,
         sum(ss_net_profit) as profit
 from store_sales,
      date_dim,
      store
 where ss_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-27' as date) 
                  and (date_add(cast('1998-08-27' as date), 30)) 
       and ss_store_sk = s_store_sk
 group by s_store_sk)
 ,
 sr as
 (select s_store_sk,
         sum(sr_return_amt) as returns,
         sum(sr_net_loss) as profit_loss
 from store_returns,
      date_dim,
      store
 where sr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-27' as date)
                  and (date_add(cast('1998-08-27' as date), 30))
       and sr_store_sk = s_store_sk
 group by s_store_sk), 
 cs as
 (select cs_call_center_sk,
        sum(cs_ext_sales_price) as sales,
        sum(cs_net_profit) as profit
 from catalog_sales,
      date_dim
 where cs_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-27' as date)
                  and (date_add(cast('1998-08-27' as date), 30))
 group by cs_call_center_sk 
 ), 
 cr as
 (select cr_call_center_sk,
         sum(cr_return_amount) as returns,
         sum(cr_net_loss) as profit_loss
 from catalog_returns,
      date_dim
 where cr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-27' as date)
                  and (date_add(cast('1998-08-27' as date), 30))
 group by cr_call_center_sk
 ), 
 ws as
 ( select wp_web_page_sk,
        sum(ws_ext_sales_price) as sales,
        sum(ws_net_profit) as profit
 from web_sales,
      date_dim,
      web_page
 where ws_sold_date_sk = d_date_sk
       and d_date between cast('1998-08-27' as date)
                  and (date_add(cast('1998-08-27' as date), 30))
       and ws_web_page_sk = wp_web_page_sk
 group by wp_web_page_sk), 
 wr as
 (select wp_web_page_sk,
        sum(wr_return_amt) as returns,
        sum(wr_net_loss) as profit_loss
 from web_returns,
      date_dim,
      web_page
 where wr_returned_date_sk = d_date_sk
       and d_date between cast('1998-08-27' as date)
                  and (date_add(cast('1998-08-27' as date), 30))
       and wr_web_page_sk = wp_web_page_sk
 group by wp_web_page_sk)
  select  channel
        , id
        , sum(sales) as sales
        , sum(returns) as returns
        , sum(profit) as profit
 from 
 (select 'store channel' as channel
        , ss.s_store_sk as id
        , sales
        , coalesce(returns, 0) as returns
        , (profit - coalesce(profit_loss,0)) as profit
 from   ss left join sr
        on  ss.s_store_sk = sr.s_store_sk
 union all
 select 'catalog channel' as channel
        , cs_call_center_sk as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from  cs
       , cr
 union all
 select 'web channel' as channel
        , ws.wp_web_page_sk as id
        , sales
        , coalesce(returns, 0) returns
        , (profit - coalesce(profit_loss,0)) as profit
 from   ws left join wr
        on  ws.wp_web_page_sk = wr.wp_web_page_sk
 ) x
 group by rollup (channel, id)
 order by channel
         ,id
 limit 100;","CombineUnions,PushProjectionThroughUnion,RemoveNoopOperators"
81,sql_079.sql,"select c_last_name
       ,c_first_name
       ,c_salutation
       ,c_preferred_cust_flag 
       ,ss_ticket_number
       ,cnt from
   (select ss_ticket_number
          ,ss_customer_sk
          ,count(*) cnt
    from store_sales,date_dim,store,household_demographics
    where store_sales.ss_sold_date_sk = date_dim.d_date_sk
    and store_sales.ss_store_sk = store.s_store_sk  
    and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
    and date_dim.d_dom between 1 and 2 
    and (household_demographics.hd_buy_potential = '1001-5000' or
         household_demographics.hd_buy_potential = 'Unknown')
    and household_demographics.hd_vehicle_count > 0
    and case when household_demographics.hd_vehicle_count > 0 then 
             household_demographics.hd_dep_count/ household_demographics.hd_vehicle_count else null end > 1
    and date_dim.d_year in (1999,1999+1,1999+2)
    and store.s_county in ('Fairfield County','Daviess County','Richland County','Luce County')
    group by ss_ticket_number,ss_customer_sk) dj,customer
    where ss_customer_sk = c_customer_sk
      and cnt between 1 and 5
    order by cnt desc, c_last_name asc;","select c_last_name
       ,c_first_name
       ,c_salutation
       ,c_preferred_cust_flag 
       ,ss_ticket_number
       ,cnt from
   (select ss_ticket_number
          ,ss_customer_sk
          ,count(*) cnt
    from store_sales,date_dim,store,household_demographics
    where store_sales.ss_sold_date_sk = date_dim.d_date_sk
    and store_sales.ss_store_sk = store.s_store_sk  
    and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
    and date_dim.d_dom between 1 and 2 
    and (household_demographics.hd_buy_potential = '1001-5000' or
         household_demographics.hd_buy_potential = 'Unknown')
    and household_demographics.hd_vehicle_count > 0
    and case when household_demographics.hd_vehicle_count > 0 then 
             household_demographics.hd_dep_count/ household_demographics.hd_vehicle_count else null end > 1
    and date_dim.d_year in (1999,1999+1,1999+2)
    and store.s_county in ('Fairfield County','Daviess County','Richland County','Luce County')
    group by ss_ticket_number,ss_customer_sk) dj,customer
    where ss_customer_sk = c_customer_sk
      and cnt between 1 and 5
    order by cnt desc, c_last_name asc;",ConstantFolding,tpcds,"SELECT customer101.c_last_name, customer101.c_first_name, customer101.c_salutation, customer101.c_preferred_cust_flag, t987.ss_ticket_number, t987.cnt

FROM (SELECT t982.ss_ticket_number, t982.ss_customer_sk, COUNT(*) AS cnt

FROM (SELECT *

FROM (SELECT *

FROM store_sales AS store_sales101,

(SELECT *

FROM date_dim

WHERE d_dom >= 1 AND d_dom <= 2 AND (d_year = 1998 OR d_year = 1998 + 1 OR d_year = 1998 + 2)) AS t979

WHERE store_sales101.ss_sold_date_sk = t979.d_date_sk) AS t980,

(SELECT *

FROM store

WHERE s_county IN ('Huron County', 'Richland County', 'Terrell County', 'Wadena County')) AS t981

WHERE t980.ss_store_sk = t981.s_store_sk) AS t982,

(SELECT *

FROM household_demographics

WHERE (hd_buy_potential = '501-1000' OR hd_buy_potential = '5001-10000') AND hd_vehicle_count > 0 AND CASE WHEN hd_vehicle_count > 0 THEN hd_dep_count / hd_vehicle_count > 1 ELSE FALSE END) AS t983

WHERE t982.ss_hdemo_sk = t983.hd_demo_sk

GROUP BY t982.ss_ticket_number, t982.ss_customer_sk

HAVING COUNT(*) >= 1 AND COUNT(*) <= 5) AS t987,

customer AS customer101

WHERE t987.ss_customer_sk = customer101.c_customer_sk

ORDER BY t987.cnt DESC, customer101.c_last_name",ConstantFolding
82,sql_080.sql,"select  c_customer_id as customer_id
       , coalesce(c_last_name,'') || ', ' || coalesce(c_first_name,'') as customername
 from customer
     ,customer_address
     ,customer_demographics
     ,household_demographics
     ,income_band
     ,store_returns
 where ca_city	        =  'Oak Hill'
   and c_current_addr_sk = ca_address_sk
   and ib_lower_bound   >=  47241
   and ib_upper_bound   <=  47241 + 50000
   and ib_income_band_sk = hd_income_band_sk
   and cd_demo_sk = c_current_cdemo_sk
   and hd_demo_sk = c_current_hdemo_sk
   and sr_cdemo_sk = cd_demo_sk
 order by c_customer_id
 limit 100;","SELECT customer.c_customer_id AS customer_id, customer.c_last_name || ', ' || customer.c_first_name AS customername FROM customer INNER JOIN (SELECT * FROM customer_address WHERE ca_city = 'Oak Hill') AS t ON customer.c_current_addr_sk = t.ca_address_sk INNER JOIN customer_demographics ON customer.c_current_cdemo_sk = customer_demographics.cd_demo_sk INNER JOIN household_demographics ON customer.c_current_hdemo_sk = household_demographics.hd_demo_sk INNER JOIN (SELECT * FROM income_band WHERE ib_lower_bound >= 47241 AND ib_upper_bound <= 47241 + 50000) AS t0 ON household_demographics.hd_income_band_sk = t0.ib_income_band_sk INNER JOIN store_returns ON customer_demographics.cd_demo_sk = store_returns.sr_cdemo_sk ORDER BY customer.c_customer_id LIMIT 100",None,tpcds,"SELECT customer82.c_customer_id AS customer_id, customer82.c_last_name || ', ' || customer82.c_first_name AS customername

FROM customer AS customer82

INNER JOIN (SELECT *

FROM customer_address

WHERE ca_city = 'Greenville') AS t528 ON customer82.c_current_addr_sk = t528.ca_address_sk

INNER JOIN customer_demographics AS customer_demographics82 ON customer82.c_current_cdemo_sk = customer_demographics82.cd_demo_sk

INNER JOIN household_demographics AS household_demographics82 ON customer82.c_current_hdemo_sk = household_demographics82.hd_demo_sk

INNER JOIN (SELECT *

FROM income_band

WHERE ib_lower_bound >= 36218 AND ib_upper_bound <= 36218 + 50000) AS t529 ON household_demographics82.hd_income_band_sk = t529.ib_income_band_sk

INNER JOIN store_returns AS store_returns82 ON customer_demographics82.cd_demo_sk = store_returns82.sr_cdemo_sk

ORDER BY customer82.c_customer_id

LIMIT 100",None
83,sql_081.sql,"with my_customers as (
 select distinct c_customer_sk
        , c_current_addr_sk
 from   
        ( select cs_sold_date_sk sold_date_sk,
                 cs_bill_customer_sk customer_sk,
                 cs_item_sk item_sk
          from   catalog_sales
          union all
          select ws_sold_date_sk sold_date_sk,
                 ws_bill_customer_sk customer_sk,
                 ws_item_sk item_sk
          from   web_sales
         ) cs_or_ws_sales,
         item,
         date_dim,
         customer
 where   sold_date_sk = d_date_sk
         and item_sk = i_item_sk
         and i_category = 'Sports'
         and i_class = 'archery'
         and c_customer_sk = cs_or_ws_sales.customer_sk
         and d_moy = 7
         and d_year = 2001
 )
 , my_revenue as (
 select c_customer_sk,
        sum(ss_ext_sales_price) as revenue
 from   my_customers,
        store_sales,
        customer_address,
        store,
        date_dim
 where  c_current_addr_sk = ca_address_sk
        and ca_county = s_county
        and ca_state = s_state
        and ss_sold_date_sk = d_date_sk
        and c_customer_sk = ss_customer_sk
        and d_month_seq between (select distinct d_month_seq+1
                                 from   date_dim where d_year = 2001 and d_moy = 7)
                           and  (select distinct d_month_seq+3
                                 from   date_dim where d_year = 2001 and d_moy = 7)
 group by c_customer_sk
 )
 , segments as
 (select cast((revenue/50) as int) as segment
  from   my_revenue
 )
  select  segment, count(*) as num_customers, segment*50 as segment_base
 from segments
 group by segment
 order by segment, num_customers
 limit 100;","with my_customers as (
 select distinct c_customer_sk
        , c_current_addr_sk
 from   
        ( select cs_sold_date_sk sold_date_sk,
                 cs_bill_customer_sk customer_sk,
                 cs_item_sk item_sk
          from   catalog_sales
          union all
          select ws_sold_date_sk sold_date_sk,
                 ws_bill_customer_sk customer_sk,
                 ws_item_sk item_sk
          from   web_sales
         ) cs_or_ws_sales,
         item,
         date_dim,
         customer
 where   sold_date_sk = d_date_sk
         and item_sk = i_item_sk
         and i_category = 'Sports'
         and i_class = 'archery'
         and c_customer_sk = cs_or_ws_sales.customer_sk
         and d_moy = 7
         and d_year = 2001
 )
 , my_revenue as (
 select c_customer_sk,
        sum(ss_ext_sales_price) as revenue
 from   my_customers,
        store_sales,
        customer_address,
        store,
        date_dim
 where  c_current_addr_sk = ca_address_sk
        and ca_county = s_county
        and ca_state = s_state
        and ss_sold_date_sk = d_date_sk
        and c_customer_sk = ss_customer_sk
        and d_month_seq between (select distinct d_month_seq+1
                                 from   date_dim where d_year = 2001 and d_moy = 7)
                           and  (select distinct d_month_seq+3
                                 from   date_dim where d_year = 2001 and d_moy = 7)
 group by c_customer_sk
 )
 , segments as
 (select cast((revenue/50) as int) as segment
  from   my_revenue
 )
  select  segment, count(*) as num_customers, segment*50 as segment_base
 from segments
 group by segment
 order by segment, num_customers
 limit 100;",None,tpcds,"SELECT t1064.segment, COUNT(*) AS num_customers, t1064.segment * 50 AS segment_base

FROM (SELECT CAST(SUM(t1057.ss_ext_sales_price) / 50 AS INTEGER) AS segment

FROM (SELECT *

FROM (SELECT *

FROM (SELECT *

FROM (SELECT *

FROM (SELECT t1048.c_customer_sk, t1048.c_current_addr_sk, store_sales45.ss_sold_date_sk, store_sales45.ss_sold_time_sk, store_sales45.ss_item_sk, store_sales45.ss_customer_sk, store_sales45.ss_cdemo_sk, store_sales45.ss_hdemo_sk, store_sales45.ss_addr_sk, store_sales45.ss_store_sk, store_sales45.ss_promo_sk, store_sales45.ss_ticket_number, store_sales45.ss_quantity, store_sales45.ss_wholesale_cost, store_sales45.ss_list_price, store_sales45.ss_sales_price, store_sales45.ss_ext_discount_amt, store_sales45.ss_ext_sales_price, store_sales45.ss_ext_wholesale_cost, store_sales45.ss_ext_list_price, store_sales45.ss_ext_tax, store_sales45.ss_coupon_amt, store_sales45.ss_net_paid, store_sales45.ss_net_paid_inc_tax, store_sales45.ss_net_profit

FROM (SELECT *

FROM (SELECT *

FROM (SELECT *

FROM (SELECT catalog_sales45.cs_sold_date_sk AS sold_date_sk, catalog_sales45.cs_bill_customer_sk AS customer_sk, catalog_sales45.cs_item_sk AS item_sk, t1040.i_item_sk, t1040.i_item_id, t1040.i_rec_start_date, t1040.i_rec_end_date, t1040.i_item_desc, t1040.i_current_price, t1040.i_wholesale_cost, t1040.i_brand_id, t1040.i_brand, t1040.i_class_id, t1040.i_class, t1040.i_category_id, t1040.i_category, t1040.i_manufact_id, t1040.i_manufact, t1040.i_size, t1040.i_formulation, t1040.i_color, t1040.i_units, t1040.i_container, t1040.i_manager_id, t1040.i_product_name

FROM catalog_sales AS catalog_sales45,

(SELECT *

FROM item

WHERE i_category = 'Jewelry' AND i_class = 'rings') AS t1040

UNION ALL

SELECT web_sales45.ws_sold_date_sk AS sold_date_sk, web_sales45.ws_bill_customer_sk AS customer_sk, web_sales45.ws_item_sk AS item_sk, t1042.i_item_sk, t1042.i_item_id, t1042.i_rec_start_date, t1042.i_rec_end_date, t1042.i_item_desc, t1042.i_current_price, t1042.i_wholesale_cost, t1042.i_brand_id, t1042.i_brand, t1042.i_class_id, t1042.i_class, t1042.i_category_id, t1042.i_category, t1042.i_manufact_id, t1042.i_manufact, t1042.i_size, t1042.i_formulation, t1042.i_color, t1042.i_units, t1042.i_container, t1042.i_manager_id, t1042.i_product_name

FROM web_sales AS web_sales45,

(SELECT *

FROM item

WHERE i_category = 'Jewelry' AND i_class = 'rings') AS t1042) AS t1044

WHERE item_sk = i_item_sk) AS t1045,

(SELECT *

FROM date_dim

WHERE d_year = 1998 AND d_moy = 6) AS t1046

WHERE t1045.sold_date_sk = t1046.d_date_sk) AS t1047,

customer AS customer47

WHERE customer47.c_customer_sk = t1047.customer_sk) AS t1048,

store_sales AS store_sales45

WHERE t1048.c_customer_sk = store_sales45.ss_customer_sk) AS t1050,

customer_address AS customer_address45

WHERE t1050.c_current_addr_sk = customer_address45.ca_address_sk) AS t1051,

store AS store45

WHERE t1051.ca_county = store45.s_county AND t1051.ca_state = store45.s_state) AS t1052,

date_dim AS date_dim186

WHERE t1052.ss_sold_date_sk = date_dim186.d_date_sk) AS t1053,

(SELECT d_month_seq + 1 AS EXPR_0

FROM date_dim

WHERE d_year = 1998 AND d_moy = 6

GROUP BY d_month_seq + 1) AS t1056

WHERE t1053.d_month_seq >= t1056.EXPR_0) AS t1057,

(SELECT d_month_seq + 3 AS EXPR_0

FROM date_dim

WHERE d_year = 1998 AND d_moy = 6

GROUP BY d_month_seq + 3) AS t1060

WHERE t1057.d_month_seq <= t1060.EXPR_0

GROUP BY t1057.c_customer_sk) AS t1064

GROUP BY t1064.segment

ORDER BY t1064.segment, COUNT(*)

LIMIT 100",ConstantFolding
84,sql_082.sql,"select  i_brand_id brand_id, i_brand brand,
 	sum(ss_ext_sales_price) ext_price
 from date_dim, store_sales, item
 where d_date_sk = ss_sold_date_sk
 	and ss_item_sk = i_item_sk
 	and i_manager_id=1
 	and d_moy=12
 	and d_year=2000
 group by i_brand, i_brand_id
 order by ext_price desc, i_brand_id
limit 100 ;","select  i_brand_id brand_id, i_brand brand,
 	sum(ss_ext_sales_price) ext_price
 from date_dim, store_sales, item
 where d_date_sk = ss_sold_date_sk
 	and ss_item_sk = i_item_sk
 	and i_manager_id=1
 	and d_moy=12
 	and d_year=2000
 group by i_brand, i_brand_id
 order by ext_price desc, i_brand_id
limit 100 ;",None,tpcds,"SELECT t213.i_brand_id AS brand_id, t213.i_brand AS brand, SUM(t211.ext_price * t213._f3) AS ext_price

FROM (SELECT t209.ss_item_sk, SUM(t208._f1 * t209.ext_price) AS ext_price

FROM (SELECT d_date_sk, COUNT(*) AS _f1

FROM date_dim

WHERE d_moy = 12 AND d_year = 2002

GROUP BY d_date_sk) AS t208

INNER JOIN (SELECT ss_sold_date_sk, ss_item_sk, SUM(ss_ext_sales_price) AS ext_price

FROM store_sales

GROUP BY ss_sold_date_sk, ss_item_sk) AS t209 ON t208.d_date_sk = t209.ss_sold_date_sk

GROUP BY t209.ss_item_sk) AS t211

INNER JOIN (SELECT i_item_sk, i_brand_id, i_brand, COUNT(*) AS _f3

FROM item

WHERE i_manager_id = 83

GROUP BY i_item_sk, i_brand_id, i_brand) AS t213 ON t211.ss_item_sk = t213.i_item_sk

GROUP BY t213.i_brand_id, t213.i_brand

ORDER BY SUM(t211.ext_price * t213._f3) DESC, t213.i_brand_id

LIMIT 100",None
85,sql_083.sql,"with ss as (
 select i_item_id,sum(ss_ext_sales_price) total_sales
 from
 	store_sales,
 	date_dim,
         customer_address,
         item
 where i_item_id in (select
     i_item_id
from item
where i_color in ('cyan','royal','seashell'))
 and     ss_item_sk              = i_item_sk
 and     ss_sold_date_sk         = d_date_sk
 and     d_year                  = 2000
 and     d_moy                   = 5
 and     ss_addr_sk              = ca_address_sk
 and     ca_gmt_offset           = -6 
 group by i_item_id),
 cs as (
 select i_item_id,sum(cs_ext_sales_price) total_sales
 from
 	catalog_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id               in (select
  i_item_id
from item
where i_color in ('cyan','royal','seashell'))
 and     cs_item_sk              = i_item_sk
 and     cs_sold_date_sk         = d_date_sk
 and     d_year                  = 2000
 and     d_moy                   = 5
 and     cs_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -6 
 group by i_item_id),
 ws as (
 select i_item_id,sum(ws_ext_sales_price) total_sales
 from
 	web_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id               in (select
  i_item_id
from item
where i_color in ('cyan','royal','seashell'))
 and     ws_item_sk              = i_item_sk
 and     ws_sold_date_sk         = d_date_sk
 and     d_year                  = 2000
 and     d_moy                   = 5
 and     ws_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -6
 group by i_item_id)
  select  i_item_id ,sum(total_sales) total_sales
 from  (select * from ss 
        union all
        select * from cs 
        union all
        select * from ws) tmp1
 group by i_item_id
 order by total_sales,
          i_item_id
 limit 100;","with ss as (
 select i_item_id,sum(ss_ext_sales_price) total_sales
 from
 	store_sales,
 	date_dim,
         customer_address,
         item
 where i_item_id in (select
     i_item_id
from item
where i_color in ('cyan','royal','seashell'))
 and     ss_item_sk              = i_item_sk
 and     ss_sold_date_sk         = d_date_sk
 and     d_year                  = 2000
 and     d_moy                   = 5
 and     ss_addr_sk              = ca_address_sk
 and     ca_gmt_offset           = -6 
 group by i_item_id),
 cs as (
 select i_item_id,sum(cs_ext_sales_price) total_sales
 from
 	catalog_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id               in (select
  i_item_id
from item
where i_color in ('cyan','royal','seashell'))
 and     cs_item_sk              = i_item_sk
 and     cs_sold_date_sk         = d_date_sk
 and     d_year                  = 2000
 and     d_moy                   = 5
 and     cs_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -6 
 group by i_item_id),
 ws as (
 select i_item_id,sum(ws_ext_sales_price) total_sales
 from
 	web_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id               in (select
  i_item_id
from item
where i_color in ('cyan','royal','seashell'))
 and     ws_item_sk              = i_item_sk
 and     ws_sold_date_sk         = d_date_sk
 and     d_year                  = 2000
 and     d_moy                   = 5
 and     ws_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -6
 group by i_item_id)
  select  i_item_id ,sum(total_sales) total_sales
 from  (select * from ss 
        union all
        select * from cs 
        union all
        select * from ws) tmp1
 group by i_item_id
 order by total_sales,
          i_item_id
 limit 100;",RemoveNoopOperators,tpcds,"with ss as (
 select i_item_id,sum(ss_ext_sales_price) total_sales
 from
 	store_sales,
 	date_dim,
         customer_address,
         item
 where i_item_id in (select
     i_item_id
from item
where i_color in ('cyan','royal','seashell'))
 and     ss_item_sk              = i_item_sk
 and     ss_sold_date_sk         = d_date_sk
 and     d_year                  = 2000
 and     d_moy                   = 5
 and     ss_addr_sk              = ca_address_sk
 and     ca_gmt_offset           = -6 
 group by i_item_id),
 cs as (
 select i_item_id,sum(cs_ext_sales_price) total_sales
 from
 	catalog_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id               in (select
  i_item_id
from item
where i_color in ('cyan','royal','seashell'))
 and     cs_item_sk              = i_item_sk
 and     cs_sold_date_sk         = d_date_sk
 and     d_year                  = 2000
 and     d_moy                   = 5
 and     cs_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -6 
 group by i_item_id),
 ws as (
 select i_item_id,sum(ws_ext_sales_price) total_sales
 from
 	web_sales,
 	date_dim,
         customer_address,
         item
 where
         i_item_id               in (select
  i_item_id
from item
where i_color in ('cyan','royal','seashell'))
 and     ws_item_sk              = i_item_sk
 and     ws_sold_date_sk         = d_date_sk
 and     d_year                  = 2000
 and     d_moy                   = 5
 and     ws_bill_addr_sk         = ca_address_sk
 and     ca_gmt_offset           = -6
 group by i_item_id)
  select  i_item_id ,sum(total_sales) total_sales
 from  (select * from ss 
        union all
        select * from cs 
        union all
        select * from ws) tmp1
 group by i_item_id
 order by total_sales,
          i_item_id
 limit 100;",CombineUnions
86,sql_084.sql,"with wscs as
 (select sold_date_sk
        ,sales_price
  from (select ws_sold_date_sk sold_date_sk
              ,ws_ext_sales_price sales_price
        from web_sales 
        union all
        select cs_sold_date_sk sold_date_sk
              ,cs_ext_sales_price sales_price
        from catalog_sales)),
 wswscs as 
 (select d_week_seq,
        sum(case when (d_day_name='Sunday') then sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then sales_price else null end) sat_sales
 from wscs
     ,date_dim
 where d_date_sk = sold_date_sk
 group by d_week_seq)
 select d_week_seq1
       ,round(sun_sales1/sun_sales2,2)
       ,round(mon_sales1/mon_sales2,2)
       ,round(tue_sales1/tue_sales2,2)
       ,round(wed_sales1/wed_sales2,2)
       ,round(thu_sales1/thu_sales2,2)
       ,round(fri_sales1/fri_sales2,2)
       ,round(sat_sales1/sat_sales2,2)
 from
 (select wswscs.d_week_seq d_week_seq1
        ,sun_sales sun_sales1
        ,mon_sales mon_sales1
        ,tue_sales tue_sales1
        ,wed_sales wed_sales1
        ,thu_sales thu_sales1
        ,fri_sales fri_sales1
        ,sat_sales sat_sales1
  from wswscs,date_dim 
  where date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 1999) y,
 (select wswscs.d_week_seq d_week_seq2
        ,sun_sales sun_sales2
        ,mon_sales mon_sales2
        ,tue_sales tue_sales2
        ,wed_sales wed_sales2
        ,thu_sales thu_sales2
        ,fri_sales fri_sales2
        ,sat_sales sat_sales2
  from wswscs
      ,date_dim 
  where date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 1999+1) z
 where d_week_seq1=d_week_seq2-53
 order by d_week_seq1;","with wscs as
 (select sold_date_sk
        ,sales_price
  from (select ws_sold_date_sk sold_date_sk
              ,ws_ext_sales_price sales_price
        from web_sales 
        union all
        select cs_sold_date_sk sold_date_sk
              ,cs_ext_sales_price sales_price
        from catalog_sales)),
 wswscs as 
 (select d_week_seq,
        sum(case when (d_day_name='Sunday') then sales_price else null end) sun_sales,
        sum(case when (d_day_name='Monday') then sales_price else null end) mon_sales,
        sum(case when (d_day_name='Tuesday') then sales_price else  null end) tue_sales,
        sum(case when (d_day_name='Wednesday') then sales_price else null end) wed_sales,
        sum(case when (d_day_name='Thursday') then sales_price else null end) thu_sales,
        sum(case when (d_day_name='Friday') then sales_price else null end) fri_sales,
        sum(case when (d_day_name='Saturday') then sales_price else null end) sat_sales
 from wscs
     ,date_dim
 where d_date_sk = sold_date_sk
 group by d_week_seq)
 select d_week_seq1
       ,round(sun_sales1/sun_sales2,2)
       ,round(mon_sales1/mon_sales2,2)
       ,round(tue_sales1/tue_sales2,2)
       ,round(wed_sales1/wed_sales2,2)
       ,round(thu_sales1/thu_sales2,2)
       ,round(fri_sales1/fri_sales2,2)
       ,round(sat_sales1/sat_sales2,2)
 from
 (select wswscs.d_week_seq d_week_seq1
        ,sun_sales sun_sales1
        ,mon_sales mon_sales1
        ,tue_sales tue_sales1
        ,wed_sales wed_sales1
        ,thu_sales thu_sales1
        ,fri_sales fri_sales1
        ,sat_sales sat_sales1
  from wswscs,date_dim 
  where date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 1999) y,
 (select wswscs.d_week_seq d_week_seq2
        ,sun_sales sun_sales2
        ,mon_sales mon_sales2
        ,tue_sales tue_sales2
        ,wed_sales wed_sales2
        ,thu_sales thu_sales2
        ,fri_sales fri_sales2
        ,sat_sales sat_sales2
  from wswscs
      ,date_dim 
  where date_dim.d_week_seq = wswscs.d_week_seq and
        d_year = 1999+1) z
 where d_week_seq1=d_week_seq2-53
 order by d_week_seq1;",None,tpcds,"SELECT t2363.d_week_seq1, ROUND(t2363.sun_sales1 / t2373.sun_sales2, 2), ROUND(t2363.mon_sales1 / t2373.mon_sales2, 2), ROUND(t2363.tue_sales1 / t2373.tue_sales2, 2), ROUND(t2363.wed_sales1 / t2373.wed_sales2, 2), ROUND(t2363.thu_sales1 / t2373.thu_sales2, 2), ROUND(t2363.fri_sales1 / t2373.fri_sales2, 2), ROUND(t2363.sat_sales1 / t2373.sat_sales2, 2)

FROM (SELECT t2360.d_week_seq AS d_week_seq1, t2360.sun_sales AS sun_sales1, t2360.mon_sales AS mon_sales1, t2360.tue_sales AS tue_sales1, t2360.wed_sales AS wed_sales1, t2360.thu_sales AS thu_sales1, t2360.fri_sales AS fri_sales1, t2360.sat_sales AS sat_sales1

FROM (SELECT d_week_seq, SUM(_f1) AS sun_sales, SUM(_f2) AS mon_sales, SUM(_f3) AS tue_sales, SUM(_f4) AS wed_sales, SUM(_f5) AS thu_sales, SUM(_f6) AS fri_sales, SUM(_f7) AS sat_sales

FROM (SELECT d_week_seq, CASE WHEN CAST(d_day_name AS CHAR(6)) = 'Sunday' THEN sales_price ELSE NULL END AS _f1, CASE WHEN CAST(d_day_name AS CHAR(6)) = 'Monday' THEN sales_price ELSE NULL END AS _f2, CASE WHEN CAST(d_day_name AS CHAR(7)) = 'Tuesday' THEN sales_price ELSE NULL END AS _f3, CASE WHEN CAST(d_day_name AS CHAR(9)) = 'Wednesday' THEN sales_price ELSE NULL END AS _f4, CASE WHEN CAST(d_day_name AS CHAR(8)) = 'Thursday' THEN sales_price ELSE NULL END AS _f5, CASE WHEN CAST(d_day_name AS CHAR(6)) = 'Friday' THEN sales_price ELSE NULL END AS _f6, CASE WHEN CAST(d_day_name AS CHAR(8)) = 'Saturday' THEN sales_price ELSE NULL END AS _f7

FROM (SELECT *

FROM (SELECT ws_sold_date_sk AS sold_date_sk, ws_ext_sales_price AS sales_price

FROM web_sales) AS t2354,

date_dim AS date_dim701

WHERE date_dim701.d_date_sk = t2354.sold_date_sk

UNION ALL

SELECT *

FROM (SELECT cs_sold_date_sk AS sold_date_sk, cs_ext_sales_price AS sales_price

FROM catalog_sales) AS t2356,

date_dim AS date_dim702

WHERE date_dim702.d_date_sk = t2356.sold_date_sk) AS t) AS t2359

GROUP BY d_week_seq) AS t2360,

(SELECT *

FROM date_dim

WHERE d_year = 2001) AS t2361

WHERE t2361.d_week_seq = t2360.d_week_seq) AS t2363,

(SELECT t2370.d_week_seq AS d_week_seq2, t2370.sun_sales AS sun_sales2, t2370.mon_sales AS mon_sales2, t2370.tue_sales AS tue_sales2, t2370.wed_sales AS wed_sales2, t2370.thu_sales AS thu_sales2, t2370.fri_sales AS fri_sales2, t2370.sat_sales AS sat_sales2

FROM (SELECT d_week_seq, SUM(_f1) AS sun_sales, SUM(_f2) AS mon_sales, SUM(_f3) AS tue_sales, SUM(_f4) AS wed_sales, SUM(_f5) AS thu_sales, SUM(_f6) AS fri_sales, SUM(_f7) AS sat_sales

FROM (SELECT d_week_seq, CASE WHEN CAST(d_day_name AS CHAR(6)) = 'Sunday' THEN sales_price ELSE NULL END AS _f1, CASE WHEN CAST(d_day_name AS CHAR(6)) = 'Monday' THEN sales_price ELSE NULL END AS _f2, CASE WHEN CAST(d_day_name AS CHAR(7)) = 'Tuesday' THEN sales_price ELSE NULL END AS _f3, CASE WHEN CAST(d_day_name AS CHAR(9)) = 'Wednesday' THEN sales_price ELSE NULL END AS _f4, CASE WHEN CAST(d_day_name AS CHAR(8)) = 'Thursday' THEN sales_price ELSE NULL END AS _f5, CASE WHEN CAST(d_day_name AS CHAR(6)) = 'Friday' THEN sales_price ELSE NULL END AS _f6, CASE WHEN CAST(d_day_name AS CHAR(8)) = 'Saturday' THEN sales_price ELSE NULL END AS _f7

FROM (SELECT *

FROM (SELECT ws_sold_date_sk AS sold_date_sk, ws_ext_sales_price AS sales_price

FROM web_sales) AS t2364,

date_dim AS date_dim704

WHERE date_dim704.d_date_sk = t2364.sold_date_sk

UNION ALL

SELECT *

FROM (SELECT cs_sold_date_sk AS sold_date_sk, cs_ext_sales_price AS sales_price

FROM catalog_sales) AS t2366,

date_dim AS date_dim705

WHERE date_dim705.d_date_sk = t2366.sold_date_sk) AS t) AS t2369

GROUP BY d_week_seq) AS t2370,

(SELECT *

FROM date_dim

WHERE d_year = 2001 + 1) AS t2371

WHERE t2371.d_week_seq = t2370.d_week_seq) AS t2373

WHERE t2363.d_week_seq1 = t2373.d_week_seq2 - 53

ORDER BY t2363.d_week_seq1",PushProjectionThroughUnion
87,sql_085.sql,"select  i_item_id, 
        avg(cs_quantity) agg1,
        avg(cs_list_price) agg2,
        avg(cs_coupon_amt) agg3,
        avg(cs_sales_price) agg4 
 from catalog_sales, customer_demographics, date_dim, item, promotion
 where cs_sold_date_sk = d_date_sk and
       cs_item_sk = i_item_sk and
       cs_bill_cdemo_sk = cd_demo_sk and
       cs_promo_sk = p_promo_sk and
       cd_gender = 'F' and 
       cd_marital_status = 'M' and
       cd_education_status = '4 yr Degree' and
       (p_channel_email = 'N' or p_channel_event = 'N') and
       d_year = 2000 
 group by i_item_id
 order by i_item_id
 limit 100;","select  i_item_id, 
        avg(cs_quantity) agg1,
        avg(cs_list_price) agg2,
        avg(cs_coupon_amt) agg3,
        avg(cs_sales_price) agg4 
 from catalog_sales, customer_demographics, date_dim, item, promotion
 where cs_sold_date_sk = d_date_sk and
       cs_item_sk = i_item_sk and
       cs_bill_cdemo_sk = cd_demo_sk and
       cs_promo_sk = p_promo_sk and
       cd_gender = 'F' and 
       cd_marital_status = 'M' and
       cd_education_status = '4 yr Degree' and
       (p_channel_email = 'N' or p_channel_event = 'N') and
       d_year = 2000 
 group by i_item_id
 order by i_item_id
 limit 100;",None,tpcds,"SELECT item103.i_item_id, AVG(catalog_sales103.cs_quantity) AS agg1, AVG(catalog_sales103.cs_list_price) AS agg2, AVG(catalog_sales103.cs_coupon_amt) AS agg3, AVG(catalog_sales103.cs_sales_price) AS agg4

FROM catalog_sales AS catalog_sales103

INNER JOIN (SELECT *

FROM customer_demographics

WHERE cd_gender = 'M' AND cd_marital_status = 'S' AND cd_education_status = 'Primary') AS t794 ON catalog_sales103.cs_bill_cdemo_sk = t794.cd_demo_sk

INNER JOIN (SELECT *

FROM date_dim

WHERE d_year = 1999) AS t795 ON catalog_sales103.cs_sold_date_sk = t795.d_date_sk

INNER JOIN item AS item103 ON catalog_sales103.cs_item_sk = item103.i_item_sk

INNER JOIN (SELECT *

FROM promotion

WHERE p_channel_email = 'N' OR p_channel_event = 'N') AS t796 ON catalog_sales103.cs_promo_sk = t796.p_promo_sk

GROUP BY item103.i_item_id

ORDER BY item103.i_item_id

LIMIT 100",None
88,sql_086.sql,"select  
   w_state
  ,i_item_id
  ,sum(case when (cast(d_date as date) < cast ('2002-02-27' as date)) 
 		then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_before
  ,sum(case when (cast(d_date as date) >= cast ('2002-02-27' as date)) 
 		then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_after
 from
   catalog_sales left outer join catalog_returns on
       (cs_order_number = cr_order_number 
        and cs_item_sk = cr_item_sk)
  ,warehouse 
  ,item
  ,date_dim
 where
     i_current_price between 0.99 and 1.49
 and i_item_sk          = cs_item_sk
 and cs_warehouse_sk    = w_warehouse_sk 
 and cs_sold_date_sk    = d_date_sk
 and d_date between (date_add(cast('2002-02-27' as date), -30))
                and (date_add(cast('2002-02-27' as date), 30)) 
 group by
    w_state,i_item_id
 order by w_state,i_item_id
limit 100;","select  
   w_state
  ,i_item_id
  ,sum(case when (cast(d_date as date) < cast ('2002-02-27' as date)) 
 		then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_before
  ,sum(case when (cast(d_date as date) >= cast ('2002-02-27' as date)) 
 		then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_after
 from
   catalog_sales left outer join catalog_returns on
       (cs_order_number = cr_order_number 
        and cs_item_sk = cr_item_sk)
  ,warehouse 
  ,item
  ,date_dim
 where
     i_current_price between 0.99 and 1.49
 and i_item_sk          = cs_item_sk
 and cs_warehouse_sk    = w_warehouse_sk 
 and cs_sold_date_sk    = d_date_sk
 and d_date between (date_add(cast('2002-02-27' as date), -30))
                and (date_add(cast('2002-02-27' as date), 30)) 
 group by
    w_state,i_item_id
 order by w_state,i_item_id
limit 100;",None,tpcds,"select  
   w_state
  ,i_item_id
  ,sum(case when (cast(d_date as date) < cast ('2002-02-27' as date)) 
 		then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_before
  ,sum(case when (cast(d_date as date) >= cast ('2002-02-27' as date)) 
 		then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_after
 from
   catalog_sales left outer join catalog_returns on
       (cs_order_number = cr_order_number 
        and cs_item_sk = cr_item_sk)
  ,warehouse 
  ,item
  ,date_dim
 where
     i_current_price between 0.99 and 1.49
 and i_item_sk          = cs_item_sk
 and cs_warehouse_sk    = w_warehouse_sk 
 and cs_sold_date_sk    = d_date_sk
 and d_date between (date_add(cast('2002-02-27' as date), -30))
                and (date_add(cast('2002-02-27' as date), 30)) 
 group by
    w_state,i_item_id
 order by w_state,i_item_id
limit 100;",ConstantFolding
89,sql_087.sql,"select  i_item_desc
      ,w_warehouse_name
      ,d1.d_week_seq
      ,sum(case when p_promo_sk is null then 1 else 0 end) no_promo
      ,sum(case when p_promo_sk is not null then 1 else 0 end) promo
      ,count(*) total_cnt
from catalog_sales
join inventory on (cs_item_sk = inv_item_sk)
join warehouse on (w_warehouse_sk=inv_warehouse_sk)
join item on (i_item_sk = cs_item_sk)
join customer_demographics on (cs_bill_cdemo_sk = cd_demo_sk)
join household_demographics on (cs_bill_hdemo_sk = hd_demo_sk)
join date_dim d1 on (cs_sold_date_sk = d1.d_date_sk)
join date_dim d2 on (inv_date_sk = d2.d_date_sk)
join date_dim d3 on (cs_ship_date_sk = d3.d_date_sk)
left outer join promotion on (cs_promo_sk=p_promo_sk)
left outer join catalog_returns on (cr_item_sk = cs_item_sk and cr_order_number = cs_order_number)
where d1.d_week_seq = d2.d_week_seq
  and inv_quantity_on_hand < cs_quantity 
  and d3.d_date > d1.d_date + 5
  and hd_buy_potential = '1001-5000'
  and d1.d_year = 2000
  and cd_marital_status = 'W'
group by i_item_desc,w_warehouse_name,d1.d_week_seq
order by total_cnt desc, i_item_desc, w_warehouse_name, d_week_seq
limit 100;","SELECT item.i_item_desc, warehouse.w_warehouse_name, t1.d_week_seq, SUM(CASE WHEN promotion.p_promo_sk IS NULL THEN 1 ELSE 0 END) AS no_promo, SUM(CASE WHEN promotion.p_promo_sk IS NOT NULL THEN 1 ELSE 0 END) AS promo, COUNT(*) AS total_cnt FROM catalog_sales INNER JOIN inventory ON catalog_sales.cs_item_sk = inventory.inv_item_sk AND catalog_sales.cs_quantity > inventory.inv_quantity_on_hand INNER JOIN warehouse ON inventory.inv_warehouse_sk = warehouse.w_warehouse_sk INNER JOIN item ON catalog_sales.cs_item_sk = item.i_item_sk INNER JOIN (SELECT * FROM customer_demographics WHERE cd_marital_status = 'W') AS t ON catalog_sales.cs_bill_cdemo_sk = t.cd_demo_sk INNER JOIN (SELECT * FROM household_demographics WHERE hd_buy_potential = '1001-5000') AS t0 ON catalog_sales.cs_bill_hdemo_sk = t0.hd_demo_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year = 2000) AS t1 ON catalog_sales.cs_sold_date_sk = t1.d_date_sk INNER JOIN date_dim AS date_dim0 ON inventory.inv_date_sk = date_dim0.d_date_sk AND t1.d_week_seq = date_dim0.d_week_seq INNER JOIN date_dim AS date_dim1 ON catalog_sales.cs_ship_date_sk = date_dim1.d_date_sk AND date_dim1.d_date > (t1.d_date + INTERVAL '5' DAY) LEFT JOIN promotion ON catalog_sales.cs_promo_sk = promotion.p_promo_sk LEFT JOIN catalog_returns ON catalog_sales.cs_item_sk = catalog_returns.cr_item_sk AND catalog_sales.cs_order_number = catalog_returns.cr_order_number GROUP BY item.i_item_desc, warehouse.w_warehouse_name, t1.d_week_seq ORDER BY COUNT(*) DESC, item.i_item_desc, warehouse.w_warehouse_name, t1.d_week_seq LIMIT 100",None,tpcds,"select  i_item_desc
      ,w_warehouse_name
      ,d1.d_week_seq
      ,sum(case when p_promo_sk is null then 1 else 0 end) no_promo
      ,sum(case when p_promo_sk is not null then 1 else 0 end) promo
      ,count(*) total_cnt
from catalog_sales
join inventory on (cs_item_sk = inv_item_sk)
join warehouse on (w_warehouse_sk=inv_warehouse_sk)
join item on (i_item_sk = cs_item_sk)
join customer_demographics on (cs_bill_cdemo_sk = cd_demo_sk)
join household_demographics on (cs_bill_hdemo_sk = hd_demo_sk)
join date_dim d1 on (cs_sold_date_sk = d1.d_date_sk)
join date_dim d2 on (inv_date_sk = d2.d_date_sk)
join date_dim d3 on (cs_ship_date_sk = d3.d_date_sk)
left outer join promotion on (cs_promo_sk=p_promo_sk)
left outer join catalog_returns on (cr_item_sk = cs_item_sk and cr_order_number = cs_order_number)
where d1.d_week_seq = d2.d_week_seq
  and inv_quantity_on_hand < cs_quantity 
  and d3.d_date > d1.d_date + 5
  and hd_buy_potential = '1001-5000'
  and d1.d_year = 2000
  and cd_marital_status = 'W'
group by i_item_desc,w_warehouse_name,d1.d_week_seq
order by total_cnt desc, i_item_desc, w_warehouse_name, d_week_seq
limit 100;",None
90,sql_088.sql,"select  * from 
(select i_manufact_id,
sum(ss_sales_price) sum_sales,
avg(sum(ss_sales_price)) over (partition by i_manufact_id) avg_quarterly_sales
from item, store_sales, date_dim, store
where ss_item_sk = i_item_sk and
ss_sold_date_sk = d_date_sk and
ss_store_sk = s_store_sk and
d_month_seq in (1180,1180+1,1180+2,1180+3,1180+4,1180+5,1180+6,1180+7,1180+8,1180+9,1180+10,1180+11) and
((i_category in ('Books','Children','Electronics') and
i_class in ('personal','portable','reference','self-help') and
i_brand in ('scholaramalgamalg #14','scholaramalgamalg #7',
		'exportiunivamalg #9','scholaramalgamalg #9'))
or(i_category in ('Women','Music','Men') and
i_class in ('accessories','classical','fragrances','pants') and
i_brand in ('amalgimporto #1','edu packscholar #1','exportiimporto #1',
		'importoamalg #1')))
group by i_manufact_id, d_qoy ) tmp1
where case when avg_quarterly_sales > 0 
	then abs (sum_sales - avg_quarterly_sales)/ avg_quarterly_sales 
	else null end > 0.1
order by avg_quarterly_sales,
	 sum_sales,
	 i_manufact_id
limit 100;","select  * from 
(select i_manufact_id,
sum(ss_sales_price) sum_sales,
avg(sum(ss_sales_price)) over (partition by i_manufact_id) avg_quarterly_sales
from item, store_sales, date_dim, store
where ss_item_sk = i_item_sk and
ss_sold_date_sk = d_date_sk and
ss_store_sk = s_store_sk and
d_month_seq in (1180,1180+1,1180+2,1180+3,1180+4,1180+5,1180+6,1180+7,1180+8,1180+9,1180+10,1180+11) and
((i_category in ('Books','Children','Electronics') and
i_class in ('personal','portable','reference','self-help') and
i_brand in ('scholaramalgamalg #14','scholaramalgamalg #7',
		'exportiunivamalg #9','scholaramalgamalg #9'))
or(i_category in ('Women','Music','Men') and
i_class in ('accessories','classical','fragrances','pants') and
i_brand in ('amalgimporto #1','edu packscholar #1','exportiimporto #1',
		'importoamalg #1')))
group by i_manufact_id, d_qoy ) tmp1
where case when avg_quarterly_sales > 0 
	then abs (sum_sales - avg_quarterly_sales)/ avg_quarterly_sales 
	else null end > 0.1
order by avg_quarterly_sales,
	 sum_sales,
	 i_manufact_id
limit 100;",CollapseProject,tpcds,"select  * from 
(select i_manufact_id,
sum(ss_sales_price) sum_sales,
avg(sum(ss_sales_price)) over (partition by i_manufact_id) avg_quarterly_sales
from item, store_sales, date_dim, store
where ss_item_sk = i_item_sk and
ss_sold_date_sk = d_date_sk and
ss_store_sk = s_store_sk and
d_month_seq in (1180,1180+1,1180+2,1180+3,1180+4,1180+5,1180+6,1180+7,1180+8,1180+9,1180+10,1180+11) and
((i_category in ('Books','Children','Electronics') and
i_class in ('personal','portable','reference','self-help') and
i_brand in ('scholaramalgamalg #14','scholaramalgamalg #7',
		'exportiunivamalg #9','scholaramalgamalg #9'))
or(i_category in ('Women','Music','Men') and
i_class in ('accessories','classical','fragrances','pants') and
i_brand in ('amalgimporto #1','edu packscholar #1','exportiimporto #1',
		'importoamalg #1')))
group by i_manufact_id, d_qoy ) tmp1
where case when avg_quarterly_sales > 0 
	then abs (sum_sales - avg_quarterly_sales)/ avg_quarterly_sales 
	else null end > 0.1
order by avg_quarterly_sales,
	 sum_sales,
	 i_manufact_id
limit 100;","CollapseProject,OptimizeIn"
91,sql_089.sql,"select 
  c_last_name,c_first_name,substr(s_city,1,30),ss_ticket_number,amt,profit
  from
   (select ss_ticket_number
          ,ss_customer_sk
          ,store.s_city
          ,sum(ss_coupon_amt) amt
          ,sum(ss_net_profit) profit
    from store_sales,date_dim,store,household_demographics
    where store_sales.ss_sold_date_sk = date_dim.d_date_sk
    and store_sales.ss_store_sk = store.s_store_sk  
    and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
    and (household_demographics.hd_dep_count = 5 or household_demographics.hd_vehicle_count > 1)
    and date_dim.d_dow = 1
    and date_dim.d_year in (2000,2000+1,2000+2) 
    and store.s_number_employees between 200 and 295
    group by ss_ticket_number,ss_customer_sk,ss_addr_sk,store.s_city) ms,customer
    where ss_customer_sk = c_customer_sk
 order by c_last_name,c_first_name,substr(s_city,1,30), profit
limit 100;","select 
  c_last_name,c_first_name,substr(s_city,1,30),ss_ticket_number,amt,profit
  from
   (select ss_ticket_number
          ,ss_customer_sk
          ,store.s_city
          ,sum(ss_coupon_amt) amt
          ,sum(ss_net_profit) profit
    from store_sales,date_dim,store,household_demographics
    where store_sales.ss_sold_date_sk = date_dim.d_date_sk
    and store_sales.ss_store_sk = store.s_store_sk  
    and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
    and (household_demographics.hd_dep_count = 5 or household_demographics.hd_vehicle_count > 1)
    and date_dim.d_dow = 1
    and date_dim.d_year in (2000,2000+1,2000+2) 
    and store.s_number_employees between 200 and 295
    group by ss_ticket_number,ss_customer_sk,ss_addr_sk,store.s_city) ms,customer
    where ss_customer_sk = c_customer_sk
 order by c_last_name,c_first_name,substr(s_city,1,30), profit
limit 100;",None,tpcds,"select 
  c_last_name,c_first_name,substr(s_city,1,30),ss_ticket_number,amt,profit
  from
   (select ss_ticket_number
          ,ss_customer_sk
          ,store.s_city
          ,sum(ss_coupon_amt) amt
          ,sum(ss_net_profit) profit
    from store_sales,date_dim,store,household_demographics
    where store_sales.ss_sold_date_sk = date_dim.d_date_sk
    and store_sales.ss_store_sk = store.s_store_sk  
    and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
    and (household_demographics.hd_dep_count = 5 or household_demographics.hd_vehicle_count > 1)
    and date_dim.d_dow = 1
    and date_dim.d_year in (2000,2000+1,2000+2) 
    and store.s_number_employees between 200 and 295
    group by ss_ticket_number,ss_customer_sk,ss_addr_sk,store.s_city) ms,customer
    where ss_customer_sk = c_customer_sk
 order by c_last_name,c_first_name,substr(s_city,1,30), profit
limit 100;",None
92,sql_090.sql,"select  i_item_id,
        ca_country,
        ca_state, 
        ca_county,
        avg( cast(cs_quantity as decimal(12,2))) agg1,
        avg( cast(cs_list_price as decimal(12,2))) agg2,
        avg( cast(cs_coupon_amt as decimal(12,2))) agg3,
        avg( cast(cs_sales_price as decimal(12,2))) agg4,
        avg( cast(cs_net_profit as decimal(12,2))) agg5,
        avg( cast(c_birth_year as decimal(12,2))) agg6,
        avg( cast(cd1.cd_dep_count as decimal(12,2))) agg7
 from catalog_sales, customer_demographics cd1, 
      customer_demographics cd2, customer, customer_address, date_dim, item
 where cs_sold_date_sk = d_date_sk and
       cs_item_sk = i_item_sk and
       cs_bill_cdemo_sk = cd1.cd_demo_sk and
       cs_bill_customer_sk = c_customer_sk and
       cd1.cd_gender = 'F' and 
       cd1.cd_education_status = 'College' and
       c_current_cdemo_sk = cd2.cd_demo_sk and
       c_current_addr_sk = ca_address_sk and
       c_birth_month in (9,7,4,10,3,12) and
       d_year = 2001 and
       ca_state in ('LA','KY','MN'
                   ,'SC','NC','SD','IA')
 group by rollup (i_item_id, ca_country, ca_state, ca_county)
 order by ca_country,
        ca_state, 
        ca_county,
	i_item_id
 limit 100;","SELECT item.i_item_id, customer_address.ca_country, customer_address.ca_state, customer_address.ca_county, AVG(CAST(catalog_sales.cs_quantity AS DECIMAL(12, 2))) AS agg1, AVG(CAST(catalog_sales.cs_list_price AS DECIMAL(12, 2))) AS agg2, AVG(CAST(catalog_sales.cs_coupon_amt AS DECIMAL(12, 2))) AS agg3, AVG(CAST(catalog_sales.cs_sales_price AS DECIMAL(12, 2))) AS agg4, AVG(CAST(catalog_sales.cs_net_profit AS DECIMAL(12, 2))) AS agg5, AVG(CAST(customer.c_birth_year AS DECIMAL(12, 2))) AS agg6, AVG(CAST(customer_demographics.cd_dep_count AS DECIMAL(12, 2))) AS agg7 FROM catalog_sales, customer_demographics, customer_demographics AS customer_demographics0, customer, customer_address, date_dim, item WHERE catalog_sales.cs_sold_date_sk = date_dim.d_date_sk AND catalog_sales.cs_item_sk = item.i_item_sk AND (catalog_sales.cs_bill_cdemo_sk = customer_demographics.cd_demo_sk AND (catalog_sales.cs_bill_customer_sk = customer.c_customer_sk AND customer_demographics.cd_gender = 'F')) AND (customer_demographics.cd_education_status = 'College' AND (customer.c_current_cdemo_sk = customer_demographics0.cd_demo_sk AND customer.c_current_addr_sk = customer_address.ca_address_sk) AND (customer.c_birth_month IN (3, 4, 7, 9, 10, 12) AND (date_dim.d_year = 2001 AND customer_address.ca_state IN ('IA', 'KY', 'LA', 'MN', 'NC', 'SC', 'SD')))) GROUP BY ROLLUP(item.i_item_id, customer_address.ca_country, customer_address.ca_state, customer_address.ca_county) ORDER BY customer_address.ca_country, customer_address.ca_state, customer_address.ca_county, item.i_item_id LIMIT 100",RemoveNoopOperators,tpcds,"SELECT item103.i_item_id, t967.ca_country, t967.ca_state, t967.ca_county, AVG(CAST(catalog_sales103.cs_quantity AS DECIMAL(12, 2))) AS agg1, AVG(CAST(catalog_sales103.cs_list_price AS DECIMAL(12, 2))) AS agg2, AVG(CAST(catalog_sales103.cs_coupon_amt AS DECIMAL(12, 2))) AS agg3, AVG(CAST(catalog_sales103.cs_sales_price AS DECIMAL(12, 2))) AS agg4, AVG(CAST(catalog_sales103.cs_net_profit AS DECIMAL(12, 2))) AS agg5, AVG(CAST(t966.c_birth_year AS DECIMAL(12, 2))) AS agg6, AVG(CAST(t965.cd_dep_count AS DECIMAL(12, 2))) AS agg7

FROM catalog_sales AS catalog_sales103

INNER JOIN (SELECT *

FROM customer_demographics

WHERE cd_gender = 'M' AND cd_education_status = 'Primary') AS t965 ON catalog_sales103.cs_bill_cdemo_sk = t965.cd_demo_sk

CROSS JOIN customer_demographics AS customer_demographics208

INNER JOIN (SELECT *

FROM customer

WHERE c_birth_month IN (1, 2, 3, 5, 8, 9)) AS t966 ON catalog_sales103.cs_bill_customer_sk = t966.c_customer_sk AND customer_demographics208.cd_demo_sk = t966.c_current_cdemo_sk

INNER JOIN (SELECT *

FROM customer_address

WHERE ca_state IN ('AL', 'CA', 'KY', 'NV', 'OK', 'SD', 'WI')) AS t967 ON t966.c_current_addr_sk = t967.ca_address_sk

INNER JOIN (SELECT *

FROM date_dim

WHERE d_year = 1999) AS t968 ON catalog_sales103.cs_sold_date_sk = t968.d_date_sk

INNER JOIN item AS item103 ON catalog_sales103.cs_item_sk = item103.i_item_sk

GROUP BY ROLLUP(item103.i_item_id, t967.ca_country, t967.ca_state, t967.ca_county)

ORDER BY t967.ca_country, t967.ca_state, t967.ca_county, item103.i_item_id

LIMIT 100",RemoveRedundantAliases
93,sql_091.sql,"select avg(ss_quantity)
       ,avg(ss_ext_sales_price)
       ,avg(ss_ext_wholesale_cost)
       ,sum(ss_ext_wholesale_cost)
 from store_sales
     ,store
     ,customer_demographics
     ,household_demographics
     ,customer_address
     ,date_dim
 where s_store_sk = ss_store_sk
 and  ss_sold_date_sk = d_date_sk and d_year = 2001
 and((ss_hdemo_sk=hd_demo_sk
  and cd_demo_sk = ss_cdemo_sk
  and cd_marital_status = 'D'
  and cd_education_status = 'Secondary'
  and ss_sales_price between 100.00 and 150.00
  and hd_dep_count = 3   
     )or
     (ss_hdemo_sk=hd_demo_sk
  and cd_demo_sk = ss_cdemo_sk
  and cd_marital_status = 'W'
  and cd_education_status = 'Primary'
  and ss_sales_price between 50.00 and 100.00   
  and hd_dep_count = 1
     ) or 
     (ss_hdemo_sk=hd_demo_sk
  and cd_demo_sk = ss_cdemo_sk
  and cd_marital_status = 'S'
  and cd_education_status = '4 yr Degree'
  and ss_sales_price between 150.00 and 200.00 
  and hd_dep_count = 1  
     ))
 and((ss_addr_sk = ca_address_sk
  and ca_country = 'United States'
  and ca_state in ('GA', 'CA', 'TX')
  and ss_net_profit between 100 and 200  
     ) or
     (ss_addr_sk = ca_address_sk
  and ca_country = 'United States'
  and ca_state in ('VA', 'UT', 'IL')
  and ss_net_profit between 150 and 300  
     ) or
     (ss_addr_sk = ca_address_sk
  and ca_country = 'United States'
  and ca_state in ('WV', 'WA', 'OK')
  and ss_net_profit between 50 and 250  
     ))
;","SELECT AVG(store_sales.ss_quantity), AVG(store_sales.ss_ext_sales_price), AVG(store_sales.ss_ext_wholesale_cost), SUM(store_sales.ss_ext_wholesale_cost) FROM store_sales, store, customer_demographics, household_demographics, customer_address, date_dim WHERE store.s_store_sk = store_sales.ss_store_sk AND store_sales.ss_sold_date_sk = date_dim.d_date_sk AND date_dim.d_year = 2001 AND (store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk AND (customer_demographics.cd_demo_sk = store_sales.ss_cdemo_sk AND customer_demographics.cd_marital_status = 'D') AND (customer_demographics.cd_education_status = 'Secondary' AND (store_sales.ss_sales_price >= 100.00 AND store_sales.ss_sales_price <= 150.00 AND household_demographics.hd_dep_count = 3)) OR store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk AND (customer_demographics.cd_demo_sk = store_sales.ss_cdemo_sk AND customer_demographics.cd_marital_status = 'W') AND (customer_demographics.cd_education_status = 'Primary' AND (store_sales.ss_sales_price >= 50.00 AND store_sales.ss_sales_price <= 100.00 AND household_demographics.hd_dep_count = 1)) OR store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk AND (customer_demographics.cd_demo_sk = store_sales.ss_cdemo_sk AND customer_demographics.cd_marital_status = 'S') AND (customer_demographics.cd_education_status = '4 yr Degree' AND (store_sales.ss_sales_price >= 150.00 AND store_sales.ss_sales_price <= 200.00 AND household_demographics.hd_dep_count = 1))) AND (store_sales.ss_addr_sk = customer_address.ca_address_sk AND customer_address.ca_country = 'United States' AND customer_address.ca_state IN ('CA', 'GA', 'TX') AND (store_sales.ss_net_profit >= 100 AND store_sales.ss_net_profit <= 200) OR store_sales.ss_addr_sk = customer_address.ca_address_sk AND customer_address.ca_country = 'United States' AND customer_address.ca_state IN ('IL', 'UT', 'VA') AND (store_sales.ss_net_profit >= 150 AND store_sales.ss_net_profit <= 300) OR store_sales.ss_addr_sk = customer_address.ca_address_sk AND customer_address.ca_country = 'United States' AND customer_address.ca_state IN ('OK', 'WA', 'WV') AND (store_sales.ss_net_profit >= 50 AND store_sales.ss_net_profit <= 250))",ConstantFolding,tpcds,"SELECT AVG(store_sales82.ss_quantity), AVG(store_sales82.ss_ext_sales_price), AVG(store_sales82.ss_ext_wholesale_cost), SUM(store_sales82.ss_ext_wholesale_cost)

FROM store_sales AS store_sales82

INNER JOIN store AS store82 ON store_sales82.ss_store_sk = store82.s_store_sk

CROSS JOIN customer_demographics AS customer_demographics82

INNER JOIN household_demographics AS household_demographics82 ON store_sales82.ss_hdemo_sk = household_demographics82.hd_demo_sk AND (customer_demographics82.cd_demo_sk = store_sales82.ss_cdemo_sk AND customer_demographics82.cd_marital_status = 'M') AND (customer_demographics82.cd_education_status = 'Unknown' AND (store_sales82.ss_sales_price >= 100.00 AND store_sales82.ss_sales_price <= 150.00 AND household_demographics82.hd_dep_count = 3)) OR store_sales82.ss_hdemo_sk = household_demographics82.hd_demo_sk AND (customer_demographics82.cd_demo_sk = store_sales82.ss_cdemo_sk AND customer_demographics82.cd_marital_status = 'D') AND (customer_demographics82.cd_education_status = '4 yr Degree' AND (store_sales82.ss_sales_price >= 50.00 AND store_sales82.ss_sales_price <= 100.00 AND household_demographics82.hd_dep_count = 1)) OR store_sales82.ss_hdemo_sk = household_demographics82.hd_demo_sk AND (customer_demographics82.cd_demo_sk = store_sales82.ss_cdemo_sk AND customer_demographics82.cd_marital_status = 'W') AND (customer_demographics82.cd_education_status = 'Primary' AND (store_sales82.ss_sales_price >= 150.00 AND store_sales82.ss_sales_price <= 200.00 AND household_demographics82.hd_dep_count = 1))

INNER JOIN customer_address AS customer_address82 ON store_sales82.ss_addr_sk = customer_address82.ca_address_sk AND customer_address82.ca_country = 'United States' AND customer_address82.ca_state IN ('NC', 'NE', 'TX') AND (store_sales82.ss_net_profit >= 100 AND store_sales82.ss_net_profit <= 200) OR store_sales82.ss_addr_sk = customer_address82.ca_address_sk AND customer_address82.ca_country = 'United States' AND customer_address82.ca_state IN ('CO', 'DE', 'MN') AND (store_sales82.ss_net_profit >= 150 AND store_sales82.ss_net_profit <= 300) OR store_sales82.ss_addr_sk = customer_address82.ca_address_sk AND customer_address82.ca_country = 'United States' AND customer_address82.ca_state IN ('AL', 'ND', 'OH') AND (store_sales82.ss_net_profit >= 50 AND store_sales82.ss_net_profit <= 250)

INNER JOIN (SELECT *

FROM date_dim

WHERE d_year = 2001) AS t387 ON store_sales82.ss_sold_date_sk = t387.d_date_sk",ConstantFolding
94,sql_092_1.sql,"with ssales as
(select c_last_name
      ,c_first_name
      ,s_store_name
      ,ca_state
      ,s_state
      ,i_color
      ,i_current_price
      ,i_manager_id
      ,i_units
      ,i_size
      ,sum(ss_net_profit) netpaid
from store_sales
    ,store_returns
    ,store
    ,item
    ,customer
    ,customer_address
where ss_ticket_number = sr_ticket_number
  and ss_item_sk = sr_item_sk
  and ss_customer_sk = c_customer_sk
  and ss_item_sk = i_item_sk
  and ss_store_sk = s_store_sk
  and c_current_addr_sk = ca_address_sk
  and c_birth_country <> upper(ca_country)
  and s_zip = ca_zip
and s_market_id=5
group by c_last_name
        ,c_first_name
        ,s_store_name
        ,ca_state
        ,s_state
        ,i_color
        ,i_current_price
        ,i_manager_id
        ,i_units
        ,i_size)
select c_last_name
      ,c_first_name
      ,s_store_name
      ,sum(netpaid) paid
from ssales
where i_color = 'misty'
group by c_last_name
        ,c_first_name
        ,s_store_name
having sum(netpaid) > (select 0.05*avg(netpaid)
                                 from ssales)
order by c_last_name
        ,c_first_name
        ,s_store_name
;","SELECT t3.c_last_name, t3.c_first_name, t3.s_store_name, t3.paid FROM (SELECT c_last_name, c_first_name, s_store_name, SUM(netpaid) AS paid FROM (SELECT customer.c_last_name, customer.c_first_name, store.s_store_name, customer_address.ca_state, store.s_state, item.i_color, item.i_current_price, item.i_manager_id, item.i_units, item.i_size, SUM(store_sales.ss_net_profit) AS netpaid FROM store_sales, store_returns, store, item, customer, customer_address WHERE store_sales.ss_ticket_number = store_returns.sr_ticket_number AND store_sales.ss_item_sk = store_returns.sr_item_sk AND (store_sales.ss_customer_sk = customer.c_customer_sk AND store_sales.ss_item_sk = item.i_item_sk) AND (store_sales.ss_store_sk = store.s_store_sk AND customer.c_current_addr_sk = customer_address.ca_address_sk AND (customer.c_birth_country <> UPPER(customer_address.ca_country) AND (store.s_zip = customer_address.ca_zip AND store.s_market_id = 5))) GROUP BY store.s_store_name, store.s_state, item.i_current_price, item.i_manager_id, item.i_size, item.i_color, item.i_units, customer.c_last_name, customer.c_first_name, customer_address.ca_state) AS t1 WHERE t1.i_color = 'misty' GROUP BY c_last_name, c_first_name, s_store_name) AS t3 LEFT JOIN (SELECT 0.05 * AVG(t5.netpaid) AS EXPRdollar0 FROM (SELECT store0.s_store_name, store0.s_state, item0.i_current_price, item0.i_manager_id, item0.i_size, item0.i_color, item0.i_units, customer0.c_last_name, customer0.c_first_name, customer_address0.ca_state, SUM(store_sales0.ss_net_profit) AS netpaid FROM store_sales AS store_sales0, store_returns AS store_returns0, store AS store0, item AS item0, customer AS customer0, customer_address AS customer_address0 WHERE store_sales0.ss_ticket_number = store_returns0.sr_ticket_number AND store_sales0.ss_item_sk = store_returns0.sr_item_sk AND (store_sales0.ss_customer_sk = customer0.c_customer_sk AND store_sales0.ss_item_sk = item0.i_item_sk) AND (store_sales0.ss_store_sk = store0.s_store_sk AND customer0.c_current_addr_sk = customer_address0.ca_address_sk AND (customer0.c_birth_country <> UPPER(customer_address0.ca_country) AND (store0.s_zip = customer_address0.ca_zip AND store0.s_market_id = 5))) GROUP BY store0.s_store_name, store0.s_state, item0.i_current_price, item0.i_manager_id, item0.i_size, item0.i_color, item0.i_units, customer0.c_last_name, customer0.c_first_name, customer_address0.ca_state) AS t5) AS t7 ON TRUE WHERE t3.paid > t7.EXPRdollar0 ORDER BY t3.c_last_name, t3.c_first_name, t3.s_store_name",None,tpcds,"with ssales as
(select c_last_name
      ,c_first_name
      ,s_store_name
      ,ca_state
      ,s_state
      ,i_color
      ,i_current_price
      ,i_manager_id
      ,i_units
      ,i_size
      ,sum(ss_net_profit) netpaid
from store_sales
    ,store_returns
    ,store
    ,item
    ,customer
    ,customer_address
where ss_ticket_number = sr_ticket_number
  and ss_item_sk = sr_item_sk
  and ss_customer_sk = c_customer_sk
  and ss_item_sk = i_item_sk
  and ss_store_sk = s_store_sk
  and c_current_addr_sk = ca_address_sk
  and c_birth_country <> upper(ca_country)
  and s_zip = ca_zip
and s_market_id=5
group by c_last_name
        ,c_first_name
        ,s_store_name
        ,ca_state
        ,s_state
        ,i_color
        ,i_current_price
        ,i_manager_id
        ,i_units
        ,i_size)
select c_last_name
      ,c_first_name
      ,s_store_name
      ,sum(netpaid) paid
from ssales
where i_color = 'misty'
group by c_last_name
        ,c_first_name
        ,s_store_name
having sum(netpaid) > (select 0.05*avg(netpaid)
                                 from ssales)
order by c_last_name
        ,c_first_name
        ,s_store_name
;",None
95,sql_092_2.sql,"with ssales as
(select c_last_name
      ,c_first_name
      ,s_store_name
      ,ca_state
      ,s_state
      ,i_color
      ,i_current_price
      ,i_manager_id
      ,i_units
      ,i_size
      ,sum(ss_net_profit) netpaid
from store_sales
    ,store_returns
    ,store
    ,item
    ,customer
    ,customer_address
where ss_ticket_number = sr_ticket_number
  and ss_item_sk = sr_item_sk
  and ss_customer_sk = c_customer_sk
  and ss_item_sk = i_item_sk
  and ss_store_sk = s_store_sk
  and c_current_addr_sk = ca_address_sk
  and c_birth_country <> upper(ca_country)
  and s_zip = ca_zip
  and s_market_id = 5
group by c_last_name
        ,c_first_name
        ,s_store_name
        ,ca_state
        ,s_state
        ,i_color
        ,i_current_price
        ,i_manager_id
        ,i_units
        ,i_size)
select c_last_name
      ,c_first_name
      ,s_store_name
      ,sum(netpaid) paid
from ssales
where i_color = 'seashell'
group by c_last_name
        ,c_first_name
        ,s_store_name
having sum(netpaid) > (select 0.05*avg(netpaid)
                           from ssales)
order by c_last_name
        ,c_first_name
        ,s_store_name
;","SELECT t4.c_last_name, t4.c_first_name, t4.s_store_name, t4.paid FROM (SELECT t3.c_last_name, t3.c_first_name, t3.s_store_name, SUM(t3.netpaid) AS paid FROM (SELECT customer.c_last_name, customer.c_first_name, t.s_store_name, SUM(store_sales.ss_net_profit) AS netpaid FROM store_sales INNER JOIN store_returns ON store_sales.ss_ticket_number = store_returns.sr_ticket_number AND store_sales.ss_item_sk = store_returns.sr_item_sk INNER JOIN (SELECT * FROM store WHERE s_market_id = 5) AS t ON store_sales.ss_store_sk = t.s_store_sk INNER JOIN item ON store_sales.ss_item_sk = item.i_item_sk INNER JOIN customer ON store_sales.ss_customer_sk = customer.c_customer_sk INNER JOIN customer_address ON customer.c_current_addr_sk = customer_address.ca_address_sk AND customer.c_birth_country <> UPPER(customer_address.ca_country) AND t.s_zip = customer_address.ca_zip GROUP BY customer.c_last_name, customer.c_first_name, t.s_store_name, customer_address.ca_state, t.s_state, item.i_color, item.i_current_price, item.i_manager_id, item.i_units, item.i_size HAVING item.i_color = 'seashell') AS t3 GROUP BY t3.c_last_name, t3.c_first_name, t3.s_store_name) AS t4 INNER JOIN (SELECT 0.05 * AVG(t8.netpaid) AS EXPRdollar0 FROM (SELECT SUM(store_sales0.ss_net_profit) AS netpaid FROM store_sales AS store_sales0 INNER JOIN store_returns AS store_returns0 ON store_sales0.ss_ticket_number = store_returns0.sr_ticket_number AND store_sales0.ss_item_sk = store_returns0.sr_item_sk INNER JOIN (SELECT * FROM store WHERE s_market_id = 5) AS t5 ON store_sales0.ss_store_sk = t5.s_store_sk INNER JOIN item AS item0 ON store_sales0.ss_item_sk = item0.i_item_sk INNER JOIN customer AS customer0 ON store_sales0.ss_customer_sk = customer0.c_customer_sk INNER JOIN customer_address AS customer_address0 ON customer0.c_current_addr_sk = customer_address0.ca_address_sk AND customer0.c_birth_country <> UPPER(customer_address0.ca_country) AND t5.s_zip = customer_address0.ca_zip GROUP BY customer0.c_last_name, customer0.c_first_name, t5.s_store_name, customer_address0.ca_state, t5.s_state, item0.i_color, item0.i_current_price, item0.i_manager_id, item0.i_units, item0.i_size) AS t8) AS t10 ON t4.paid > t10.EXPRdollar0 ORDER BY t4.c_last_name, t4.c_first_name, t4.s_store_name",None,tpcds,"with ssales as
(select c_last_name
      ,c_first_name
      ,s_store_name
      ,ca_state
      ,s_state
      ,i_color
      ,i_current_price
      ,i_manager_id
      ,i_units
      ,i_size
      ,sum(ss_net_profit) netpaid
from store_sales
    ,store_returns
    ,store
    ,item
    ,customer
    ,customer_address
where ss_ticket_number = sr_ticket_number
  and ss_item_sk = sr_item_sk
  and ss_customer_sk = c_customer_sk
  and ss_item_sk = i_item_sk
  and ss_store_sk = s_store_sk
  and c_current_addr_sk = ca_address_sk
  and c_birth_country <> upper(ca_country)
  and s_zip = ca_zip
  and s_market_id = 5
group by c_last_name
        ,c_first_name
        ,s_store_name
        ,ca_state
        ,s_state
        ,i_color
        ,i_current_price
        ,i_manager_id
        ,i_units
        ,i_size)
select c_last_name
      ,c_first_name
      ,s_store_name
      ,sum(netpaid) paid
from ssales
where i_color = 'seashell'
group by c_last_name
        ,c_first_name
        ,s_store_name
having sum(netpaid) > (select 0.05*avg(netpaid)
                           from ssales)
order by c_last_name
        ,c_first_name
        ,s_store_name
;",None
96,sql_093.sql,"with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum(((ss_ext_list_price-ss_ext_wholesale_cost-ss_ext_discount_amt)+ss_ext_sales_price)/2) year_total
       ,'s' sale_type
 from customer
     ,store_sales
     ,date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum((((cs_ext_list_price-cs_ext_wholesale_cost-cs_ext_discount_amt)+cs_ext_sales_price)/2) ) year_total
       ,'c' sale_type
 from customer
     ,catalog_sales
     ,date_dim
 where c_customer_sk = cs_bill_customer_sk
   and cs_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum((((ws_ext_list_price-ws_ext_wholesale_cost-ws_ext_discount_amt)+ws_ext_sales_price)/2) ) year_total
       ,'w' sale_type
 from customer
     ,web_sales
     ,date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
         )
  select  
                  t_s_secyear.customer_id
                 ,t_s_secyear.customer_first_name
                 ,t_s_secyear.customer_last_name
                 ,t_s_secyear.customer_login
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_c_firstyear
     ,year_total t_c_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
   and t_s_firstyear.customer_id = t_c_secyear.customer_id
   and t_s_firstyear.customer_id = t_c_firstyear.customer_id
   and t_s_firstyear.customer_id = t_w_firstyear.customer_id
   and t_s_firstyear.customer_id = t_w_secyear.customer_id
   and t_s_firstyear.sale_type = 's'
   and t_c_firstyear.sale_type = 'c'
   and t_w_firstyear.sale_type = 'w'
   and t_s_secyear.sale_type = 's'
   and t_c_secyear.sale_type = 'c'
   and t_w_secyear.sale_type = 'w'
   and t_s_firstyear.dyear =  2001
   and t_s_secyear.dyear = 2001+1
   and t_c_firstyear.dyear =  2001
   and t_c_secyear.dyear =  2001+1
   and t_w_firstyear.dyear = 2001
   and t_w_secyear.dyear = 2001+1
   and t_s_firstyear.year_total > 0
   and t_c_firstyear.year_total > 0
   and t_w_firstyear.year_total > 0
   and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
   and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end
           > case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
 order by t_s_secyear.customer_id
         ,t_s_secyear.customer_first_name
         ,t_s_secyear.customer_last_name
         ,t_s_secyear.customer_login
limit 100;","SELECT t26.customer_id, t26.customer_first_name, t26.customer_last_name, t26.customer_login FROM (SELECT * FROM (SELECT customer.c_customer_id AS customer_id, customer.c_first_name AS customer_first_name, customer.c_last_name AS customer_last_name, customer.c_preferred_cust_flag AS customer_preferred_cust_flag, customer.c_birth_country AS customer_birth_country, customer.c_login AS customer_login, customer.c_email_address AS customer_email_address, date_dim.d_year AS dyear, SUM((store_sales.ss_ext_list_price - store_sales.ss_ext_wholesale_cost - store_sales.ss_ext_discount_amt + store_sales.ss_ext_sales_price) / 2) AS year_total, 's' AS sale_type FROM customer, store_sales, date_dim WHERE customer.c_customer_sk = store_sales.ss_customer_sk AND store_sales.ss_sold_date_sk = date_dim.d_date_sk GROUP BY customer.c_customer_id, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_country, customer.c_login, customer.c_email_address, date_dim.d_year UNION ALL SELECT customer0.c_customer_id AS customer_id, customer0.c_first_name AS customer_first_name, customer0.c_last_name AS customer_last_name, customer0.c_preferred_cust_flag AS customer_preferred_cust_flag, customer0.c_birth_country AS customer_birth_country, customer0.c_login AS customer_login, customer0.c_email_address AS customer_email_address, date_dim0.d_year AS dyear, SUM((catalog_sales.cs_ext_list_price - catalog_sales.cs_ext_wholesale_cost - catalog_sales.cs_ext_discount_amt + catalog_sales.cs_ext_sales_price) / 2) AS year_total, 'c' AS sale_type FROM customer AS customer0, catalog_sales, date_dim AS date_dim0 WHERE customer0.c_customer_sk = catalog_sales.cs_bill_customer_sk AND catalog_sales.cs_sold_date_sk = date_dim0.d_date_sk GROUP BY customer0.c_customer_id, customer0.c_first_name, customer0.c_last_name, customer0.c_preferred_cust_flag, customer0.c_birth_country, customer0.c_login, customer0.c_email_address, date_dim0.d_year) AS t UNION ALL SELECT customer1.c_customer_id AS customer_id, customer1.c_first_name AS customer_first_name, customer1.c_last_name AS customer_last_name, customer1.c_preferred_cust_flag AS customer_preferred_cust_flag, customer1.c_birth_country AS customer_birth_country, customer1.c_login AS customer_login, customer1.c_email_address AS customer_email_address, date_dim1.d_year AS dyear, SUM((web_sales.ws_ext_list_price - web_sales.ws_ext_wholesale_cost - web_sales.ws_ext_discount_amt + web_sales.ws_ext_sales_price) / 2) AS year_total, 'w' AS sale_type FROM customer AS customer1, web_sales, date_dim AS date_dim1 WHERE customer1.c_customer_sk = web_sales.ws_bill_customer_sk AND web_sales.ws_sold_date_sk = date_dim1.d_date_sk GROUP BY customer1.c_customer_id, customer1.c_first_name, customer1.c_last_name, customer1.c_preferred_cust_flag, customer1.c_birth_country, customer1.c_login, customer1.c_email_address, date_dim1.d_year) AS t12, (SELECT * FROM (SELECT customer2.c_customer_id AS customer_id, customer2.c_first_name AS customer_first_name, customer2.c_last_name AS customer_last_name, customer2.c_preferred_cust_flag AS customer_preferred_cust_flag, customer2.c_birth_country AS customer_birth_country, customer2.c_login AS customer_login, customer2.c_email_address AS customer_email_address, date_dim2.d_year AS dyear, SUM((store_sales0.ss_ext_list_price - store_sales0.ss_ext_wholesale_cost - store_sales0.ss_ext_discount_amt + store_sales0.ss_ext_sales_price) / 2) AS year_total, 's' AS sale_type FROM customer AS customer2, store_sales AS store_sales0, date_dim AS date_dim2 WHERE customer2.c_customer_sk = store_sales0.ss_customer_sk AND store_sales0.ss_sold_date_sk = date_dim2.d_date_sk GROUP BY customer2.c_customer_id, customer2.c_first_name, customer2.c_last_name, customer2.c_preferred_cust_flag, customer2.c_birth_country, customer2.c_login, customer2.c_email_address, date_dim2.d_year UNION ALL SELECT customer3.c_customer_id AS customer_id, customer3.c_first_name AS customer_first_name, customer3.c_last_name AS customer_last_name, customer3.c_preferred_cust_flag AS customer_preferred_cust_flag, customer3.c_birth_country AS customer_birth_country, customer3.c_login AS customer_login, customer3.c_email_address AS customer_email_address, date_dim3.d_year AS dyear, SUM((catalog_sales0.cs_ext_list_price - catalog_sales0.cs_ext_wholesale_cost - catalog_sales0.cs_ext_discount_amt + catalog_sales0.cs_ext_sales_price) / 2) AS year_total, 'c' AS sale_type FROM customer AS customer3, catalog_sales AS catalog_sales0, date_dim AS date_dim3 WHERE customer3.c_customer_sk = catalog_sales0.cs_bill_customer_sk AND catalog_sales0.cs_sold_date_sk = date_dim3.d_date_sk GROUP BY customer3.c_customer_id, customer3.c_first_name, customer3.c_last_name, customer3.c_preferred_cust_flag, customer3.c_birth_country, customer3.c_login, customer3.c_email_address, date_dim3.d_year) AS t UNION ALL SELECT customer4.c_customer_id AS customer_id, customer4.c_first_name AS customer_first_name, customer4.c_last_name AS customer_last_name, customer4.c_preferred_cust_flag AS customer_preferred_cust_flag, customer4.c_birth_country AS customer_birth_country, customer4.c_login AS customer_login, customer4.c_email_address AS customer_email_address, date_dim4.d_year AS dyear, SUM((web_sales0.ws_ext_list_price - web_sales0.ws_ext_wholesale_cost - web_sales0.ws_ext_discount_amt + web_sales0.ws_ext_sales_price) / 2) AS year_total, 'w' AS sale_type FROM customer AS customer4, web_sales AS web_sales0, date_dim AS date_dim4 WHERE customer4.c_customer_sk = web_sales0.ws_bill_customer_sk AND web_sales0.ws_sold_date_sk = date_dim4.d_date_sk GROUP BY customer4.c_customer_id, customer4.c_first_name, customer4.c_last_name, customer4.c_preferred_cust_flag, customer4.c_birth_country, customer4.c_login, customer4.c_email_address, date_dim4.d_year) AS t26, (SELECT * FROM (SELECT customer5.c_customer_id AS customer_id, customer5.c_first_name AS customer_first_name, customer5.c_last_name AS customer_last_name, customer5.c_preferred_cust_flag AS customer_preferred_cust_flag, customer5.c_birth_country AS customer_birth_country, customer5.c_login AS customer_login, customer5.c_email_address AS customer_email_address, date_dim5.d_year AS dyear, SUM((store_sales1.ss_ext_list_price - store_sales1.ss_ext_wholesale_cost - store_sales1.ss_ext_discount_amt + store_sales1.ss_ext_sales_price) / 2) AS year_total, 's' AS sale_type FROM customer AS customer5, store_sales AS store_sales1, date_dim AS date_dim5 WHERE customer5.c_customer_sk = store_sales1.ss_customer_sk AND store_sales1.ss_sold_date_sk = date_dim5.d_date_sk GROUP BY customer5.c_customer_id, customer5.c_first_name, customer5.c_last_name, customer5.c_preferred_cust_flag, customer5.c_birth_country, customer5.c_login, customer5.c_email_address, date_dim5.d_year UNION ALL SELECT customer6.c_customer_id AS customer_id, customer6.c_first_name AS customer_first_name, customer6.c_last_name AS customer_last_name, customer6.c_preferred_cust_flag AS customer_preferred_cust_flag, customer6.c_birth_country AS customer_birth_country, customer6.c_login AS customer_login, customer6.c_email_address AS customer_email_address, date_dim6.d_year AS dyear, SUM((catalog_sales1.cs_ext_list_price - catalog_sales1.cs_ext_wholesale_cost - catalog_sales1.cs_ext_discount_amt + catalog_sales1.cs_ext_sales_price) / 2) AS year_total, 'c' AS sale_type FROM customer AS customer6, catalog_sales AS catalog_sales1, date_dim AS date_dim6 WHERE customer6.c_customer_sk = catalog_sales1.cs_bill_customer_sk AND catalog_sales1.cs_sold_date_sk = date_dim6.d_date_sk GROUP BY customer6.c_customer_id, customer6.c_first_name, customer6.c_last_name, customer6.c_preferred_cust_flag, customer6.c_birth_country, customer6.c_login, customer6.c_email_address, date_dim6.d_year) AS t UNION ALL SELECT customer7.c_customer_id AS customer_id, customer7.c_first_name AS customer_first_name, customer7.c_last_name AS customer_last_name, customer7.c_preferred_cust_flag AS customer_preferred_cust_flag, customer7.c_birth_country AS customer_birth_country, customer7.c_login AS customer_login, customer7.c_email_address AS customer_email_address, date_dim7.d_year AS dyear, SUM((web_sales1.ws_ext_list_price - web_sales1.ws_ext_wholesale_cost - web_sales1.ws_ext_discount_amt + web_sales1.ws_ext_sales_price) / 2) AS year_total, 'w' AS sale_type FROM customer AS customer7, web_sales AS web_sales1, date_dim AS date_dim7 WHERE customer7.c_customer_sk = web_sales1.ws_bill_customer_sk AND web_sales1.ws_sold_date_sk = date_dim7.d_date_sk GROUP BY customer7.c_customer_id, customer7.c_first_name, customer7.c_last_name, customer7.c_preferred_cust_flag, customer7.c_birth_country, customer7.c_login, customer7.c_email_address, date_dim7.d_year) AS t40, (SELECT * FROM (SELECT customer8.c_customer_id AS customer_id, customer8.c_first_name AS customer_first_name, customer8.c_last_name AS customer_last_name, customer8.c_preferred_cust_flag AS customer_preferred_cust_flag, customer8.c_birth_country AS customer_birth_country, customer8.c_login AS customer_login, customer8.c_email_address AS customer_email_address, date_dim8.d_year AS dyear, SUM((store_sales2.ss_ext_list_price - store_sales2.ss_ext_wholesale_cost - store_sales2.ss_ext_discount_amt + store_sales2.ss_ext_sales_price) / 2) AS year_total, 's' AS sale_type FROM customer AS customer8, store_sales AS store_sales2, date_dim AS date_dim8 WHERE customer8.c_customer_sk = store_sales2.ss_customer_sk AND store_sales2.ss_sold_date_sk = date_dim8.d_date_sk GROUP BY customer8.c_customer_id, customer8.c_first_name, customer8.c_last_name, customer8.c_preferred_cust_flag, customer8.c_birth_country, customer8.c_login, customer8.c_email_address, date_dim8.d_year UNION ALL SELECT customer9.c_customer_id AS customer_id, customer9.c_first_name AS customer_first_name, customer9.c_last_name AS customer_last_name, customer9.c_preferred_cust_flag AS customer_preferred_cust_flag, customer9.c_birth_country AS customer_birth_country, customer9.c_login AS customer_login, customer9.c_email_address AS customer_email_address, date_dim9.d_year AS dyear, SUM((catalog_sales2.cs_ext_list_price - catalog_sales2.cs_ext_wholesale_cost - catalog_sales2.cs_ext_discount_amt + catalog_sales2.cs_ext_sales_price) / 2) AS year_total, 'c' AS sale_type FROM customer AS customer9, catalog_sales AS catalog_sales2, date_dim AS date_dim9 WHERE customer9.c_customer_sk = catalog_sales2.cs_bill_customer_sk AND catalog_sales2.cs_sold_date_sk = date_dim9.d_date_sk GROUP BY customer9.c_customer_id, customer9.c_first_name, customer9.c_last_name, customer9.c_preferred_cust_flag, customer9.c_birth_country, customer9.c_login, customer9.c_email_address, date_dim9.d_year) AS t UNION ALL SELECT customer10.c_customer_id AS customer_id, customer10.c_first_name AS customer_first_name, customer10.c_last_name AS customer_last_name, customer10.c_preferred_cust_flag AS customer_preferred_cust_flag, customer10.c_birth_country AS customer_birth_country, customer10.c_login AS customer_login, customer10.c_email_address AS customer_email_address, date_dim10.d_year AS dyear, SUM((web_sales2.ws_ext_list_price - web_sales2.ws_ext_wholesale_cost - web_sales2.ws_ext_discount_amt + web_sales2.ws_ext_sales_price) / 2) AS year_total, 'w' AS sale_type FROM customer AS customer10, web_sales AS web_sales2, date_dim AS date_dim10 WHERE customer10.c_customer_sk = web_sales2.ws_bill_customer_sk AND web_sales2.ws_sold_date_sk = date_dim10.d_date_sk GROUP BY customer10.c_customer_id, customer10.c_first_name, customer10.c_last_name, customer10.c_preferred_cust_flag, customer10.c_birth_country, customer10.c_login, customer10.c_email_address, date_dim10.d_year) AS t54, (SELECT * FROM (SELECT customer11.c_customer_id AS customer_id, customer11.c_first_name AS customer_first_name, customer11.c_last_name AS customer_last_name, customer11.c_preferred_cust_flag AS customer_preferred_cust_flag, customer11.c_birth_country AS customer_birth_country, customer11.c_login AS customer_login, customer11.c_email_address AS customer_email_address, date_dim11.d_year AS dyear, SUM((store_sales3.ss_ext_list_price - store_sales3.ss_ext_wholesale_cost - store_sales3.ss_ext_discount_amt + store_sales3.ss_ext_sales_price) / 2) AS year_total, 's' AS sale_type FROM customer AS customer11, store_sales AS store_sales3, date_dim AS date_dim11 WHERE customer11.c_customer_sk = store_sales3.ss_customer_sk AND store_sales3.ss_sold_date_sk = date_dim11.d_date_sk GROUP BY customer11.c_customer_id, customer11.c_first_name, customer11.c_last_name, customer11.c_preferred_cust_flag, customer11.c_birth_country, customer11.c_login, customer11.c_email_address, date_dim11.d_year UNION ALL SELECT customer12.c_customer_id AS customer_id, customer12.c_first_name AS customer_first_name, customer12.c_last_name AS customer_last_name, customer12.c_preferred_cust_flag AS customer_preferred_cust_flag, customer12.c_birth_country AS customer_birth_country, customer12.c_login AS customer_login, customer12.c_email_address AS customer_email_address, date_dim12.d_year AS dyear, SUM((catalog_sales3.cs_ext_list_price - catalog_sales3.cs_ext_wholesale_cost - catalog_sales3.cs_ext_discount_amt + catalog_sales3.cs_ext_sales_price) / 2) AS year_total, 'c' AS sale_type FROM customer AS customer12, catalog_sales AS catalog_sales3, date_dim AS date_dim12 WHERE customer12.c_customer_sk = catalog_sales3.cs_bill_customer_sk AND catalog_sales3.cs_sold_date_sk = date_dim12.d_date_sk GROUP BY customer12.c_customer_id, customer12.c_first_name, customer12.c_last_name, customer12.c_preferred_cust_flag, customer12.c_birth_country, customer12.c_login, customer12.c_email_address, date_dim12.d_year) AS t UNION ALL SELECT customer13.c_customer_id AS customer_id, customer13.c_first_name AS customer_first_name, customer13.c_last_name AS customer_last_name, customer13.c_preferred_cust_flag AS customer_preferred_cust_flag, customer13.c_birth_country AS customer_birth_country, customer13.c_login AS customer_login, customer13.c_email_address AS customer_email_address, date_dim13.d_year AS dyear, SUM((web_sales3.ws_ext_list_price - web_sales3.ws_ext_wholesale_cost - web_sales3.ws_ext_discount_amt + web_sales3.ws_ext_sales_price) / 2) AS year_total, 'w' AS sale_type FROM customer AS customer13, web_sales AS web_sales3, date_dim AS date_dim13 WHERE customer13.c_customer_sk = web_sales3.ws_bill_customer_sk AND web_sales3.ws_sold_date_sk = date_dim13.d_date_sk GROUP BY customer13.c_customer_id, customer13.c_first_name, customer13.c_last_name, customer13.c_preferred_cust_flag, customer13.c_birth_country, customer13.c_login, customer13.c_email_address, date_dim13.d_year) AS t68, (SELECT * FROM (SELECT customer14.c_customer_id AS customer_id, customer14.c_first_name AS customer_first_name, customer14.c_last_name AS customer_last_name, customer14.c_preferred_cust_flag AS customer_preferred_cust_flag, customer14.c_birth_country AS customer_birth_country, customer14.c_login AS customer_login, customer14.c_email_address AS customer_email_address, date_dim14.d_year AS dyear, SUM((store_sales4.ss_ext_list_price - store_sales4.ss_ext_wholesale_cost - store_sales4.ss_ext_discount_amt + store_sales4.ss_ext_sales_price) / 2) AS year_total, 's' AS sale_type FROM customer AS customer14, store_sales AS store_sales4, date_dim AS date_dim14 WHERE customer14.c_customer_sk = store_sales4.ss_customer_sk AND store_sales4.ss_sold_date_sk = date_dim14.d_date_sk GROUP BY customer14.c_customer_id, customer14.c_first_name, customer14.c_last_name, customer14.c_preferred_cust_flag, customer14.c_birth_country, customer14.c_login, customer14.c_email_address, date_dim14.d_year UNION ALL SELECT customer15.c_customer_id AS customer_id, customer15.c_first_name AS customer_first_name, customer15.c_last_name AS customer_last_name, customer15.c_preferred_cust_flag AS customer_preferred_cust_flag, customer15.c_birth_country AS customer_birth_country, customer15.c_login AS customer_login, customer15.c_email_address AS customer_email_address, date_dim15.d_year AS dyear, SUM((catalog_sales4.cs_ext_list_price - catalog_sales4.cs_ext_wholesale_cost - catalog_sales4.cs_ext_discount_amt + catalog_sales4.cs_ext_sales_price) / 2) AS year_total, 'c' AS sale_type FROM customer AS customer15, catalog_sales AS catalog_sales4, date_dim AS date_dim15 WHERE customer15.c_customer_sk = catalog_sales4.cs_bill_customer_sk AND catalog_sales4.cs_sold_date_sk = date_dim15.d_date_sk GROUP BY customer15.c_customer_id, customer15.c_first_name, customer15.c_last_name, customer15.c_preferred_cust_flag, customer15.c_birth_country, customer15.c_login, customer15.c_email_address, date_dim15.d_year) AS t UNION ALL SELECT customer16.c_customer_id AS customer_id, customer16.c_first_name AS customer_first_name, customer16.c_last_name AS customer_last_name, customer16.c_preferred_cust_flag AS customer_preferred_cust_flag, customer16.c_birth_country AS customer_birth_country, customer16.c_login AS customer_login, customer16.c_email_address AS customer_email_address, date_dim16.d_year AS dyear, SUM((web_sales4.ws_ext_list_price - web_sales4.ws_ext_wholesale_cost - web_sales4.ws_ext_discount_amt + web_sales4.ws_ext_sales_price) / 2) AS year_total, 'w' AS sale_type FROM customer AS customer16, web_sales AS web_sales4, date_dim AS date_dim16 WHERE customer16.c_customer_sk = web_sales4.ws_bill_customer_sk AND web_sales4.ws_sold_date_sk = date_dim16.d_date_sk GROUP BY customer16.c_customer_id, customer16.c_first_name, customer16.c_last_name, customer16.c_preferred_cust_flag, customer16.c_birth_country, customer16.c_login, customer16.c_email_address, date_dim16.d_year) AS t82 WHERE t26.customer_id = t12.customer_id AND t12.customer_id = t54.customer_id AND (t12.customer_id = t40.customer_id AND (t12.customer_id = t68.customer_id AND t12.customer_id = t82.customer_id)) AND (t12.sale_type = 's' AND (t40.sale_type = 'c' AND t68.sale_type = 'w') AND (t26.sale_type = 's' AND (t54.sale_type = 'c' AND t82.sale_type = 'w'))) AND (t12.dyear = 2001 AND t26.dyear = 2001 + 1 AND (t40.dyear = 2001 AND (t54.dyear = 2001 + 1 AND t68.dyear = 2001)) AND (t82.dyear = 2001 + 1 AND (t12.year_total > 0 AND t40.year_total > 0) AND (t68.year_total > 0 AND (CASE WHEN t40.year_total > 0 THEN CAST(t54.year_total / t40.year_total AS DECIMAL(17, 2)) ELSE NULL END > CASE WHEN t12.year_total > 0 THEN CAST(t26.year_total / t12.year_total AS DECIMAL(17, 2)) ELSE NULL END AND CASE WHEN t40.year_total > 0 THEN CAST(t54.year_total / t40.year_total AS DECIMAL(17, 2)) ELSE NULL END > CASE WHEN t68.year_total > 0 THEN CAST(t82.year_total / t68.year_total AS DECIMAL(17, 2)) ELSE NULL END)))) ORDER BY t26.customer_id, t26.customer_first_name, t26.customer_last_name, t26.customer_login LIMIT 100",None,tpcds,"with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum(((ss_ext_list_price-ss_ext_wholesale_cost-ss_ext_discount_amt)+ss_ext_sales_price)/2) year_total
       ,'s' sale_type
 from customer
     ,store_sales
     ,date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum((((cs_ext_list_price-cs_ext_wholesale_cost-cs_ext_discount_amt)+cs_ext_sales_price)/2) ) year_total
       ,'c' sale_type
 from customer
     ,catalog_sales
     ,date_dim
 where c_customer_sk = cs_bill_customer_sk
   and cs_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum((((ws_ext_list_price-ws_ext_wholesale_cost-ws_ext_discount_amt)+ws_ext_sales_price)/2) ) year_total
       ,'w' sale_type
 from customer
     ,web_sales
     ,date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
         )
  select  
                  t_s_secyear.customer_id
                 ,t_s_secyear.customer_first_name
                 ,t_s_secyear.customer_last_name
                 ,t_s_secyear.customer_login
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_c_firstyear
     ,year_total t_c_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
   and t_s_firstyear.customer_id = t_c_secyear.customer_id
   and t_s_firstyear.customer_id = t_c_firstyear.customer_id
   and t_s_firstyear.customer_id = t_w_firstyear.customer_id
   and t_s_firstyear.customer_id = t_w_secyear.customer_id
   and t_s_firstyear.sale_type = 's'
   and t_c_firstyear.sale_type = 'c'
   and t_w_firstyear.sale_type = 'w'
   and t_s_secyear.sale_type = 's'
   and t_c_secyear.sale_type = 'c'
   and t_w_secyear.sale_type = 'w'
   and t_s_firstyear.dyear =  2001
   and t_s_secyear.dyear = 2001+1
   and t_c_firstyear.dyear =  2001
   and t_c_secyear.dyear =  2001+1
   and t_w_firstyear.dyear = 2001
   and t_w_secyear.dyear = 2001+1
   and t_s_firstyear.year_total > 0
   and t_c_firstyear.year_total > 0
   and t_w_firstyear.year_total > 0
   and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
   and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end
           > case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
 order by t_s_secyear.customer_id
         ,t_s_secyear.customer_first_name
         ,t_s_secyear.customer_last_name
         ,t_s_secyear.customer_login
limit 100;",RemoveRedundantAliases
97,sql_094.sql,"select  
   substr(w_warehouse_name,1,20)
  ,sm_type
  ,cc_name
  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk <= 30 ) then 1 else 0 end)  as 30_days 
  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk > 30) and 
                 (cs_ship_date_sk - cs_sold_date_sk <= 60) then 1 else 0 end )  as 31_60_days 
  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk > 60) and 
                 (cs_ship_date_sk - cs_sold_date_sk <= 90) then 1 else 0 end)  as 61_90_days 
  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk > 90) and
                 (cs_ship_date_sk - cs_sold_date_sk <= 120) then 1 else 0 end)  as 91_120_days 
  ,sum(case when (cs_ship_date_sk - cs_sold_date_sk  > 120) then 1 else 0 end)  as more_than_120_days 
from
   catalog_sales
  ,warehouse
  ,ship_mode
  ,call_center
  ,date_dim
where
    d_month_seq between 1221 and 1221 + 11
and cs_ship_date_sk   = d_date_sk
and cs_warehouse_sk   = w_warehouse_sk
and cs_ship_mode_sk   = sm_ship_mode_sk
and cs_call_center_sk = cc_call_center_sk
group by
   substr(w_warehouse_name,1,20)
  ,sm_type
  ,cc_name
order by substr(w_warehouse_name,1,20)
        ,sm_type
        ,cc_name
limit 100;","SELECT SUBSTR(warehouse.w_warehouse_name FROM 1 FOR 20), ship_mode.sm_type, call_center.cc_name, SUM(CASE WHEN catalog_sales.cs_ship_date_sk - catalog_sales.cs_sold_date_sk <= 30 THEN 1 ELSE 0 END) AS 30_days, SUM(CASE WHEN catalog_sales.cs_ship_date_sk - catalog_sales.cs_sold_date_sk > 30 AND catalog_sales.cs_ship_date_sk - catalog_sales.cs_sold_date_sk <= 60 THEN 1 ELSE 0 END) AS 31_60_days, SUM(CASE WHEN catalog_sales.cs_ship_date_sk - catalog_sales.cs_sold_date_sk > 60 AND catalog_sales.cs_ship_date_sk - catalog_sales.cs_sold_date_sk <= 90 THEN 1 ELSE 0 END) AS 61_90_days, SUM(CASE WHEN catalog_sales.cs_ship_date_sk - catalog_sales.cs_sold_date_sk > 90 AND catalog_sales.cs_ship_date_sk - catalog_sales.cs_sold_date_sk <= 120 THEN 1 ELSE 0 END) AS 91_120_days, SUM(CASE WHEN catalog_sales.cs_ship_date_sk - catalog_sales.cs_sold_date_sk > 120 THEN 1 ELSE 0 END) AS more_than_120_days FROM catalog_sales INNER JOIN warehouse ON catalog_sales.cs_warehouse_sk = warehouse.w_warehouse_sk INNER JOIN ship_mode ON catalog_sales.cs_ship_mode_sk = ship_mode.sm_ship_mode_sk INNER JOIN call_center ON catalog_sales.cs_call_center_sk = call_center.cc_call_center_sk INNER JOIN (SELECT * FROM date_dim WHERE d_month_seq >= 1221 AND d_month_seq <= 1221 + 11) AS t ON catalog_sales.cs_ship_date_sk = t.d_date_sk GROUP BY SUBSTR(warehouse.w_warehouse_name FROM 1 FOR 20), ship_mode.sm_type, call_center.cc_name ORDER BY SUBSTR(warehouse.w_warehouse_name FROM 1 FOR 20), ship_mode.sm_type, call_center.cc_name LIMIT 100",None,tpcds,"SELECT
  SUBSTRING(
    warehouse101.w_warehouse_name
    FROM
      1 FOR 20
  ),
  ship_mode101.sm_type,
  call_center101.cc_name,
  SUM(
    CASE
      WHEN catalog_sales101.cs_ship_date_sk - catalog_sales101.cs_sold_date_sk <= 30 THEN 1
      ELSE 0
    END
  ) AS 30_days,
  SUM(
    CASE
      WHEN catalog_sales101.cs_ship_date_sk - catalog_sales101.cs_sold_date_sk > 30
      AND catalog_sales101.cs_ship_date_sk - catalog_sales101.cs_sold_date_sk <= 60 THEN 1
      ELSE 0
    END
  ) AS 31_60_days,
  SUM(
    CASE
      WHEN catalog_sales101.cs_ship_date_sk - catalog_sales101.cs_sold_date_sk > 60
      AND catalog_sales101.cs_ship_date_sk - catalog_sales101.cs_sold_date_sk <= 90 THEN 1
      ELSE 0
    END
  ) AS 61_90_days,
  SUM(
    CASE
      WHEN catalog_sales101.cs_ship_date_sk - catalog_sales101.cs_sold_date_sk > 90
      AND catalog_sales101.cs_ship_date_sk - catalog_sales101.cs_sold_date_sk <= 120 THEN 1
      ELSE 0
    END
  ) AS 91_120_days,
  SUM(
    CASE
      WHEN catalog_sales101.cs_ship_date_sk - catalog_sales101.cs_sold_date_sk > 120 THEN 1
      ELSE 0
    END
  ) AS more_than_120_days
FROM
  catalog_sales AS catalog_sales101
  INNER JOIN warehouse AS warehouse101 ON catalog_sales101.cs_warehouse_sk = warehouse101.w_warehouse_sk
  INNER JOIN ship_mode AS ship_mode101 ON catalog_sales101.cs_ship_mode_sk = ship_mode101.sm_ship_mode_sk
  INNER JOIN call_center AS call_center101 ON catalog_sales101.cs_call_center_sk = call_center101.cc_call_center_sk
  INNER JOIN (
    SELECT
      *
    FROM
      date_dim
    WHERE
      d_month_seq >= 1206
      AND d_month_seq <= 1206 + 11
  ) AS t599 ON catalog_sales101.cs_ship_date_sk = t599.d_date_sk
GROUP BY
  SUBSTRING(
    warehouse101.w_warehouse_name
    FROM
      1 FOR 20
  ),
  ship_mode101.sm_type,
  call_center101.cc_name
ORDER BY
  SUBSTRING(
    warehouse101.w_warehouse_name
    FROM
      1 FOR 20
  ),
  ship_mode101.sm_type,
  call_center101.cc_name limit 100;",None
98,sql_095.sql,"select  c_last_name
       ,c_first_name
       ,ca_city
       ,bought_city
       ,ss_ticket_number
       ,extended_price
       ,extended_tax
       ,list_price
 from (select ss_ticket_number
             ,ss_customer_sk
             ,ca_city bought_city
             ,sum(ss_ext_sales_price) extended_price 
             ,sum(ss_ext_list_price) list_price
             ,sum(ss_ext_tax) extended_tax 
       from store_sales
           ,date_dim
           ,store
           ,household_demographics
           ,customer_address 
       where store_sales.ss_sold_date_sk = date_dim.d_date_sk
         and store_sales.ss_store_sk = store.s_store_sk  
        and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk
        and store_sales.ss_addr_sk = customer_address.ca_address_sk
        and date_dim.d_dom between 1 and 2 
        and (household_demographics.hd_dep_count = 5 or
             household_demographics.hd_vehicle_count= 0)
        and date_dim.d_year in (1998,1998+1,1998+2)
        and store.s_city in ('Five Points','Pleasant Hill')
       group by ss_ticket_number
               ,ss_customer_sk
               ,ss_addr_sk,ca_city) dn
      ,customer
      ,customer_address current_addr
 where ss_customer_sk = c_customer_sk
   and customer.c_current_addr_sk = current_addr.ca_address_sk
   and current_addr.ca_city <> bought_city
 order by c_last_name
         ,ss_ticket_number
 limit 100;","SELECT c_last_name, c_first_name, ca_city, bought_city, ss_ticket_number, extended_price, extended_tax, list_price FROM (SELECT t1.ss_ticket_number, t1.ss_customer_sk, t1.bought_city, t1.extended_price, t1.list_price, t1.extended_tax, customer.c_customer_sk, customer.c_current_hdemo_sk, customer.c_current_addr_sk, customer.c_first_shipto_date_sk, customer.c_first_sales_date_sk, customer.c_birth_day, customer.c_birth_month, customer.c_birth_year, customer.c_last_review_date_sk, customer.c_current_cdemo_sk, customer.c_customer_id, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_country, customer.c_login, customer.c_email_address, customer.c_salutation, customer.c_first_name, customer_address0.ca_gmt_offset, customer_address0.ca_address_sk, customer_address0.ca_street_number, customer_address0.ca_street_name, customer_address0.ca_street_type, customer_address0.ca_suite_number, customer_address0.ca_city, customer_address0.ca_county, customer_address0.ca_state, customer_address0.ca_zip, customer_address0.ca_country, customer_address0.ca_location_type, customer_address0.ca_address_id FROM (SELECT store_sales.ss_ticket_number, store_sales.ss_customer_sk, store_sales.ss_addr_sk, customer_address.ca_city AS bought_city, SUM(store_sales.ss_ext_sales_price) AS extended_price, SUM(store_sales.ss_ext_list_price) AS list_price, SUM(store_sales.ss_ext_tax) AS extended_tax FROM store_sales, date_dim, store, household_demographics, customer_address WHERE store_sales.ss_sold_date_sk = date_dim.d_date_sk AND store_sales.ss_store_sk = store.s_store_sk AND (store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk AND store_sales.ss_addr_sk = customer_address.ca_address_sk) AND (date_dim.d_dom >= 1 AND date_dim.d_dom <= 2 AND ((household_demographics.hd_dep_count = 5 OR household_demographics.hd_vehicle_count = 0) AND ((date_dim.d_year = 1998 OR date_dim.d_year = 1998 + 1 OR date_dim.d_year = 1998 + 2) AND (store.s_city = 'Five Points' OR store.s_city = 'Pleasant Hill')))) GROUP BY store_sales.ss_ticket_number, store_sales.ss_customer_sk, store_sales.ss_addr_sk, customer_address.ca_city) AS t1, customer, customer_address AS customer_address0) AS t2 WHERE t2.ss_customer_sk = t2.c_customer_sk AND t2.c_current_addr_sk = t2.ca_address_sk AND t2.ca_city <> t2.bought_city ORDER BY c_last_name, ss_ticket_number LIMIT 100",None,tpcds,"SELECT t1079.c_last_name, t1079.c_first_name, customer_address202.ca_city, t1079.bought_city, t1079.ss_ticket_number, t1079.extended_price, t1079.extended_tax, t1079.list_price

FROM (SELECT *

FROM (SELECT t1074.ss_ticket_number, t1074.ss_customer_sk, customer_address201.ca_city AS bought_city, SUM(t1074.ss_ext_sales_price) AS extended_price, SUM(t1074.ss_ext_list_price) AS list_price, SUM(t1074.ss_ext_tax) AS extended_tax

FROM (SELECT *

FROM (SELECT *

FROM (SELECT *

FROM store_sales AS store_sales100,

(SELECT *

FROM date_dim

WHERE d_dom >= 1 AND d_dom <= 2 AND (d_year = 1998 OR d_year = 1998 + 1 OR d_year = 1998 + 2)) AS t1069

WHERE store_sales100.ss_sold_date_sk = t1069.d_date_sk) AS t1070,

(SELECT *

FROM store

WHERE s_city IN ('Mount Zion', 'Springfield')) AS t1071

WHERE t1070.ss_store_sk = t1071.s_store_sk) AS t1072,

(SELECT *

FROM household_demographics

WHERE hd_dep_count = 6 OR hd_vehicle_count = 1) AS t1073

WHERE t1072.ss_hdemo_sk = t1073.hd_demo_sk) AS t1074,

customer_address AS customer_address201

WHERE t1074.ss_addr_sk = customer_address201.ca_address_sk

GROUP BY t1074.ss_ticket_number, t1074.ss_customer_sk, t1074.ss_addr_sk, customer_address201.ca_city) AS t1078,

customer AS customer100

WHERE t1078.ss_customer_sk = customer100.c_customer_sk) AS t1079,

customer_address AS customer_address202

WHERE t1079.c_current_addr_sk = customer_address202.ca_address_sk AND customer_address202.ca_city <> t1079.bought_city

ORDER BY t1079.c_last_name, t1079.ss_ticket_number

LIMIT 100",None
99,sql_096.sql,"with sr_items as
 (select i_item_id item_id,
        sum(sr_return_quantity) sr_item_qty
 from store_returns,
      item,
      date_dim
 where sr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
	  where d_date in ('1998-02-24','1998-10-12','1998-11-22')))
 and   sr_returned_date_sk   = d_date_sk
 group by i_item_id),
 cr_items as
 (select i_item_id item_id,
        sum(cr_return_quantity) cr_item_qty
 from catalog_returns,
      item,
      date_dim
 where cr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
	  where d_date in ('1998-02-24','1998-10-12','1998-11-22')))
 and   cr_returned_date_sk   = d_date_sk
 group by i_item_id),
 wr_items as
 (select i_item_id item_id,
        sum(wr_return_quantity) wr_item_qty
 from web_returns,
      item,
      date_dim
 where wr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
		where d_date in ('1998-02-24','1998-10-12','1998-11-22')))
 and   wr_returned_date_sk   = d_date_sk
 group by i_item_id)
  select  sr_items.item_id
       ,sr_item_qty
       ,sr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 sr_dev
       ,cr_item_qty
       ,cr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 cr_dev
       ,wr_item_qty
       ,wr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 wr_dev
       ,(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 average
 from sr_items
     ,cr_items
     ,wr_items
 where sr_items.item_id=cr_items.item_id
   and sr_items.item_id=wr_items.item_id 
 order by sr_items.item_id
         ,sr_item_qty
 limit 100;","with sr_items as
 (select i_item_id item_id,
        sum(sr_return_quantity) sr_item_qty
 from store_returns,
      item,
      date_dim
 where sr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
	  where d_date in ('1998-02-24','1998-10-12','1998-11-22')))
 and   sr_returned_date_sk   = d_date_sk
 group by i_item_id),
 cr_items as
 (select i_item_id item_id,
        sum(cr_return_quantity) cr_item_qty
 from catalog_returns,
      item,
      date_dim
 where cr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
	  where d_date in ('1998-02-24','1998-10-12','1998-11-22')))
 and   cr_returned_date_sk   = d_date_sk
 group by i_item_id),
 wr_items as
 (select i_item_id item_id,
        sum(wr_return_quantity) wr_item_qty
 from web_returns,
      item,
      date_dim
 where wr_item_sk = i_item_sk
 and   d_date    in 
	(select d_date
	from date_dim
	where d_week_seq in 
		(select d_week_seq
		from date_dim
		where d_date in ('1998-02-24','1998-10-12','1998-11-22')))
 and   wr_returned_date_sk   = d_date_sk
 group by i_item_id)
  select  sr_items.item_id
       ,sr_item_qty
       ,sr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 sr_dev
       ,cr_item_qty
       ,cr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 cr_dev
       ,wr_item_qty
       ,wr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 wr_dev
       ,(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 average
 from sr_items
     ,cr_items
     ,wr_items
 where sr_items.item_id=cr_items.item_id
   and sr_items.item_id=wr_items.item_id 
 order by sr_items.item_id
         ,sr_item_qty
 limit 100;",ConstantFolding,tpcds,"SELECT t2292.i_item_id AS item_id, t2292.sr_item_qty, t2292.sr_item_qty / (t2292.sr_item_qty + t2306.cr_item_qty + t2320.wr_item_qty) / 3.0 * 100 AS sr_dev, t2306.cr_item_qty, t2306.cr_item_qty / (t2292.sr_item_qty + t2306.cr_item_qty + t2320.wr_item_qty) / 3.0 * 100 AS cr_dev, t2320.wr_item_qty, t2320.wr_item_qty / (t2292.sr_item_qty + t2306.cr_item_qty + t2320.wr_item_qty) / 3.0 * 100 AS wr_dev, (t2292.sr_item_qty + t2306.cr_item_qty + t2320.wr_item_qty) / 3.0 AS average

FROM (SELECT t2285.i_item_id, SUM(CAST(t2285.sr_item_qty * t2290._f1 AS INTEGER)) AS sr_item_qty

FROM (SELECT t2282.i_item_id, t2283.d_date, SUM(CAST(t2282.sr_item_qty * t2283._f2 AS INTEGER)) AS sr_item_qty

FROM (SELECT t2279.sr_returned_date_sk, t2280.i_item_id, SUM(CAST(t2279.sr_item_qty * t2280._f2 AS INTEGER)) AS sr_item_qty

FROM (SELECT sr_returned_date_sk, sr_item_sk, SUM(sr_return_quantity) AS sr_item_qty

FROM store_returns

GROUP BY sr_returned_date_sk, sr_item_sk) AS t2279

INNER JOIN (SELECT i_item_sk, i_item_id, COUNT(*) AS _f2

FROM item

GROUP BY i_item_sk, i_item_id) AS t2280 ON t2279.sr_item_sk = t2280.i_item_sk

GROUP BY t2279.sr_returned_date_sk, t2280.i_item_id) AS t2282

INNER JOIN (SELECT d_date_sk, d_date, COUNT(*) AS _f2

FROM date_dim

GROUP BY d_date_sk, d_date) AS t2283 ON t2282.sr_returned_date_sk = t2283.d_date_sk

GROUP BY t2282.i_item_id, t2283.d_date) AS t2285

INNER JOIN (SELECT t2286.d_date, COALESCE(SUM(t2286._f2 * t2288._f1), 0) AS _f1

FROM (SELECT d_date, d_week_seq, COUNT(*) AS _f2

FROM date_dim

GROUP BY d_date, d_week_seq) AS t2286

INNER JOIN (SELECT d_week_seq, COUNT(*) AS _f1

FROM date_dim

WHERE d_date IN (DATE '1998-06-09', DATE '1998-08-05', DATE '1998-11-11')

GROUP BY d_week_seq) AS t2288 ON t2286.d_week_seq = t2288.d_week_seq

GROUP BY t2286.d_date) AS t2290 ON t2285.d_date = t2290.d_date

GROUP BY t2285.i_item_id) AS t2292

INNER JOIN (SELECT t2299.i_item_id, SUM(CAST(t2299.cr_item_qty * t2304._f1 AS INTEGER)) AS cr_item_qty

FROM (SELECT t2296.i_item_id, t2297.d_date, SUM(CAST(t2296.cr_item_qty * t2297._f2 AS INTEGER)) AS cr_item_qty

FROM (SELECT t2293.cr_returned_date_sk, t2294.i_item_id, SUM(CAST(t2293.cr_item_qty * t2294._f2 AS INTEGER)) AS cr_item_qty

FROM (SELECT cr_returned_date_sk, cr_item_sk, SUM(cr_return_quantity) AS cr_item_qty

FROM catalog_returns

GROUP BY cr_returned_date_sk, cr_item_sk) AS t2293

INNER JOIN (SELECT i_item_sk, i_item_id, COUNT(*) AS _f2

FROM item

GROUP BY i_item_sk, i_item_id) AS t2294 ON t2293.cr_item_sk = t2294.i_item_sk

GROUP BY t2293.cr_returned_date_sk, t2294.i_item_id) AS t2296

INNER JOIN (SELECT d_date_sk, d_date, COUNT(*) AS _f2

FROM date_dim

GROUP BY d_date_sk, d_date) AS t2297 ON t2296.cr_returned_date_sk = t2297.d_date_sk

GROUP BY t2296.i_item_id, t2297.d_date) AS t2299

INNER JOIN (SELECT t2300.d_date, COALESCE(SUM(t2300._f2 * t2302._f1), 0) AS _f1

FROM (SELECT d_date, d_week_seq, COUNT(*) AS _f2

FROM date_dim

GROUP BY d_date, d_week_seq) AS t2300

INNER JOIN (SELECT d_week_seq, COUNT(*) AS _f1

FROM date_dim

WHERE d_date IN (DATE '1998-06-09', DATE '1998-08-05', DATE '1998-11-11')

GROUP BY d_week_seq) AS t2302 ON t2300.d_week_seq = t2302.d_week_seq

GROUP BY t2300.d_date) AS t2304 ON t2299.d_date = t2304.d_date

GROUP BY t2299.i_item_id) AS t2306 ON t2292.i_item_id = t2306.i_item_id

INNER JOIN (SELECT t2313.i_item_id, SUM(CAST(t2313.wr_item_qty * t2318._f1 AS INTEGER)) AS wr_item_qty

FROM (SELECT t2310.i_item_id, t2311.d_date, SUM(CAST(t2310.wr_item_qty * t2311._f2 AS INTEGER)) AS wr_item_qty

FROM (SELECT t2307.wr_returned_date_sk, t2308.i_item_id, SUM(CAST(t2307.wr_item_qty * t2308._f2 AS INTEGER)) AS wr_item_qty

FROM (SELECT wr_returned_date_sk, wr_item_sk, SUM(wr_return_quantity) AS wr_item_qty

FROM web_returns

GROUP BY wr_returned_date_sk, wr_item_sk) AS t2307

INNER JOIN (SELECT i_item_sk, i_item_id, COUNT(*) AS _f2

FROM item

GROUP BY i_item_sk, i_item_id) AS t2308 ON t2307.wr_item_sk = t2308.i_item_sk

GROUP BY t2307.wr_returned_date_sk, t2308.i_item_id) AS t2310

INNER JOIN (SELECT d_date_sk, d_date, COUNT(*) AS _f2

FROM date_dim

GROUP BY d_date_sk, d_date) AS t2311 ON t2310.wr_returned_date_sk = t2311.d_date_sk

GROUP BY t2310.i_item_id, t2311.d_date) AS t2313

INNER JOIN (SELECT t2314.d_date, COALESCE(SUM(t2314._f2 * t2316._f1), 0) AS _f1

FROM (SELECT d_date, d_week_seq, COUNT(*) AS _f2

FROM date_dim

GROUP BY d_date, d_week_seq) AS t2314

INNER JOIN (SELECT d_week_seq, COUNT(*) AS _f1

FROM date_dim

WHERE d_date IN (DATE '1998-06-09', DATE '1998-08-05', DATE '1998-11-11')

GROUP BY d_week_seq) AS t2316 ON t2314.d_week_seq = t2316.d_week_seq

GROUP BY t2314.d_date) AS t2318 ON t2313.d_date = t2318.d_date

GROUP BY t2313.i_item_id) AS t2320 ON t2292.i_item_id = t2320.i_item_id

ORDER BY t2292.i_item_id, t2292.sr_item_qty

LIMIT 100",ConstantFolding
100,sql_097.sql,"select  promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
  (select sum(ss_ext_sales_price) promotions
   from  store_sales
        ,store
        ,promotion
        ,date_dim
        ,customer
        ,customer_address 
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_promo_sk = p_promo_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk 
   and   ca_gmt_offset = -6
   and   i_category = 'Jewelry'
   and   (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
   and   s_gmt_offset = -6
   and   d_year = 2001
   and   d_moy  = 12) promotional_sales,
  (select sum(ss_ext_sales_price) total
   from  store_sales
        ,store
        ,date_dim
        ,customer
        ,customer_address
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk
   and   ca_gmt_offset = -6
   and   i_category = 'Jewelry'
   and   s_gmt_offset = -6
   and   d_year = 2001
   and   d_moy  = 12) all_sales
order by promotions, total
limit 100;","select  promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100
from
  (select sum(ss_ext_sales_price) promotions
   from  store_sales
        ,store
        ,promotion
        ,date_dim
        ,customer
        ,customer_address 
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_promo_sk = p_promo_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk 
   and   ca_gmt_offset = -6
   and   i_category = 'Jewelry'
   and   (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')
   and   s_gmt_offset = -6
   and   d_year = 2001
   and   d_moy  = 12) promotional_sales,
  (select sum(ss_ext_sales_price) total
   from  store_sales
        ,store
        ,date_dim
        ,customer
        ,customer_address
        ,item
   where ss_sold_date_sk = d_date_sk
   and   ss_store_sk = s_store_sk
   and   ss_customer_sk= c_customer_sk
   and   ca_address_sk = c_current_addr_sk
   and   ss_item_sk = i_item_sk
   and   ca_gmt_offset = -6
   and   i_category = 'Jewelry'
   and   s_gmt_offset = -6
   and   d_year = 2001
   and   d_moy  = 12) all_sales
order by promotions, total
limit 100;","ConstantFolding,EliminateLimits",tpcds,"SELECT t2147.promotions, t2158.total, CAST(t2147.promotions AS DECIMAL(15, 4)) / CAST(t2158.total AS DECIMAL(15, 4)) * 100

FROM (SELECT SUM(t2143.ss_ext_sales_price) AS promotions

FROM (SELECT *

FROM (SELECT *

FROM (SELECT *

FROM (SELECT *

FROM (SELECT *

FROM store_sales AS store_sales201,

(SELECT *

FROM store

WHERE s_gmt_offset = -6) AS t2135

WHERE store_sales201.ss_store_sk = t2135.s_store_sk) AS t2136,

(SELECT *

FROM promotion

WHERE p_channel_dmail = 'Y' OR p_channel_email = 'Y' OR p_channel_tv = 'Y') AS t2137

WHERE t2136.ss_promo_sk = t2137.p_promo_sk) AS t2138,

(SELECT *

FROM date_dim

WHERE d_year = 2000 AND d_moy = 11) AS t2139

WHERE t2138.ss_sold_date_sk = t2139.d_date_sk) AS t2140,

customer AS customer201

WHERE t2140.ss_customer_sk = customer201.c_customer_sk) AS t2141,

(SELECT *

FROM customer_address

WHERE ca_gmt_offset = -6) AS t2142

WHERE t2142.ca_address_sk = t2141.c_current_addr_sk) AS t2143,

(SELECT *

FROM item

WHERE i_category = 'Books') AS t2144

WHERE t2143.ss_item_sk = t2144.i_item_sk) AS t2147,

(SELECT SUM(t2154.ss_ext_sales_price) AS total

FROM (SELECT *

FROM (SELECT *

FROM (SELECT *

FROM (SELECT *

FROM store_sales AS store_sales202,

(SELECT *

FROM store

WHERE s_gmt_offset = -6) AS t2148

WHERE store_sales202.ss_store_sk = t2148.s_store_sk) AS t2149,

(SELECT *

FROM date_dim

WHERE d_year = 2000 AND d_moy = 11) AS t2150

WHERE t2149.ss_sold_date_sk = t2150.d_date_sk) AS t2151,

customer AS customer202

WHERE t2151.ss_customer_sk = customer202.c_customer_sk) AS t2152,

(SELECT *

FROM customer_address

WHERE ca_gmt_offset = -6) AS t2153

WHERE t2153.ca_address_sk = t2152.c_current_addr_sk) AS t2154,

(SELECT *

FROM item

WHERE i_category = 'Books') AS t2155

WHERE t2154.ss_item_sk = t2155.i_item_sk) AS t2158

ORDER BY t2147.promotions, t2158.total

LIMIT 100","ConstantFolding,EliminateLimits"
101,sql_098.sql,"with ssr as
 (select s_store_id,
        sum(sales_price) as sales,
        sum(profit) as profit,
        sum(return_amt) as returns,
        sum(net_loss) as profit_loss
 from
  ( select  ss_store_sk as store_sk,
            ss_sold_date_sk  as date_sk,
            ss_ext_sales_price as sales_price,
            ss_net_profit as profit,
            cast(0 as decimal(7,2)) as return_amt,
            cast(0 as decimal(7,2)) as net_loss
    from store_sales
    union all
    select sr_store_sk as store_sk,
           sr_returned_date_sk as date_sk,
           cast(0 as decimal(7,2)) as sales_price,
           cast(0 as decimal(7,2)) as profit,
           sr_return_amt as return_amt,
           sr_net_loss as net_loss
    from store_returns
   ) salesreturns,
     date_dim,
     store
 where date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date) 
                  and (date_add(cast('1998-08-04' as date), 14))
       and store_sk = s_store_sk
 group by s_store_id)
 ,
 csr as
 (select cp_catalog_page_id,
        sum(sales_price) as sales,
        sum(profit) as profit,
        sum(return_amt) as returns,
        sum(net_loss) as profit_loss
 from
  ( select  cs_catalog_page_sk as page_sk,
            cs_sold_date_sk  as date_sk,
            cs_ext_sales_price as sales_price,
            cs_net_profit as profit,
            cast(0 as decimal(7,2)) as return_amt,
            cast(0 as decimal(7,2)) as net_loss
    from catalog_sales
    union all
    select cr_catalog_page_sk as page_sk,
           cr_returned_date_sk as date_sk,
           cast(0 as decimal(7,2)) as sales_price,
           cast(0 as decimal(7,2)) as profit,
           cr_return_amount as return_amt,
           cr_net_loss as net_loss
    from catalog_returns
   ) salesreturns,
     date_dim,
     catalog_page
 where date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (date_add(cast('1998-08-04' as date), 14))
       and page_sk = cp_catalog_page_sk
 group by cp_catalog_page_id)
 ,
 wsr as
 (select web_site_id,
        sum(sales_price) as sales,
        sum(profit) as profit,
        sum(return_amt) as returns,
        sum(net_loss) as profit_loss
 from
  ( select  ws_web_site_sk as wsr_web_site_sk,
            ws_sold_date_sk  as date_sk,
            ws_ext_sales_price as sales_price,
            ws_net_profit as profit,
            cast(0 as decimal(7,2)) as return_amt,
            cast(0 as decimal(7,2)) as net_loss
    from web_sales
    union all
    select ws_web_site_sk as wsr_web_site_sk,
           wr_returned_date_sk as date_sk,
           cast(0 as decimal(7,2)) as sales_price,
           cast(0 as decimal(7,2)) as profit,
           wr_return_amt as return_amt,
           wr_net_loss as net_loss
    from web_returns left outer join web_sales on
         ( wr_item_sk = ws_item_sk
           and wr_order_number = ws_order_number)
   ) salesreturns,
     date_dim,
     web_site
 where date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (date_add(cast('1998-08-04' as date), 14))
       and wsr_web_site_sk = web_site_sk
 group by web_site_id)
  select  channel
        , id
        , sum(sales) as sales
        , sum(returns) as returns
        , sum(profit) as profit
 from 
 (select 'store channel' as channel
        , 'store' || s_store_id as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from   ssr
 union all
 select 'catalog channel' as channel
        , 'catalog_page' || cp_catalog_page_id as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from  csr
 union all
 select 'web channel' as channel
        , 'web_site' || web_site_id as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from   wsr
 ) x
 group by rollup (channel, id)
 order by channel
         ,id
 limit 100;","SELECT channel, id, SUM(sales) AS sales, SUM(calcite_returns) AS calcite_returns, SUM(profit) AS profit FROM (SELECT * FROM (SELECT 'store channel' AS channel, 'store' || s_store_id AS id, SUM(sales_price) AS sales, SUM(return_amt) AS calcite_returns, SUM(profit) - SUM(net_loss) AS profit FROM (SELECT * FROM (SELECT ss_store_sk AS store_sk, ss_sold_date_sk AS date_sk, ss_ext_sales_price AS sales_price, ss_net_profit AS profit, 0 AS return_amt, 0 AS net_loss FROM store_sales) AS t, date_dim, store UNION ALL SELECT * FROM (SELECT sr_store_sk AS store_sk, sr_returned_date_sk AS date_sk, 0 AS sales_price, 0 AS profit, sr_return_amt AS return_amt, sr_net_loss AS net_loss FROM store_returns) AS t0, date_dim AS date_dim0, store AS store0) AS t1 WHERE date_sk = d_date_sk AND d_date >= '1998-08-04' AND d_date <= (CAST('1998-08-04' AS DATE) + INTERVAL '14' DAY) AND store_sk = s_store_sk GROUP BY s_store_id UNION ALL SELECT 'catalog channel' AS channel, 'catalog_page' || cp_catalog_page_id AS id, SUM(sales_price) AS sales, SUM(return_amt) AS calcite_returns, SUM(profit) - SUM(net_loss) AS profit FROM (SELECT * FROM (SELECT cs_catalog_page_sk AS page_sk, cs_sold_date_sk AS date_sk, cs_ext_sales_price AS sales_price, cs_net_profit AS profit, 0 AS return_amt, 0 AS net_loss FROM catalog_sales) AS t6, date_dim AS date_dim1, catalog_page UNION ALL SELECT * FROM (SELECT cr_catalog_page_sk AS page_sk, cr_returned_date_sk AS date_sk, 0 AS sales_price, 0 AS profit, cr_return_amount AS return_amt, cr_net_loss AS net_loss FROM catalog_returns) AS t7, date_dim AS date_dim2, catalog_page AS catalog_page0) AS t8 WHERE date_sk = d_date_sk AND d_date >= '1998-08-04' AND d_date <= (CAST('1998-08-04' AS DATE) + INTERVAL '14' DAY) AND page_sk = cp_catalog_page_sk GROUP BY cp_catalog_page_id) AS t UNION ALL SELECT 'web channel' AS channel, 'web_site' || web_site_id AS id, SUM(sales_price) AS sales, SUM(return_amt) AS calcite_returns, SUM(profit) - SUM(net_loss) AS profit FROM (SELECT * FROM (SELECT ws_web_site_sk AS wsr_web_site_sk, ws_sold_date_sk AS date_sk, ws_ext_sales_price AS sales_price, ws_net_profit AS profit, 0 AS return_amt, 0 AS net_loss FROM web_sales) AS t14, date_dim AS date_dim3, web_site UNION ALL SELECT * FROM (SELECT web_sales0.ws_web_site_sk AS wsr_web_site_sk, web_returns.wr_returned_date_sk AS date_sk, 0 AS sales_price, 0 AS profit, web_returns.wr_return_amt AS return_amt, web_returns.wr_net_loss AS net_loss FROM web_returns LEFT JOIN web_sales AS web_sales0 ON web_returns.wr_item_sk = web_sales0.ws_item_sk AND web_returns.wr_order_number = web_sales0.ws_order_number) AS t15, date_dim AS date_dim4, web_site AS web_site0) AS t16 WHERE date_sk = d_date_sk AND d_date >= '1998-08-04' AND d_date <= (CAST('1998-08-04' AS DATE) + INTERVAL '14' DAY) AND wsr_web_site_sk = web_site_sk GROUP BY web_site_id) AS t21 GROUP BY ROLLUP(channel, id) ORDER BY channel, id LIMIT 100",RemoveNoopOperators,tpcds,"with ssr as
 (select s_store_id,
        sum(sales_price) as sales,
        sum(profit) as profit,
        sum(return_amt) as returns,
        sum(net_loss) as profit_loss
 from
  ( select  ss_store_sk as store_sk,
            ss_sold_date_sk  as date_sk,
            ss_ext_sales_price as sales_price,
            ss_net_profit as profit,
            cast(0 as decimal(7,2)) as return_amt,
            cast(0 as decimal(7,2)) as net_loss
    from store_sales
    union all
    select sr_store_sk as store_sk,
           sr_returned_date_sk as date_sk,
           cast(0 as decimal(7,2)) as sales_price,
           cast(0 as decimal(7,2)) as profit,
           sr_return_amt as return_amt,
           sr_net_loss as net_loss
    from store_returns
   ) salesreturns,
     date_dim,
     store
 where date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date) 
                  and (date_add(cast('1998-08-04' as date), 14))
       and store_sk = s_store_sk
 group by s_store_id)
 ,
 csr as
 (select cp_catalog_page_id,
        sum(sales_price) as sales,
        sum(profit) as profit,
        sum(return_amt) as returns,
        sum(net_loss) as profit_loss
 from
  ( select  cs_catalog_page_sk as page_sk,
            cs_sold_date_sk  as date_sk,
            cs_ext_sales_price as sales_price,
            cs_net_profit as profit,
            cast(0 as decimal(7,2)) as return_amt,
            cast(0 as decimal(7,2)) as net_loss
    from catalog_sales
    union all
    select cr_catalog_page_sk as page_sk,
           cr_returned_date_sk as date_sk,
           cast(0 as decimal(7,2)) as sales_price,
           cast(0 as decimal(7,2)) as profit,
           cr_return_amount as return_amt,
           cr_net_loss as net_loss
    from catalog_returns
   ) salesreturns,
     date_dim,
     catalog_page
 where date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (date_add(cast('1998-08-04' as date), 14))
       and page_sk = cp_catalog_page_sk
 group by cp_catalog_page_id)
 ,
 wsr as
 (select web_site_id,
        sum(sales_price) as sales,
        sum(profit) as profit,
        sum(return_amt) as returns,
        sum(net_loss) as profit_loss
 from
  ( select  ws_web_site_sk as wsr_web_site_sk,
            ws_sold_date_sk  as date_sk,
            ws_ext_sales_price as sales_price,
            ws_net_profit as profit,
            cast(0 as decimal(7,2)) as return_amt,
            cast(0 as decimal(7,2)) as net_loss
    from web_sales
    union all
    select ws_web_site_sk as wsr_web_site_sk,
           wr_returned_date_sk as date_sk,
           cast(0 as decimal(7,2)) as sales_price,
           cast(0 as decimal(7,2)) as profit,
           wr_return_amt as return_amt,
           wr_net_loss as net_loss
    from web_returns left outer join web_sales on
         ( wr_item_sk = ws_item_sk
           and wr_order_number = ws_order_number)
   ) salesreturns,
     date_dim,
     web_site
 where date_sk = d_date_sk
       and d_date between cast('1998-08-04' as date)
                  and (date_add(cast('1998-08-04' as date), 14))
       and wsr_web_site_sk = web_site_sk
 group by web_site_id)
  select  channel
        , id
        , sum(sales) as sales
        , sum(returns) as returns
        , sum(profit) as profit
 from 
 (select 'store channel' as channel
        , 'store' || s_store_id as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from   ssr
 union all
 select 'catalog channel' as channel
        , 'catalog_page' || cp_catalog_page_id as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from  csr
 union all
 select 'web channel' as channel
        , 'web_site' || web_site_id as id
        , sales
        , returns
        , (profit - profit_loss) as profit
 from   wsr
 ) x
 group by rollup (channel, id)
 order by channel
         ,id
 limit 100;","ConstantFolding,RemoveNoopOperators"
102,sql_099.sql,"select  channel, col_name, d_year, d_qoy, i_category, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt FROM (
        SELECT 'store' as channel, 'ss_customer_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price
         FROM store_sales, item, date_dim
         WHERE ss_customer_sk IS NULL
           AND ss_sold_date_sk=d_date_sk
           AND ss_item_sk=i_item_sk
        UNION ALL
        SELECT 'web' as channel, 'ws_ship_addr_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price
         FROM web_sales, item, date_dim
         WHERE ws_ship_addr_sk IS NULL
           AND ws_sold_date_sk=d_date_sk
           AND ws_item_sk=i_item_sk
        UNION ALL
        SELECT 'catalog' as channel, 'cs_bill_addr_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price
         FROM catalog_sales, item, date_dim
         WHERE cs_bill_addr_sk IS NULL
           AND cs_sold_date_sk=d_date_sk
           AND cs_item_sk=i_item_sk) foo
GROUP BY channel, col_name, d_year, d_qoy, i_category
ORDER BY channel, col_name, d_year, d_qoy, i_category
limit 100;","select  channel, col_name, d_year, d_qoy, i_category, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt FROM (
        SELECT 'store' as channel, 'ss_customer_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price
         FROM store_sales, item, date_dim
         WHERE ss_customer_sk IS NULL
           AND ss_sold_date_sk=d_date_sk
           AND ss_item_sk=i_item_sk
        UNION ALL
        SELECT 'web' as channel, 'ws_ship_addr_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price
         FROM web_sales, item, date_dim
         WHERE ws_ship_addr_sk IS NULL
           AND ws_sold_date_sk=d_date_sk
           AND ws_item_sk=i_item_sk
        UNION ALL
        SELECT 'catalog' as channel, 'cs_bill_addr_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price
         FROM catalog_sales, item, date_dim
         WHERE cs_bill_addr_sk IS NULL
           AND cs_sold_date_sk=d_date_sk
           AND cs_item_sk=i_item_sk) foo
GROUP BY channel, col_name, d_year, d_qoy, i_category
ORDER BY channel, col_name, d_year, d_qoy, i_category
limit 100;",CombineUnions,tpcds,"SELECT channel, col_name, d_year, d_qoy, i_category, COALESCE(SUM(sales_cnt), 0) AS sales_cnt, SUM(sales_amt) AS sales_amt

FROM (SELECT channel, col_name, d_year, d_qoy, i_category, COALESCE(SUM(sales_cnt), 0) AS sales_cnt, SUM(sales_amt) AS sales_amt

FROM (SELECT 'store' AS channel, 'ss_addr_sk' AS col_name, date_dim5.d_year, date_dim5.d_qoy, item5.i_category, COUNT(*) AS sales_cnt, SUM(store_sales1.ss_ext_sales_price) AS sales_amt

FROM store_sales AS store_sales1,

item AS item5,

date_dim AS date_dim5

WHERE store_sales1.ss_addr_sk IS NULL AND store_sales1.ss_sold_date_sk = date_dim5.d_date_sk AND store_sales1.ss_item_sk = item5.i_item_sk

GROUP BY item5.i_category, date_dim5.d_year, date_dim5.d_qoy

UNION ALL

SELECT 'web' AS channel, 'ws_ship_cdemo_sk' AS col_name, date_dim6.d_year, date_dim6.d_qoy, item6.i_category, COUNT(*) AS sales_cnt, SUM(web_sales1.ws_ext_sales_price) AS sales_amt

FROM web_sales AS web_sales1,

item AS item6,

date_dim AS date_dim6

WHERE web_sales1.ws_ship_cdemo_sk IS NULL AND web_sales1.ws_sold_date_sk = date_dim6.d_date_sk AND web_sales1.ws_item_sk = item6.i_item_sk

GROUP BY item6.i_category, date_dim6.d_year, date_dim6.d_qoy) AS t27

GROUP BY channel, col_name, d_year, d_qoy, i_category

UNION ALL

SELECT 'catalog' AS channel, 'cs_bill_customer_sk' AS col_name, date_dim7.d_year, date_dim7.d_qoy, item7.i_category, COUNT(*) AS sales_cnt, SUM(catalog_sales1.cs_ext_sales_price) AS sales_amt

FROM catalog_sales AS catalog_sales1,

item AS item7,

date_dim AS date_dim7

WHERE catalog_sales1.cs_bill_customer_sk IS NULL AND catalog_sales1.cs_sold_date_sk = date_dim7.d_date_sk AND catalog_sales1.cs_item_sk = item7.i_item_sk

GROUP BY item7.i_category, date_dim7.d_year, date_dim7.d_qoy) AS t33

GROUP BY channel, col_name, d_year, d_qoy, i_category

ORDER BY channel, col_name, d_year, d_qoy, i_category

LIMIT 100","CollapseProject,ConstantFolding"
